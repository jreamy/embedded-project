
ArduinoCode.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000232c  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  0000232c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000084  20000438  00002768  00020438  2**3
                  ALLOC
  3 .stack        00002004  200004bc  000027ec  00020438  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  0002045c  2**0
                  CONTENTS, READONLY
  6 .debug_info   0000ae6a  00000000  00000000  000204b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f06  00000000  00000000  0002b31f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000bb0  00000000  00000000  0002c225  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000270  00000000  00000000  0002cdd5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000218  00000000  00000000  0002d045  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00011e34  00000000  00000000  0002d25d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00003598  00000000  00000000  0003f091  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0006f739  00000000  00000000  00042629  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00000900  00000000  00000000  000b1d64  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	c0 24 00 20 19 01 00 00 15 01 00 00 15 01 00 00     .$. ............
	...
      2c:	15 01 00 00 00 00 00 00 00 00 00 00 15 01 00 00     ................
      3c:	8d 0d 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      4c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      5c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      6c:	15 01 00 00 15 01 00 00 15 01 00 00 f1 0c 00 00     ................
      7c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      8c:	15 01 00 00 15 01 00 00 00 00 00 00 00 00 00 00     ................
      9c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      ac:	15 01 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000438 	.word	0x20000438
      d4:	00000000 	.word	0x00000000
      d8:	0000232c 	.word	0x0000232c

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	2000043c 	.word	0x2000043c
     108:	0000232c 	.word	0x0000232c
     10c:	0000232c 	.word	0x0000232c
     110:	00000000 	.word	0x00000000

00000114 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     114:	e7fe      	b.n	114 <Dummy_Handler>
	...

00000118 <Reset_Handler>:
{
     118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
     11a:	4a2a      	ldr	r2, [pc, #168]	; (1c4 <Reset_Handler+0xac>)
     11c:	4b2a      	ldr	r3, [pc, #168]	; (1c8 <Reset_Handler+0xb0>)
     11e:	429a      	cmp	r2, r3
     120:	d011      	beq.n	146 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
     122:	001a      	movs	r2, r3
     124:	4b29      	ldr	r3, [pc, #164]	; (1cc <Reset_Handler+0xb4>)
     126:	429a      	cmp	r2, r3
     128:	d20d      	bcs.n	146 <Reset_Handler+0x2e>
     12a:	4a29      	ldr	r2, [pc, #164]	; (1d0 <Reset_Handler+0xb8>)
     12c:	3303      	adds	r3, #3
     12e:	1a9b      	subs	r3, r3, r2
     130:	089b      	lsrs	r3, r3, #2
     132:	3301      	adds	r3, #1
     134:	009b      	lsls	r3, r3, #2
     136:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
     138:	4823      	ldr	r0, [pc, #140]	; (1c8 <Reset_Handler+0xb0>)
     13a:	4922      	ldr	r1, [pc, #136]	; (1c4 <Reset_Handler+0xac>)
     13c:	588c      	ldr	r4, [r1, r2]
     13e:	5084      	str	r4, [r0, r2]
     140:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     142:	429a      	cmp	r2, r3
     144:	d1fa      	bne.n	13c <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
     146:	4a23      	ldr	r2, [pc, #140]	; (1d4 <Reset_Handler+0xbc>)
     148:	4b23      	ldr	r3, [pc, #140]	; (1d8 <Reset_Handler+0xc0>)
     14a:	429a      	cmp	r2, r3
     14c:	d20a      	bcs.n	164 <Reset_Handler+0x4c>
     14e:	43d3      	mvns	r3, r2
     150:	4921      	ldr	r1, [pc, #132]	; (1d8 <Reset_Handler+0xc0>)
     152:	185b      	adds	r3, r3, r1
     154:	2103      	movs	r1, #3
     156:	438b      	bics	r3, r1
     158:	3304      	adds	r3, #4
     15a:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
     15c:	2100      	movs	r1, #0
     15e:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
     160:	4293      	cmp	r3, r2
     162:	d1fc      	bne.n	15e <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     164:	4a1d      	ldr	r2, [pc, #116]	; (1dc <Reset_Handler+0xc4>)
     166:	21ff      	movs	r1, #255	; 0xff
     168:	4b1d      	ldr	r3, [pc, #116]	; (1e0 <Reset_Handler+0xc8>)
     16a:	438b      	bics	r3, r1
     16c:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     16e:	39fd      	subs	r1, #253	; 0xfd
     170:	2390      	movs	r3, #144	; 0x90
     172:	005b      	lsls	r3, r3, #1
     174:	4a1b      	ldr	r2, [pc, #108]	; (1e4 <Reset_Handler+0xcc>)
     176:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
     178:	4a1b      	ldr	r2, [pc, #108]	; (1e8 <Reset_Handler+0xd0>)
     17a:	78d3      	ldrb	r3, [r2, #3]
     17c:	2503      	movs	r5, #3
     17e:	43ab      	bics	r3, r5
     180:	2402      	movs	r4, #2
     182:	4323      	orrs	r3, r4
     184:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
     186:	78d3      	ldrb	r3, [r2, #3]
     188:	270c      	movs	r7, #12
     18a:	43bb      	bics	r3, r7
     18c:	2608      	movs	r6, #8
     18e:	4333      	orrs	r3, r6
     190:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
     192:	4b16      	ldr	r3, [pc, #88]	; (1ec <Reset_Handler+0xd4>)
     194:	7b98      	ldrb	r0, [r3, #14]
     196:	2230      	movs	r2, #48	; 0x30
     198:	4390      	bics	r0, r2
     19a:	2220      	movs	r2, #32
     19c:	4310      	orrs	r0, r2
     19e:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
     1a0:	7b99      	ldrb	r1, [r3, #14]
     1a2:	43b9      	bics	r1, r7
     1a4:	4331      	orrs	r1, r6
     1a6:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
     1a8:	7b9a      	ldrb	r2, [r3, #14]
     1aa:	43aa      	bics	r2, r5
     1ac:	4322      	orrs	r2, r4
     1ae:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
     1b0:	4a0f      	ldr	r2, [pc, #60]	; (1f0 <Reset_Handler+0xd8>)
     1b2:	6853      	ldr	r3, [r2, #4]
     1b4:	2180      	movs	r1, #128	; 0x80
     1b6:	430b      	orrs	r3, r1
     1b8:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     1ba:	4b0e      	ldr	r3, [pc, #56]	; (1f4 <Reset_Handler+0xdc>)
     1bc:	4798      	blx	r3
        main();
     1be:	4b0e      	ldr	r3, [pc, #56]	; (1f8 <Reset_Handler+0xe0>)
     1c0:	4798      	blx	r3
     1c2:	e7fe      	b.n	1c2 <Reset_Handler+0xaa>
     1c4:	0000232c 	.word	0x0000232c
     1c8:	20000000 	.word	0x20000000
     1cc:	20000434 	.word	0x20000434
     1d0:	20000004 	.word	0x20000004
     1d4:	20000438 	.word	0x20000438
     1d8:	200004bc 	.word	0x200004bc
     1dc:	e000ed00 	.word	0xe000ed00
     1e0:	00000000 	.word	0x00000000
     1e4:	41007000 	.word	0x41007000
     1e8:	41005000 	.word	0x41005000
     1ec:	41004800 	.word	0x41004800
     1f0:	41004000 	.word	0x41004000
     1f4:	000020f5 	.word	0x000020f5
     1f8:	00000835 	.word	0x00000835

000001fc <SystemInit>:
#define MAIN_OSC_FREQ (32768ul)

void SystemInit( void )
{
  /* Set 1 Flash Wait State for 48MHz, cf tables 20.9 and 35.27 in SAMD21 Datasheet */
  NVMCTRL->CTRLB.bit.RWS = NVMCTRL_CTRLB_RWS_HALF_Val ;
     1fc:	4a57      	ldr	r2, [pc, #348]	; (35c <SystemInit+0x160>)
     1fe:	6853      	ldr	r3, [r2, #4]
     200:	211e      	movs	r1, #30
     202:	438b      	bics	r3, r1
     204:	391c      	subs	r1, #28
     206:	430b      	orrs	r3, r1
     208:	6053      	str	r3, [r2, #4]

  /* Turn on the digital interface clock */
  PM->APBAMASK.reg |= PM_APBAMASK_GCLK ;
     20a:	4a55      	ldr	r2, [pc, #340]	; (360 <SystemInit+0x164>)
     20c:	6993      	ldr	r3, [r2, #24]
     20e:	3106      	adds	r1, #6
     210:	430b      	orrs	r3, r1
     212:	6193      	str	r3, [r2, #24]

  /* ----------------------------------------------------------------------------------------------
   * 1) Enable XOSC32K clock (External on-board 32.768Hz oscillator)
   */
  SYSCTRL->XOSC32K.reg = SYSCTRL_XOSC32K_STARTUP( 0x6u ) | /* cf table 15.10 of product datasheet in chapter 15.8.6 */
     214:	4b53      	ldr	r3, [pc, #332]	; (364 <SystemInit+0x168>)
     216:	4a54      	ldr	r2, [pc, #336]	; (368 <SystemInit+0x16c>)
     218:	829a      	strh	r2, [r3, #20]
                         SYSCTRL_XOSC32K_XTALEN | SYSCTRL_XOSC32K_EN32K ;
  SYSCTRL->XOSC32K.bit.ENABLE = 1 ; /* separate call, as described in chapter 15.6.3 */
     21a:	8a9a      	ldrh	r2, [r3, #20]
     21c:	2102      	movs	r1, #2
     21e:	430a      	orrs	r2, r1
     220:	829a      	strh	r2, [r3, #20]

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_XOSC32KRDY) == 0 )
     222:	0019      	movs	r1, r3
     224:	2202      	movs	r2, #2
     226:	68cb      	ldr	r3, [r1, #12]
     228:	421a      	tst	r2, r3
     22a:	d0fc      	beq.n	226 <SystemInit+0x2a>

  /* Software reset the module to ensure it is re-initialized correctly */
  /* Note: Due to synchronization, there is a delay from writing CTRL.SWRST until the reset is complete.
   * CTRL.SWRST and STATUS.SYNCBUSY will both be cleared when the reset is complete, as described in chapter 13.8.1
   */
  GCLK->CTRL.reg = GCLK_CTRL_SWRST ;
     22c:	2201      	movs	r2, #1
     22e:	4b4f      	ldr	r3, [pc, #316]	; (36c <SystemInit+0x170>)
     230:	701a      	strb	r2, [r3, #0]

  while ( (GCLK->CTRL.reg & GCLK_CTRL_SWRST) && (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY) )
     232:	001a      	movs	r2, r3
     234:	2101      	movs	r1, #1
     236:	7813      	ldrb	r3, [r2, #0]
     238:	420b      	tst	r3, r1
     23a:	d003      	beq.n	244 <SystemInit+0x48>
     23c:	7853      	ldrb	r3, [r2, #1]
     23e:	b25b      	sxtb	r3, r3
     240:	2b00      	cmp	r3, #0
     242:	dbf8      	blt.n	236 <SystemInit+0x3a>
  }

  /* ----------------------------------------------------------------------------------------------
   * 2) Put XOSC32K as source of Generic Clock Generator 1
   */
  GCLK->GENDIV.reg = GCLK_GENDIV_ID( GENERIC_CLOCK_GENERATOR_XOSC32K ) ; // Generic Clock Generator 1
     244:	2201      	movs	r2, #1
     246:	4b49      	ldr	r3, [pc, #292]	; (36c <SystemInit+0x170>)
     248:	609a      	str	r2, [r3, #8]

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
     24a:	001a      	movs	r2, r3
     24c:	7853      	ldrb	r3, [r2, #1]
     24e:	b25b      	sxtb	r3, r3
     250:	2b00      	cmp	r3, #0
     252:	dbfb      	blt.n	24c <SystemInit+0x50>
  {
    /* Wait for synchronization */
  }

  /* Write Generic Clock Generator 1 configuration */
  GCLK->GENCTRL.reg = GCLK_GENCTRL_ID( GENERIC_CLOCK_GENERATOR_XOSC32K ) | // Generic Clock Generator 1
     254:	4a46      	ldr	r2, [pc, #280]	; (370 <SystemInit+0x174>)
     256:	4b45      	ldr	r3, [pc, #276]	; (36c <SystemInit+0x170>)
     258:	605a      	str	r2, [r3, #4]
                      GCLK_GENCTRL_SRC_XOSC32K | // Selected source is External 32KHz Oscillator
//                      GCLK_GENCTRL_OE | // Output clock to a pin for tests
                      GCLK_GENCTRL_GENEN ;

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
     25a:	001a      	movs	r2, r3
     25c:	7853      	ldrb	r3, [r2, #1]
     25e:	b25b      	sxtb	r3, r3
     260:	2b00      	cmp	r3, #0
     262:	dbfb      	blt.n	25c <SystemInit+0x60>
  }

  /* ----------------------------------------------------------------------------------------------
   * 3) Put Generic Clock Generator 1 as source for Generic Clock Multiplexer 0 (DFLL48M reference)
   */
  GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID( GENERIC_CLOCK_MULTIPLEXER_DFLL48M ) | // Generic Clock Multiplexer 0
     264:	2282      	movs	r2, #130	; 0x82
     266:	01d2      	lsls	r2, r2, #7
     268:	4b40      	ldr	r3, [pc, #256]	; (36c <SystemInit+0x170>)
     26a:	805a      	strh	r2, [r3, #2]
                      GCLK_CLKCTRL_GEN_GCLK1 | // Generic Clock Generator 1 is source
                      GCLK_CLKCTRL_CLKEN ;

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
     26c:	001a      	movs	r2, r3
     26e:	7853      	ldrb	r3, [r2, #1]
     270:	b25b      	sxtb	r3, r3
     272:	2b00      	cmp	r3, #0
     274:	dbfb      	blt.n	26e <SystemInit+0x72>
   */

  /* DFLL Configuration in Closed Loop mode, cf product datasheet chapter 15.6.7.1 - Closed-Loop Operation */

  /* Remove the OnDemand mode, Bug http://avr32.icgroup.norway.atmel.com/bugzilla/show_bug.cgi?id=9905 */
  SYSCTRL->DFLLCTRL.bit.ONDEMAND = 0 ;
     276:	4a3b      	ldr	r2, [pc, #236]	; (364 <SystemInit+0x168>)
     278:	8c93      	ldrh	r3, [r2, #36]	; 0x24
     27a:	2180      	movs	r1, #128	; 0x80
     27c:	438b      	bics	r3, r1
     27e:	8493      	strh	r3, [r2, #36]	; 0x24

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) == 0 )
     280:	0011      	movs	r1, r2
     282:	2210      	movs	r2, #16
     284:	68cb      	ldr	r3, [r1, #12]
     286:	421a      	tst	r2, r3
     288:	d0fc      	beq.n	284 <SystemInit+0x88>
  {
    /* Wait for synchronization */
  }

  SYSCTRL->DFLLMUL.reg = SYSCTRL_DFLLMUL_CSTEP( 31 ) | // Coarse step is 31, half of the max value
     28a:	4a3a      	ldr	r2, [pc, #232]	; (374 <SystemInit+0x178>)
     28c:	4b35      	ldr	r3, [pc, #212]	; (364 <SystemInit+0x168>)
     28e:	62da      	str	r2, [r3, #44]	; 0x2c
                         SYSCTRL_DFLLMUL_FSTEP( 511 ) | // Fine step is 511, half of the max value
                         SYSCTRL_DFLLMUL_MUL( (MASTER_CLOCK_FREQ/MAIN_OSC_FREQ) ) ; // External 32KHz is the reference

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) == 0 )
     290:	0019      	movs	r1, r3
     292:	2210      	movs	r2, #16
     294:	68cb      	ldr	r3, [r1, #12]
     296:	421a      	tst	r2, r3
     298:	d0fc      	beq.n	294 <SystemInit+0x98>
  {
    /* Wait for synchronization */
  }

  /* Write full configuration to DFLL control register */
  SYSCTRL->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_MODE | /* Enable the closed loop mode */
     29a:	4a32      	ldr	r2, [pc, #200]	; (364 <SystemInit+0x168>)
     29c:	8c93      	ldrh	r3, [r2, #36]	; 0x24
     29e:	4936      	ldr	r1, [pc, #216]	; (378 <SystemInit+0x17c>)
     2a0:	430b      	orrs	r3, r1
     2a2:	8493      	strh	r3, [r2, #36]	; 0x24
                           SYSCTRL_DFLLCTRL_WAITLOCK |
                           SYSCTRL_DFLLCTRL_QLDIS ; /* Disable Quick lock */

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) == 0 )
     2a4:	0011      	movs	r1, r2
     2a6:	2210      	movs	r2, #16
     2a8:	68cb      	ldr	r3, [r1, #12]
     2aa:	421a      	tst	r2, r3
     2ac:	d0fc      	beq.n	2a8 <SystemInit+0xac>
  {
    /* Wait for synchronization */
  }

  /* Enable the DFLL */
  SYSCTRL->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_ENABLE ;
     2ae:	4a2d      	ldr	r2, [pc, #180]	; (364 <SystemInit+0x168>)
     2b0:	8c93      	ldrh	r3, [r2, #36]	; 0x24
     2b2:	2102      	movs	r1, #2
     2b4:	430b      	orrs	r3, r1
     2b6:	8493      	strh	r3, [r2, #36]	; 0x24

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKC) == 0 ||
     2b8:	317e      	adds	r1, #126	; 0x7e
          (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKF) == 0 )
     2ba:	2040      	movs	r0, #64	; 0x40
  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKC) == 0 ||
     2bc:	68d3      	ldr	r3, [r2, #12]
     2be:	4219      	tst	r1, r3
     2c0:	d0fc      	beq.n	2bc <SystemInit+0xc0>
          (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKF) == 0 )
     2c2:	68d3      	ldr	r3, [r2, #12]
  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKC) == 0 ||
     2c4:	4218      	tst	r0, r3
     2c6:	d0f9      	beq.n	2bc <SystemInit+0xc0>
  {
    /* Wait for locks flags */
  }

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) == 0 )
     2c8:	4926      	ldr	r1, [pc, #152]	; (364 <SystemInit+0x168>)
     2ca:	2210      	movs	r2, #16
     2cc:	68cb      	ldr	r3, [r1, #12]
     2ce:	421a      	tst	r2, r3
     2d0:	d0fc      	beq.n	2cc <SystemInit+0xd0>
  }

  /* ----------------------------------------------------------------------------------------------
   * 5) Switch Generic Clock Generator 0 to DFLL48M. CPU will run at 48MHz.
   */
  GCLK->GENDIV.reg = GCLK_GENDIV_ID( GENERIC_CLOCK_GENERATOR_MAIN ) ; // Generic Clock Generator 0
     2d2:	2200      	movs	r2, #0
     2d4:	4b25      	ldr	r3, [pc, #148]	; (36c <SystemInit+0x170>)
     2d6:	609a      	str	r2, [r3, #8]

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
     2d8:	001a      	movs	r2, r3
     2da:	7853      	ldrb	r3, [r2, #1]
     2dc:	b25b      	sxtb	r3, r3
     2de:	2b00      	cmp	r3, #0
     2e0:	dbfb      	blt.n	2da <SystemInit+0xde>
  {
    /* Wait for synchronization */
  }

  /* Write Generic Clock Generator 0 configuration */
  GCLK->GENCTRL.reg = GCLK_GENCTRL_ID( GENERIC_CLOCK_GENERATOR_MAIN ) | // Generic Clock Generator 0
     2e2:	4a26      	ldr	r2, [pc, #152]	; (37c <SystemInit+0x180>)
     2e4:	4b21      	ldr	r3, [pc, #132]	; (36c <SystemInit+0x170>)
     2e6:	605a      	str	r2, [r3, #4]
                      GCLK_GENCTRL_SRC_DFLL48M | // Selected source is DFLL 48MHz
//                      GCLK_GENCTRL_OE | // Output clock to a pin for tests
                      GCLK_GENCTRL_IDC | // Set 50/50 duty cycle
                      GCLK_GENCTRL_GENEN ;

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
     2e8:	001a      	movs	r2, r3
     2ea:	7853      	ldrb	r3, [r2, #1]
     2ec:	b25b      	sxtb	r3, r3
     2ee:	2b00      	cmp	r3, #0
     2f0:	dbfb      	blt.n	2ea <SystemInit+0xee>
  }

  /* ----------------------------------------------------------------------------------------------
   * 6) Modify PRESCaler value of OSC8M to have 8MHz
   */
  SYSCTRL->OSC8M.bit.PRESC = SYSCTRL_OSC8M_PRESC_1_Val ;
     2f2:	4b1c      	ldr	r3, [pc, #112]	; (364 <SystemInit+0x168>)
     2f4:	6a1a      	ldr	r2, [r3, #32]
     2f6:	4922      	ldr	r1, [pc, #136]	; (380 <SystemInit+0x184>)
     2f8:	4011      	ands	r1, r2
     2fa:	2280      	movs	r2, #128	; 0x80
     2fc:	0052      	lsls	r2, r2, #1
     2fe:	430a      	orrs	r2, r1
     300:	621a      	str	r2, [r3, #32]
  SYSCTRL->OSC8M.bit.ONDEMAND = 0 ;
     302:	6a1a      	ldr	r2, [r3, #32]
     304:	2180      	movs	r1, #128	; 0x80
     306:	438a      	bics	r2, r1
     308:	621a      	str	r2, [r3, #32]

  /* ----------------------------------------------------------------------------------------------
   * 7) Put OSC8M as source for Generic Clock Generator 3
   */
  GCLK->GENDIV.reg = GCLK_GENDIV_ID( GENERIC_CLOCK_GENERATOR_OSC8M ) ; // Generic Clock Generator 3
     30a:	4b18      	ldr	r3, [pc, #96]	; (36c <SystemInit+0x170>)
     30c:	2203      	movs	r2, #3
     30e:	609a      	str	r2, [r3, #8]

  /* Write Generic Clock Generator 3 configuration */
  GCLK->GENCTRL.reg = GCLK_GENCTRL_ID( GENERIC_CLOCK_GENERATOR_OSC8M ) | // Generic Clock Generator 3
     310:	4a1c      	ldr	r2, [pc, #112]	; (384 <SystemInit+0x188>)
     312:	605a      	str	r2, [r3, #4]
                      GCLK_GENCTRL_SRC_OSC8M | // Selected source is RC OSC 8MHz (already enabled at reset)
//                      GCLK_GENCTRL_OE | // Output clock to a pin for tests
                      GCLK_GENCTRL_GENEN ;

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
     314:	001a      	movs	r2, r3
     316:	7853      	ldrb	r3, [r2, #1]
     318:	b25b      	sxtb	r3, r3
     31a:	2b00      	cmp	r3, #0
     31c:	dbfb      	blt.n	316 <SystemInit+0x11a>

  /*
   * Now that all system clocks are configured, we can set CPU and APBx BUS clocks.
   * There values are normally the one present after Reset.
   */
  PM->CPUSEL.reg  = PM_CPUSEL_CPUDIV_DIV1 ;
     31e:	4b10      	ldr	r3, [pc, #64]	; (360 <SystemInit+0x164>)
     320:	2200      	movs	r2, #0
     322:	721a      	strb	r2, [r3, #8]
  PM->APBASEL.reg = PM_APBASEL_APBADIV_DIV1_Val ;
     324:	725a      	strb	r2, [r3, #9]
  PM->APBBSEL.reg = PM_APBBSEL_APBBDIV_DIV1_Val ;
     326:	729a      	strb	r2, [r3, #10]
  PM->APBCSEL.reg = PM_APBCSEL_APBCDIV_DIV1_Val ;
     328:	72da      	strb	r2, [r3, #11]

  SystemCoreClock=MASTER_CLOCK_FREQ ;
     32a:	4a17      	ldr	r2, [pc, #92]	; (388 <SystemInit+0x18c>)
     32c:	4b17      	ldr	r3, [pc, #92]	; (38c <SystemInit+0x190>)
     32e:	601a      	str	r2, [r3, #0]
  /* ----------------------------------------------------------------------------------------------
   * 8) Load ADC factory calibration values
   */

  // ADC Bias Calibration
  uint32_t bias = (*((uint32_t *) ADC_FUSES_BIASCAL_ADDR) & ADC_FUSES_BIASCAL_Msk) >> ADC_FUSES_BIASCAL_Pos;
     330:	4b17      	ldr	r3, [pc, #92]	; (390 <SystemInit+0x194>)
     332:	6819      	ldr	r1, [r3, #0]

  // ADC Linearity bits 4:0
  uint32_t linearity = (*((uint32_t *) ADC_FUSES_LINEARITY_0_ADDR) & ADC_FUSES_LINEARITY_0_Msk) >> ADC_FUSES_LINEARITY_0_Pos;
     334:	4b17      	ldr	r3, [pc, #92]	; (394 <SystemInit+0x198>)
     336:	6818      	ldr	r0, [r3, #0]
     338:	0ec0      	lsrs	r0, r0, #27
  uint32_t bias = (*((uint32_t *) ADC_FUSES_BIASCAL_ADDR) & ADC_FUSES_BIASCAL_Msk) >> ADC_FUSES_BIASCAL_Pos;
     33a:	068b      	lsls	r3, r1, #26
     33c:	0f5b      	lsrs	r3, r3, #29

  // ADC Linearity bits 7:5
  linearity |= ((*((uint32_t *) ADC_FUSES_LINEARITY_1_ADDR) & ADC_FUSES_LINEARITY_1_Msk) >> ADC_FUSES_LINEARITY_1_Pos) << 5;

  ADC->CALIB.reg = ADC_CALIB_BIAS_CAL(bias) | ADC_CALIB_LINEARITY_CAL(linearity);
     33e:	021b      	lsls	r3, r3, #8
  linearity |= ((*((uint32_t *) ADC_FUSES_LINEARITY_1_ADDR) & ADC_FUSES_LINEARITY_1_Msk) >> ADC_FUSES_LINEARITY_1_Pos) << 5;
     340:	0149      	lsls	r1, r1, #5
     342:	22ff      	movs	r2, #255	; 0xff
     344:	400a      	ands	r2, r1
  ADC->CALIB.reg = ADC_CALIB_BIAS_CAL(bias) | ADC_CALIB_LINEARITY_CAL(linearity);
     346:	4302      	orrs	r2, r0
     348:	4313      	orrs	r3, r2
     34a:	4a13      	ldr	r2, [pc, #76]	; (398 <SystemInit+0x19c>)
     34c:	8513      	strh	r3, [r2, #40]	; 0x28

  /*
   * 9) Disable automatic NVM write operations
   */
  NVMCTRL->CTRLB.bit.MANW = 1;
     34e:	4a03      	ldr	r2, [pc, #12]	; (35c <SystemInit+0x160>)
     350:	6853      	ldr	r3, [r2, #4]
     352:	2180      	movs	r1, #128	; 0x80
     354:	430b      	orrs	r3, r1
     356:	6053      	str	r3, [r2, #4]
}
     358:	4770      	bx	lr
     35a:	46c0      	nop			; (mov r8, r8)
     35c:	41004000 	.word	0x41004000
     360:	40000400 	.word	0x40000400
     364:	40000800 	.word	0x40000800
     368:	0000060c 	.word	0x0000060c
     36c:	40000c00 	.word	0x40000c00
     370:	00010501 	.word	0x00010501
     374:	7dff05b8 	.word	0x7dff05b8
     378:	00000a04 	.word	0x00000a04
     37c:	00030700 	.word	0x00030700
     380:	fffffcff 	.word	0xfffffcff
     384:	00010603 	.word	0x00010603
     388:	02dc6c00 	.word	0x02dc6c00
     38c:	20000000 	.word	0x20000000
     390:	00806024 	.word	0x00806024
     394:	00806020 	.word	0x00806020
     398:	42004000 	.word	0x42004000

0000039c <i2c_init>:
//------------------------------------------------------------------------------

//==============================================================================
void i2c_init(uint32_t baudrate) {
    // Set up i2c forwarding to serial
    I2C_callback.rx = _SERCOM3_Handler;
     39c:	4b0b      	ldr	r3, [pc, #44]	; (3cc <i2c_init+0x30>)
     39e:	4a0c      	ldr	r2, [pc, #48]	; (3d0 <i2c_init+0x34>)
     3a0:	601a      	str	r2, [r3, #0]
    I2C_callback.tx = _SERCOM3_Handler;
     3a2:	605a      	str	r2, [r3, #4]

    // Remove these
    _i2c_init = 0;
     3a4:	2300      	movs	r3, #0
     3a6:	4a0b      	ldr	r2, [pc, #44]	; (3d4 <i2c_init+0x38>)
     3a8:	7013      	strb	r3, [r2, #0]
    _i2c_addr = 0;
     3aa:	4a0b      	ldr	r2, [pc, #44]	; (3d8 <i2c_init+0x3c>)
     3ac:	7013      	strb	r3, [r2, #0]
    _i2c_mode = 0;
     3ae:	4a0b      	ldr	r2, [pc, #44]	; (3dc <i2c_init+0x40>)
     3b0:	7013      	strb	r3, [r2, #0]
    _i2c_flag = 0;
     3b2:	4a0b      	ldr	r2, [pc, #44]	; (3e0 <i2c_init+0x44>)
     3b4:	7013      	strb	r3, [r2, #0]
    _reading = 0;
     3b6:	4a0b      	ldr	r2, [pc, #44]	; (3e4 <i2c_init+0x48>)
     3b8:	7013      	strb	r3, [r2, #0]
    _i2c_rx_buff = 0;
     3ba:	4a0b      	ldr	r2, [pc, #44]	; (3e8 <i2c_init+0x4c>)
     3bc:	7013      	strb	r3, [r2, #0]

    // Set the default rx/tx callbacks
    _i2c_default = _i2c_default_func;
     3be:	4b0b      	ldr	r3, [pc, #44]	; (3ec <i2c_init+0x50>)
     3c0:	4a0b      	ldr	r2, [pc, #44]	; (3f0 <i2c_init+0x54>)
     3c2:	6013      	str	r3, [r2, #0]
    _i2c_callback = _i2c_default_func;
     3c4:	4a0b      	ldr	r2, [pc, #44]	; (3f4 <i2c_init+0x58>)
     3c6:	6013      	str	r3, [r2, #0]
    I2C_SERCOM->I2CM.INTENSET.bit.SB = 1;
    
    NVIC_SetPriority(SERCOM3_IRQn, 3);
    NVIC_EnableIRQ(SERCOM3_IRQn);
    */
}
     3c8:	4770      	bx	lr
     3ca:	46c0      	nop			; (mov r8, r8)
     3cc:	20000464 	.word	0x20000464
     3d0:	000004cd 	.word	0x000004cd
     3d4:	20000478 	.word	0x20000478
     3d8:	2000046e 	.word	0x2000046e
     3dc:	2000046f 	.word	0x2000046f
     3e0:	20000470 	.word	0x20000470
     3e4:	20000479 	.word	0x20000479
     3e8:	2000046c 	.word	0x2000046c
     3ec:	0000045d 	.word	0x0000045d
     3f0:	20000474 	.word	0x20000474
     3f4:	2000047c 	.word	0x2000047c

000003f8 <i2c_begin_write>:
	// I2C_SERCOM->I2CM.ADDR.reg = addr | I2C_TRANSFER_READ;
}

//==============================================================================
uint8_t i2c_begin_write(uint8_t addr)
{
     3f8:	b510      	push	{r4, lr}
    // Remove this, initiates computer acting as i2c
    _i2c_init = 1;
     3fa:	2401      	movs	r4, #1
     3fc:	4b04      	ldr	r3, [pc, #16]	; (410 <i2c_begin_write+0x18>)
     3fe:	701c      	strb	r4, [r3, #0]
    _i2c_addr = addr;
     400:	4b04      	ldr	r3, [pc, #16]	; (414 <i2c_begin_write+0x1c>)
     402:	7018      	strb	r0, [r3, #0]
    serial_write(TX_S);
     404:	2031      	movs	r0, #49	; 0x31
     406:	4b04      	ldr	r3, [pc, #16]	; (418 <i2c_begin_write+0x20>)
     408:	4798      	blx	r3

    // Leave this, timeout update
    _i2c_active = 1;
     40a:	4b04      	ldr	r3, [pc, #16]	; (41c <i2c_begin_write+0x24>)
     40c:	701c      	strb	r4, [r3, #0]

    // I2C_SERCOM->I2CM.ADDR.reg = addr | I2C_TRANSFER_WRITE;
}
     40e:	bd10      	pop	{r4, pc}
     410:	20000478 	.word	0x20000478
     414:	2000046e 	.word	0x2000046e
     418:	00000b8d 	.word	0x00000b8d
     41c:	2000046d 	.word	0x2000046d

00000420 <i2c_read>:
    // Check if there is rx data
    return serial_rx_flag(); // SERCOM3->I2CM.INTFLAG.bit.SB;
}

//==============================================================================
uint8_t i2c_read() {
     420:	b510      	push	{r4, lr}
    if (_reading) {
     422:	4b09      	ldr	r3, [pc, #36]	; (448 <i2c_read+0x28>)
     424:	781b      	ldrb	r3, [r3, #0]
     426:	2b00      	cmp	r3, #0
     428:	d104      	bne.n	434 <i2c_read+0x14>
        uint8_t data = serial_read();
        _i2c_flag = 1;
        serial_write(RX_C);
        return data;
    } else {
        return _i2c_rx_buff;
     42a:	4b08      	ldr	r3, [pc, #32]	; (44c <i2c_read+0x2c>)
     42c:	781c      	ldrb	r4, [r3, #0]
     42e:	b2e4      	uxtb	r4, r4
    }

    // return I2C_SERCOM->I2CM.DATA.reg;
}
     430:	0020      	movs	r0, r4
     432:	bd10      	pop	{r4, pc}
        uint8_t data = serial_read();
     434:	4b06      	ldr	r3, [pc, #24]	; (450 <i2c_read+0x30>)
     436:	4798      	blx	r3
     438:	0004      	movs	r4, r0
        _i2c_flag = 1;
     43a:	2201      	movs	r2, #1
     43c:	4b05      	ldr	r3, [pc, #20]	; (454 <i2c_read+0x34>)
     43e:	701a      	strb	r2, [r3, #0]
        serial_write(RX_C);
     440:	2035      	movs	r0, #53	; 0x35
     442:	4b05      	ldr	r3, [pc, #20]	; (458 <i2c_read+0x38>)
     444:	4798      	blx	r3
        return data;
     446:	e7f3      	b.n	430 <i2c_read+0x10>
     448:	20000479 	.word	0x20000479
     44c:	2000046c 	.word	0x2000046c
     450:	00000b65 	.word	0x00000b65
     454:	20000470 	.word	0x20000470
     458:	00000b8d 	.word	0x00000b8d

0000045c <_i2c_default_func>:
//     \__, /~~\ |___ |___ |__) /~~\ \__, |  \ .__/
//
//------------------------------------------------------------------------------

//==============================================================================
uint8_t _i2c_default_func(){
     45c:	b510      	push	{r4, lr}
    return serial_tx_flag(); // SERCOM3->I2CM.INTFLAG.bit.MB;
     45e:	4b06      	ldr	r3, [pc, #24]	; (478 <_i2c_default_func+0x1c>)
     460:	4798      	blx	r3
    if (i2c_tx_flag()) {
     462:	2800      	cmp	r0, #0
     464:	d001      	beq.n	46a <_i2c_default_func+0xe>
     466:	2000      	movs	r0, #0
    }
    else if (i2c_rx_flag()) {
        i2c_read();
        return 0;
    }
}
     468:	bd10      	pop	{r4, pc}
    return serial_rx_flag(); // SERCOM3->I2CM.INTFLAG.bit.SB;
     46a:	4b04      	ldr	r3, [pc, #16]	; (47c <_i2c_default_func+0x20>)
     46c:	4798      	blx	r3
    else if (i2c_rx_flag()) {
     46e:	2800      	cmp	r0, #0
     470:	d0fa      	beq.n	468 <_i2c_default_func+0xc>
        i2c_read();
     472:	4b03      	ldr	r3, [pc, #12]	; (480 <_i2c_default_func+0x24>)
     474:	4798      	blx	r3
        return 0;
     476:	e7f6      	b.n	466 <_i2c_default_func+0xa>
     478:	00000b45 	.word	0x00000b45
     47c:	00000b55 	.word	0x00000b55
     480:	00000421 	.word	0x00000421

00000484 <i2c_write>:
void i2c_write(uint8_t data) {
     484:	b510      	push	{r4, lr}
    _i2c_init = 1;
     486:	2201      	movs	r2, #1
     488:	4b03      	ldr	r3, [pc, #12]	; (498 <i2c_write+0x14>)
     48a:	701a      	strb	r2, [r3, #0]
    _i2c_addr = data;
     48c:	4b03      	ldr	r3, [pc, #12]	; (49c <i2c_write+0x18>)
     48e:	7018      	strb	r0, [r3, #0]
    serial_write(TX_C);
     490:	2032      	movs	r0, #50	; 0x32
     492:	4b03      	ldr	r3, [pc, #12]	; (4a0 <i2c_write+0x1c>)
     494:	4798      	blx	r3
}
     496:	bd10      	pop	{r4, pc}
     498:	20000478 	.word	0x20000478
     49c:	2000046e 	.word	0x2000046e
     4a0:	00000b8d 	.word	0x00000b8d

000004a4 <i2c_unregister>:
{
     4a4:	b510      	push	{r4, lr}
    serial_unregister(I2C_callback);
     4a6:	4b05      	ldr	r3, [pc, #20]	; (4bc <i2c_unregister+0x18>)
     4a8:	6818      	ldr	r0, [r3, #0]
     4aa:	6859      	ldr	r1, [r3, #4]
     4ac:	4b04      	ldr	r3, [pc, #16]	; (4c0 <i2c_unregister+0x1c>)
     4ae:	4798      	blx	r3
    _i2c_callback = _i2c_default;
     4b0:	4b04      	ldr	r3, [pc, #16]	; (4c4 <i2c_unregister+0x20>)
     4b2:	681a      	ldr	r2, [r3, #0]
     4b4:	4b04      	ldr	r3, [pc, #16]	; (4c8 <i2c_unregister+0x24>)
     4b6:	601a      	str	r2, [r3, #0]
}
     4b8:	bd10      	pop	{r4, pc}
     4ba:	46c0      	nop			; (mov r8, r8)
     4bc:	20000464 	.word	0x20000464
     4c0:	00000bf1 	.word	0x00000bf1
     4c4:	20000474 	.word	0x20000474
     4c8:	2000047c 	.word	0x2000047c

000004cc <_SERCOM3_Handler>:
//------------------------------------------------------------------------------


//==============================================================================
uint8_t _SERCOM3_Handler()
{
     4cc:	b570      	push	{r4, r5, r6, lr}
    // Leave this, timeout update
    _i2c_active = 1;
     4ce:	2201      	movs	r2, #1
     4d0:	4b14      	ldr	r3, [pc, #80]	; (524 <_SERCOM3_Handler+0x58>)
     4d2:	701a      	strb	r2, [r3, #0]

    // Remove this
    if (_i2c_init) {
     4d4:	4b14      	ldr	r3, [pc, #80]	; (528 <_SERCOM3_Handler+0x5c>)
     4d6:	781b      	ldrb	r3, [r3, #0]
     4d8:	2b00      	cmp	r3, #0
     4da:	d112      	bne.n	502 <_SERCOM3_Handler+0x36>
        _i2c_init = 0;
        serial_write(_i2c_addr);
        return _i2c_flag = _i2c_addr = 0;
    } else if (_i2c_flag) {
     4dc:	4b13      	ldr	r3, [pc, #76]	; (52c <_SERCOM3_Handler+0x60>)
     4de:	781b      	ldrb	r3, [r3, #0]
     4e0:	2b00      	cmp	r3, #0
     4e2:	d11a      	bne.n	51a <_SERCOM3_Handler+0x4e>
    // Leave this
    if (_i2c_failed_flag()) {
        return 1;
    }

    else if (_i2c_callback()) {
     4e4:	4b12      	ldr	r3, [pc, #72]	; (530 <_SERCOM3_Handler+0x64>)
     4e6:	681b      	ldr	r3, [r3, #0]
     4e8:	4798      	blx	r3
     4ea:	2800      	cmp	r0, #0
     4ec:	d018      	beq.n	520 <_SERCOM3_Handler+0x54>
        // Remove this
        serial_unregister(I2C_callback);
     4ee:	4b11      	ldr	r3, [pc, #68]	; (534 <_SERCOM3_Handler+0x68>)
     4f0:	6818      	ldr	r0, [r3, #0]
     4f2:	6859      	ldr	r1, [r3, #4]
     4f4:	4b10      	ldr	r3, [pc, #64]	; (538 <_SERCOM3_Handler+0x6c>)
     4f6:	4798      	blx	r3

        // Leave this
        i2c_unregister(_i2c_callback);
     4f8:	4b0d      	ldr	r3, [pc, #52]	; (530 <_SERCOM3_Handler+0x64>)
     4fa:	6818      	ldr	r0, [r3, #0]
     4fc:	4b0f      	ldr	r3, [pc, #60]	; (53c <_SERCOM3_Handler+0x70>)
     4fe:	4798      	blx	r3
     500:	e00e      	b.n	520 <_SERCOM3_Handler+0x54>
        _i2c_init = 0;
     502:	2400      	movs	r4, #0
     504:	4b08      	ldr	r3, [pc, #32]	; (528 <_SERCOM3_Handler+0x5c>)
     506:	701c      	strb	r4, [r3, #0]
        serial_write(_i2c_addr);
     508:	4d0d      	ldr	r5, [pc, #52]	; (540 <_SERCOM3_Handler+0x74>)
     50a:	7828      	ldrb	r0, [r5, #0]
     50c:	b2c0      	uxtb	r0, r0
     50e:	4b0d      	ldr	r3, [pc, #52]	; (544 <_SERCOM3_Handler+0x78>)
     510:	4798      	blx	r3
        return _i2c_flag = _i2c_addr = 0;
     512:	702c      	strb	r4, [r5, #0]
     514:	4b05      	ldr	r3, [pc, #20]	; (52c <_SERCOM3_Handler+0x60>)
     516:	701c      	strb	r4, [r3, #0]
     518:	e002      	b.n	520 <_SERCOM3_Handler+0x54>
        return _i2c_flag = 0;
     51a:	2200      	movs	r2, #0
     51c:	4b03      	ldr	r3, [pc, #12]	; (52c <_SERCOM3_Handler+0x60>)
     51e:	701a      	strb	r2, [r3, #0]
    }

    return 0;
}
     520:	2000      	movs	r0, #0
     522:	bd70      	pop	{r4, r5, r6, pc}
     524:	2000046d 	.word	0x2000046d
     528:	20000478 	.word	0x20000478
     52c:	20000470 	.word	0x20000470
     530:	2000047c 	.word	0x2000047c
     534:	20000464 	.word	0x20000464
     538:	00000bf1 	.word	0x00000bf1
     53c:	000004a5 	.word	0x000004a5
     540:	2000046e 	.word	0x2000046e
     544:	00000b8d 	.word	0x00000b8d

00000548 <i2c_tx_stop>:
void i2c_tx_stop() {
     548:	b510      	push	{r4, lr}
    _i2c_flag = 1;
     54a:	2201      	movs	r2, #1
     54c:	4b02      	ldr	r3, [pc, #8]	; (558 <i2c_tx_stop+0x10>)
     54e:	701a      	strb	r2, [r3, #0]
    serial_write(TX_E);
     550:	2033      	movs	r0, #51	; 0x33
     552:	4b02      	ldr	r3, [pc, #8]	; (55c <i2c_tx_stop+0x14>)
     554:	4798      	blx	r3
}
     556:	bd10      	pop	{r4, pc}
     558:	20000470 	.word	0x20000470
     55c:	00000b8d 	.word	0x00000b8d

00000560 <i2c_registered>:
    return (_i2c_callback != _i2c_default);
     560:	4b04      	ldr	r3, [pc, #16]	; (574 <i2c_registered+0x14>)
     562:	681b      	ldr	r3, [r3, #0]
     564:	4a04      	ldr	r2, [pc, #16]	; (578 <i2c_registered+0x18>)
     566:	6810      	ldr	r0, [r2, #0]
     568:	1ac0      	subs	r0, r0, r3
     56a:	1e43      	subs	r3, r0, #1
     56c:	4198      	sbcs	r0, r3
     56e:	b2c0      	uxtb	r0, r0
}
     570:	4770      	bx	lr
     572:	46c0      	nop			; (mov r8, r8)
     574:	2000047c 	.word	0x2000047c
     578:	20000474 	.word	0x20000474

0000057c <i2c_register>:
uint8_t i2c_register(i2c_callback_t callback) {
     57c:	b510      	push	{r4, lr}
     57e:	0004      	movs	r4, r0
    if (!i2c_registered()) {
     580:	4b0a      	ldr	r3, [pc, #40]	; (5ac <i2c_register+0x30>)
     582:	4798      	blx	r3
    return 0;
     584:	2300      	movs	r3, #0
    if (!i2c_registered()) {
     586:	2800      	cmp	r0, #0
     588:	d001      	beq.n	58e <i2c_register+0x12>
}
     58a:	0018      	movs	r0, r3
     58c:	bd10      	pop	{r4, pc}
        if (serial_register(I2C_callback)) {
     58e:	4b08      	ldr	r3, [pc, #32]	; (5b0 <i2c_register+0x34>)
     590:	6818      	ldr	r0, [r3, #0]
     592:	6859      	ldr	r1, [r3, #4]
     594:	4b07      	ldr	r3, [pc, #28]	; (5b4 <i2c_register+0x38>)
     596:	4798      	blx	r3
     598:	1e03      	subs	r3, r0, #0
     59a:	d0f6      	beq.n	58a <i2c_register+0xe>
            _i2c_active = 1;
     59c:	2201      	movs	r2, #1
     59e:	4b06      	ldr	r3, [pc, #24]	; (5b8 <i2c_register+0x3c>)
     5a0:	701a      	strb	r2, [r3, #0]
            _i2c_callback = callback;
     5a2:	4b06      	ldr	r3, [pc, #24]	; (5bc <i2c_register+0x40>)
     5a4:	601c      	str	r4, [r3, #0]
            return 1;
     5a6:	2301      	movs	r3, #1
     5a8:	e7ef      	b.n	58a <i2c_register+0xe>
     5aa:	46c0      	nop			; (mov r8, r8)
     5ac:	00000561 	.word	0x00000561
     5b0:	20000464 	.word	0x20000464
     5b4:	00000c8d 	.word	0x00000c8d
     5b8:	2000046d 	.word	0x2000046d
     5bc:	2000047c 	.word	0x2000047c

000005c0 <_LP5036_init_callback>:
//     \__, /~~\ |___ |___ |__) /~~\ \__, |  \ .__/
//
//------------------------------------------------------------------------------

//==============================================================================
uint8_t _LP5036_init_callback() {
     5c0:	b510      	push	{r4, lr}
    uint8_t complete = 0;

    switch (_LP5036_state) {
     5c2:	4b0f      	ldr	r3, [pc, #60]	; (600 <_LP5036_init_callback+0x40>)
     5c4:	781b      	ldrb	r3, [r3, #0]
     5c6:	b2db      	uxtb	r3, r3
     5c8:	2b01      	cmp	r3, #1
     5ca:	d00d      	beq.n	5e8 <_LP5036_init_callback+0x28>
     5cc:	2b00      	cmp	r3, #0
     5ce:	d003      	beq.n	5d8 <_LP5036_init_callback+0x18>
     5d0:	2b02      	cmp	r3, #2
     5d2:	d011      	beq.n	5f8 <_LP5036_init_callback+0x38>
    uint8_t complete = 0;
     5d4:	2000      	movs	r0, #0
     5d6:	e006      	b.n	5e6 <_LP5036_init_callback+0x26>
        // Initialization callback
        case LP5036_INIT: {
            _LP5036_state = LP5036_INIT_TX;
     5d8:	2201      	movs	r2, #1
     5da:	4b09      	ldr	r3, [pc, #36]	; (600 <_LP5036_init_callback+0x40>)
     5dc:	701a      	strb	r2, [r3, #0]
            i2c_write(LP5036_DEV_CFG0);
     5de:	2000      	movs	r0, #0
     5e0:	4b08      	ldr	r3, [pc, #32]	; (604 <_LP5036_init_callback+0x44>)
     5e2:	4798      	blx	r3
    uint8_t complete = 0;
     5e4:	2000      	movs	r0, #0
            complete = 1;
        } break;
    }

    return complete;
}
     5e6:	bd10      	pop	{r4, pc}
            _LP5036_state = LP5036_INIT_DONE;
     5e8:	2202      	movs	r2, #2
     5ea:	4b05      	ldr	r3, [pc, #20]	; (600 <_LP5036_init_callback+0x40>)
     5ec:	701a      	strb	r2, [r3, #0]
            i2c_write(LP5036_DEV_CFG0_CHIP_EN);
     5ee:	2040      	movs	r0, #64	; 0x40
     5f0:	4b04      	ldr	r3, [pc, #16]	; (604 <_LP5036_init_callback+0x44>)
     5f2:	4798      	blx	r3
    uint8_t complete = 0;
     5f4:	2000      	movs	r0, #0
        } break;
     5f6:	e7f6      	b.n	5e6 <_LP5036_init_callback+0x26>
            i2c_tx_stop();
     5f8:	4b03      	ldr	r3, [pc, #12]	; (608 <_LP5036_init_callback+0x48>)
     5fa:	4798      	blx	r3
            complete = 1;
     5fc:	2001      	movs	r0, #1
        } break;
     5fe:	e7f2      	b.n	5e6 <_LP5036_init_callback+0x26>
     600:	20000480 	.word	0x20000480
     604:	00000485 	.word	0x00000485
     608:	00000549 	.word	0x00000549

0000060c <_LP5036_reset_callback>:

//==============================================================================
uint8_t _LP5036_reset_callback() {
     60c:	b510      	push	{r4, lr}
    uint8_t complete = 0;

    switch (_LP5036_state) {
     60e:	4b0f      	ldr	r3, [pc, #60]	; (64c <_LP5036_reset_callback+0x40>)
     610:	781b      	ldrb	r3, [r3, #0]
     612:	b2db      	uxtb	r3, r3
     614:	2b01      	cmp	r3, #1
     616:	d00d      	beq.n	634 <_LP5036_reset_callback+0x28>
     618:	2b00      	cmp	r3, #0
     61a:	d003      	beq.n	624 <_LP5036_reset_callback+0x18>
     61c:	2b02      	cmp	r3, #2
     61e:	d011      	beq.n	644 <_LP5036_reset_callback+0x38>
    uint8_t complete = 0;
     620:	2000      	movs	r0, #0
     622:	e006      	b.n	632 <_LP5036_reset_callback+0x26>
        // Reset callback
        case LP5036_RESET: {
            _LP5036_state = LP5036_RESET_TX;
     624:	2201      	movs	r2, #1
     626:	4b09      	ldr	r3, [pc, #36]	; (64c <_LP5036_reset_callback+0x40>)
     628:	701a      	strb	r2, [r3, #0]
            i2c_write(LP5036_RESET_REG);
     62a:	2038      	movs	r0, #56	; 0x38
     62c:	4b08      	ldr	r3, [pc, #32]	; (650 <_LP5036_reset_callback+0x44>)
     62e:	4798      	blx	r3
    uint8_t complete = 0;
     630:	2000      	movs	r0, #0
            complete = 1;
        } break;
    }

    return complete;
}
     632:	bd10      	pop	{r4, pc}
            _LP5036_state = LP5036_RESET_DONE;
     634:	2202      	movs	r2, #2
     636:	4b05      	ldr	r3, [pc, #20]	; (64c <_LP5036_reset_callback+0x40>)
     638:	701a      	strb	r2, [r3, #0]
            i2c_write(LP5036_RESET_VAL);
     63a:	20ff      	movs	r0, #255	; 0xff
     63c:	4b04      	ldr	r3, [pc, #16]	; (650 <_LP5036_reset_callback+0x44>)
     63e:	4798      	blx	r3
    uint8_t complete = 0;
     640:	2000      	movs	r0, #0
        } break;
     642:	e7f6      	b.n	632 <_LP5036_reset_callback+0x26>
            i2c_tx_stop();
     644:	4b03      	ldr	r3, [pc, #12]	; (654 <_LP5036_reset_callback+0x48>)
     646:	4798      	blx	r3
            complete = 1;
     648:	2001      	movs	r0, #1
        } break;
     64a:	e7f2      	b.n	632 <_LP5036_reset_callback+0x26>
     64c:	20000480 	.word	0x20000480
     650:	00000485 	.word	0x00000485
     654:	00000549 	.word	0x00000549

00000658 <_LP5036_write_callback>:

//==============================================================================
uint8_t _LP5036_write_callback() {
     658:	b510      	push	{r4, lr}
    uint8_t complete = 0;

    // LED writing callback
    switch (_LP5036_state) {
     65a:	4b31      	ldr	r3, [pc, #196]	; (720 <_LP5036_write_callback+0xc8>)
     65c:	781b      	ldrb	r3, [r3, #0]
     65e:	b2db      	uxtb	r3, r3
     660:	2b08      	cmp	r3, #8
     662:	d85b      	bhi.n	71c <_LP5036_write_callback+0xc4>
     664:	009b      	lsls	r3, r3, #2
     666:	4a2f      	ldr	r2, [pc, #188]	; (724 <_LP5036_write_callback+0xcc>)
     668:	58d3      	ldr	r3, [r2, r3]
     66a:	469f      	mov	pc, r3
        // Point at the correct register
        case LP5036_M_LED_NUM: {
            _LP5036_state = LP5036_M_R_COLOR;
     66c:	2201      	movs	r2, #1
     66e:	4b2c      	ldr	r3, [pc, #176]	; (720 <_LP5036_write_callback+0xc8>)
     670:	701a      	strb	r2, [r3, #0]
            i2c_write(LP5036_LED_COLOR(_LP5036_led_num, LED_R));
     672:	4b2d      	ldr	r3, [pc, #180]	; (728 <_LP5036_write_callback+0xd0>)
     674:	7818      	ldrb	r0, [r3, #0]
     676:	0043      	lsls	r3, r0, #1
     678:	18c0      	adds	r0, r0, r3
     67a:	3014      	adds	r0, #20
     67c:	b2c0      	uxtb	r0, r0
     67e:	4b2b      	ldr	r3, [pc, #172]	; (72c <_LP5036_write_callback+0xd4>)
     680:	4798      	blx	r3
    uint8_t complete = 0;
     682:	2000      	movs	r0, #0
            complete = 1;
        } break;
    }

    return complete;
}
     684:	bd10      	pop	{r4, pc}
            _LP5036_state = LP5036_M_G_COLOR;
     686:	2202      	movs	r2, #2
     688:	4b25      	ldr	r3, [pc, #148]	; (720 <_LP5036_write_callback+0xc8>)
     68a:	701a      	strb	r2, [r3, #0]
            i2c_write(_LP5036_led->R);
     68c:	4b28      	ldr	r3, [pc, #160]	; (730 <_LP5036_write_callback+0xd8>)
     68e:	681b      	ldr	r3, [r3, #0]
     690:	7818      	ldrb	r0, [r3, #0]
     692:	4b26      	ldr	r3, [pc, #152]	; (72c <_LP5036_write_callback+0xd4>)
     694:	4798      	blx	r3
    uint8_t complete = 0;
     696:	2000      	movs	r0, #0
        } break;
     698:	e7f4      	b.n	684 <_LP5036_write_callback+0x2c>
            _LP5036_state = LP5036_M_B_COLOR;
     69a:	2203      	movs	r2, #3
     69c:	4b20      	ldr	r3, [pc, #128]	; (720 <_LP5036_write_callback+0xc8>)
     69e:	701a      	strb	r2, [r3, #0]
            i2c_write(_LP5036_led->G);
     6a0:	4b23      	ldr	r3, [pc, #140]	; (730 <_LP5036_write_callback+0xd8>)
     6a2:	681b      	ldr	r3, [r3, #0]
     6a4:	7858      	ldrb	r0, [r3, #1]
     6a6:	4b21      	ldr	r3, [pc, #132]	; (72c <_LP5036_write_callback+0xd4>)
     6a8:	4798      	blx	r3
    uint8_t complete = 0;
     6aa:	2000      	movs	r0, #0
        } break;
     6ac:	e7ea      	b.n	684 <_LP5036_write_callback+0x2c>
            _LP5036_state = LP5036_M_RESTART;
     6ae:	2204      	movs	r2, #4
     6b0:	4b1b      	ldr	r3, [pc, #108]	; (720 <_LP5036_write_callback+0xc8>)
     6b2:	701a      	strb	r2, [r3, #0]
            i2c_write(_LP5036_led->B);
     6b4:	4b1e      	ldr	r3, [pc, #120]	; (730 <_LP5036_write_callback+0xd8>)
     6b6:	681b      	ldr	r3, [r3, #0]
     6b8:	7898      	ldrb	r0, [r3, #2]
     6ba:	4b1c      	ldr	r3, [pc, #112]	; (72c <_LP5036_write_callback+0xd4>)
     6bc:	4798      	blx	r3
    uint8_t complete = 0;
     6be:	2000      	movs	r0, #0
        } break;
     6c0:	e7e0      	b.n	684 <_LP5036_write_callback+0x2c>
            _LP5036_state = LP5036_M_ADDR;
     6c2:	2205      	movs	r2, #5
     6c4:	4b16      	ldr	r3, [pc, #88]	; (720 <_LP5036_write_callback+0xc8>)
     6c6:	701a      	strb	r2, [r3, #0]
            serial_write(TX_E);
     6c8:	2033      	movs	r0, #51	; 0x33
     6ca:	4b1a      	ldr	r3, [pc, #104]	; (734 <_LP5036_write_callback+0xdc>)
     6cc:	4798      	blx	r3
    uint8_t complete = 0;
     6ce:	2000      	movs	r0, #0
        } break;
     6d0:	e7d8      	b.n	684 <_LP5036_write_callback+0x2c>
            _LP5036_state = LP5036_M_REG_CHNG;
     6d2:	2206      	movs	r2, #6
     6d4:	4b12      	ldr	r3, [pc, #72]	; (720 <_LP5036_write_callback+0xc8>)
     6d6:	701a      	strb	r2, [r3, #0]
            i2c_begin_write(_LP5036_addr);
     6d8:	4b17      	ldr	r3, [pc, #92]	; (738 <_LP5036_write_callback+0xe0>)
     6da:	7818      	ldrb	r0, [r3, #0]
     6dc:	4b17      	ldr	r3, [pc, #92]	; (73c <_LP5036_write_callback+0xe4>)
     6de:	4798      	blx	r3
    uint8_t complete = 0;
     6e0:	2000      	movs	r0, #0
        } break;
     6e2:	e7cf      	b.n	684 <_LP5036_write_callback+0x2c>
            _LP5036_state = LP5036_M_BRIGHT;
     6e4:	2207      	movs	r2, #7
     6e6:	4b0e      	ldr	r3, [pc, #56]	; (720 <_LP5036_write_callback+0xc8>)
     6e8:	701a      	strb	r2, [r3, #0]
            i2c_write(LP5036_LED_BRIGHT_REG(_LP5036_led_num));
     6ea:	4b0f      	ldr	r3, [pc, #60]	; (728 <_LP5036_write_callback+0xd0>)
     6ec:	7818      	ldrb	r0, [r3, #0]
     6ee:	3008      	adds	r0, #8
     6f0:	b2c0      	uxtb	r0, r0
     6f2:	4b0e      	ldr	r3, [pc, #56]	; (72c <_LP5036_write_callback+0xd4>)
     6f4:	4798      	blx	r3
    uint8_t complete = 0;
     6f6:	2000      	movs	r0, #0
        } break;
     6f8:	e7c4      	b.n	684 <_LP5036_write_callback+0x2c>
            _LP5036_state = LP5036_M_TX_END;
     6fa:	2208      	movs	r2, #8
     6fc:	4b08      	ldr	r3, [pc, #32]	; (720 <_LP5036_write_callback+0xc8>)
     6fe:	701a      	strb	r2, [r3, #0]
            i2c_write(_LP5036_led->brightness);
     700:	4b0b      	ldr	r3, [pc, #44]	; (730 <_LP5036_write_callback+0xd8>)
     702:	681b      	ldr	r3, [r3, #0]
     704:	78d8      	ldrb	r0, [r3, #3]
     706:	4b09      	ldr	r3, [pc, #36]	; (72c <_LP5036_write_callback+0xd4>)
     708:	4798      	blx	r3
    uint8_t complete = 0;
     70a:	2000      	movs	r0, #0
        } break;
     70c:	e7ba      	b.n	684 <_LP5036_write_callback+0x2c>
            _LP5036_state = LP5036_M_DONE;
     70e:	2209      	movs	r2, #9
     710:	4b03      	ldr	r3, [pc, #12]	; (720 <_LP5036_write_callback+0xc8>)
     712:	701a      	strb	r2, [r3, #0]
            i2c_tx_stop();
     714:	4b0a      	ldr	r3, [pc, #40]	; (740 <_LP5036_write_callback+0xe8>)
     716:	4798      	blx	r3
            complete = 1;
     718:	2001      	movs	r0, #1
        } break;
     71a:	e7b3      	b.n	684 <_LP5036_write_callback+0x2c>
    uint8_t complete = 0;
     71c:	2000      	movs	r0, #0
     71e:	e7b1      	b.n	684 <_LP5036_write_callback+0x2c>
     720:	20000480 	.word	0x20000480
     724:	00002294 	.word	0x00002294
     728:	20000482 	.word	0x20000482
     72c:	00000485 	.word	0x00000485
     730:	20000484 	.word	0x20000484
     734:	00000b8d 	.word	0x00000b8d
     738:	20000481 	.word	0x20000481
     73c:	000003f9 	.word	0x000003f9
     740:	00000549 	.word	0x00000549

00000744 <LP5036_stop>:
void LP5036_stop(uint8_t addr) {
     744:	b570      	push	{r4, r5, r6, lr}
     746:	0005      	movs	r5, r0
    while (i2c_registered());
     748:	4c0a      	ldr	r4, [pc, #40]	; (774 <LP5036_stop+0x30>)
     74a:	47a0      	blx	r4
     74c:	2800      	cmp	r0, #0
     74e:	d1fc      	bne.n	74a <LP5036_stop+0x6>
    _LP5036_state = LP5036_RESET;
     750:	2200      	movs	r2, #0
     752:	4b09      	ldr	r3, [pc, #36]	; (778 <LP5036_stop+0x34>)
     754:	701a      	strb	r2, [r3, #0]
    while (!i2c_register(_LP5036_reset_callback));
     756:	4e09      	ldr	r6, [pc, #36]	; (77c <LP5036_stop+0x38>)
     758:	4c09      	ldr	r4, [pc, #36]	; (780 <LP5036_stop+0x3c>)
     75a:	0030      	movs	r0, r6
     75c:	47a0      	blx	r4
     75e:	2800      	cmp	r0, #0
     760:	d0fb      	beq.n	75a <LP5036_stop+0x16>
    i2c_begin_write(addr);
     762:	0028      	movs	r0, r5
     764:	4b07      	ldr	r3, [pc, #28]	; (784 <LP5036_stop+0x40>)
     766:	4798      	blx	r3
    while (i2c_registered());
     768:	4c02      	ldr	r4, [pc, #8]	; (774 <LP5036_stop+0x30>)
     76a:	47a0      	blx	r4
     76c:	2800      	cmp	r0, #0
     76e:	d1fc      	bne.n	76a <LP5036_stop+0x26>
}
     770:	bd70      	pop	{r4, r5, r6, pc}
     772:	46c0      	nop			; (mov r8, r8)
     774:	00000561 	.word	0x00000561
     778:	20000480 	.word	0x20000480
     77c:	0000060d 	.word	0x0000060d
     780:	0000057d 	.word	0x0000057d
     784:	000003f9 	.word	0x000003f9

00000788 <LP5036_init>:
void LP5036_init(uint8_t addr) {
     788:	b570      	push	{r4, r5, r6, lr}
     78a:	0005      	movs	r5, r0
    LP5036_stop(addr);
     78c:	4b0b      	ldr	r3, [pc, #44]	; (7bc <LP5036_init+0x34>)
     78e:	4798      	blx	r3
    while (i2c_registered());
     790:	4c0b      	ldr	r4, [pc, #44]	; (7c0 <LP5036_init+0x38>)
     792:	47a0      	blx	r4
     794:	2800      	cmp	r0, #0
     796:	d1fc      	bne.n	792 <LP5036_init+0xa>
    _LP5036_state = LP5036_INIT;
     798:	2200      	movs	r2, #0
     79a:	4b0a      	ldr	r3, [pc, #40]	; (7c4 <LP5036_init+0x3c>)
     79c:	701a      	strb	r2, [r3, #0]
    while (!i2c_register(_LP5036_init_callback));
     79e:	4e0a      	ldr	r6, [pc, #40]	; (7c8 <LP5036_init+0x40>)
     7a0:	4c0a      	ldr	r4, [pc, #40]	; (7cc <LP5036_init+0x44>)
     7a2:	0030      	movs	r0, r6
     7a4:	47a0      	blx	r4
     7a6:	2800      	cmp	r0, #0
     7a8:	d0fb      	beq.n	7a2 <LP5036_init+0x1a>
    i2c_begin_write(addr);
     7aa:	0028      	movs	r0, r5
     7ac:	4b08      	ldr	r3, [pc, #32]	; (7d0 <LP5036_init+0x48>)
     7ae:	4798      	blx	r3
    while (i2c_registered());
     7b0:	4c03      	ldr	r4, [pc, #12]	; (7c0 <LP5036_init+0x38>)
     7b2:	47a0      	blx	r4
     7b4:	2800      	cmp	r0, #0
     7b6:	d1fc      	bne.n	7b2 <LP5036_init+0x2a>
}
     7b8:	bd70      	pop	{r4, r5, r6, pc}
     7ba:	46c0      	nop			; (mov r8, r8)
     7bc:	00000745 	.word	0x00000745
     7c0:	00000561 	.word	0x00000561
     7c4:	20000480 	.word	0x20000480
     7c8:	000005c1 	.word	0x000005c1
     7cc:	0000057d 	.word	0x0000057d
     7d0:	000003f9 	.word	0x000003f9

000007d4 <LP5036_write>:
uint8_t LP5036_write(uint8_t addr, uint8_t led_num, led_t* led) {
     7d4:	b570      	push	{r4, r5, r6, lr}
     7d6:	0004      	movs	r4, r0
     7d8:	000d      	movs	r5, r1
     7da:	0016      	movs	r6, r2
    if (i2c_register(_LP5036_write_callback)) {
     7dc:	4809      	ldr	r0, [pc, #36]	; (804 <LP5036_write+0x30>)
     7de:	4b0a      	ldr	r3, [pc, #40]	; (808 <LP5036_write+0x34>)
     7e0:	4798      	blx	r3
     7e2:	2800      	cmp	r0, #0
     7e4:	d100      	bne.n	7e8 <LP5036_write+0x14>
}
     7e6:	bd70      	pop	{r4, r5, r6, pc}
        _LP5036_led = led;
     7e8:	4b08      	ldr	r3, [pc, #32]	; (80c <LP5036_write+0x38>)
     7ea:	601e      	str	r6, [r3, #0]
        _LP5036_led_num = led_num;
     7ec:	4b08      	ldr	r3, [pc, #32]	; (810 <LP5036_write+0x3c>)
     7ee:	701d      	strb	r5, [r3, #0]
        _LP5036_addr = addr;
     7f0:	4b08      	ldr	r3, [pc, #32]	; (814 <LP5036_write+0x40>)
     7f2:	701c      	strb	r4, [r3, #0]
        _LP5036_state = LP5036_M_LED_NUM;
     7f4:	2200      	movs	r2, #0
     7f6:	4b08      	ldr	r3, [pc, #32]	; (818 <LP5036_write+0x44>)
     7f8:	701a      	strb	r2, [r3, #0]
        i2c_begin_write(addr);
     7fa:	0020      	movs	r0, r4
     7fc:	4b07      	ldr	r3, [pc, #28]	; (81c <LP5036_write+0x48>)
     7fe:	4798      	blx	r3
        return 1;
     800:	2001      	movs	r0, #1
     802:	e7f0      	b.n	7e6 <LP5036_write+0x12>
     804:	00000659 	.word	0x00000659
     808:	0000057d 	.word	0x0000057d
     80c:	20000484 	.word	0x20000484
     810:	20000482 	.word	0x20000482
     814:	20000481 	.word	0x20000481
     818:	20000480 	.word	0x20000480
     81c:	000003f9 	.word	0x000003f9

00000820 <LP5036_write_complete>:
    return (_LP5036_state == LP5036_M_DONE);
     820:	4b03      	ldr	r3, [pc, #12]	; (830 <LP5036_write_complete+0x10>)
     822:	7818      	ldrb	r0, [r3, #0]
     824:	3809      	subs	r0, #9
     826:	4243      	negs	r3, r0
     828:	4158      	adcs	r0, r3
     82a:	b2c0      	uxtb	r0, r0
}
     82c:	4770      	bx	lr
     82e:	46c0      	nop			; (mov r8, r8)
     830:	20000480 	.word	0x20000480

00000834 <main>:
//
//-----------------------------------------------------------------------------

//=============================================================================
int main(void)
{
     834:	b5f0      	push	{r4, r5, r6, r7, lr}
     836:	46de      	mov	lr, fp
     838:	4657      	mov	r7, sl
     83a:	464e      	mov	r6, r9
     83c:	4645      	mov	r5, r8
     83e:	b5e0      	push	{r5, r6, r7, lr}
     840:	b095      	sub	sp, #84	; 0x54

    uint8_t led_state = LED_UPDATE;
    uint8_t led_idx = 0;
    led_t leds[LP5036_NUM_LEDS];
    
    SystemInit();
     842:	4b4b      	ldr	r3, [pc, #300]	; (970 <main+0x13c>)
     844:	4798      	blx	r3
    timer_init();
     846:	4b4b      	ldr	r3, [pc, #300]	; (974 <main+0x140>)
     848:	4798      	blx	r3

    serial_init(SERIAL_BAUD);
     84a:	4c4b      	ldr	r4, [pc, #300]	; (978 <main+0x144>)
     84c:	0020      	movs	r0, r4
     84e:	4b4b      	ldr	r3, [pc, #300]	; (97c <main+0x148>)
     850:	4798      	blx	r3
    i2c_init(I2C_BAUD);
     852:	0020      	movs	r0, r4
     854:	4b4a      	ldr	r3, [pc, #296]	; (980 <main+0x14c>)
     856:	4798      	blx	r3

    // Initial LED values
    uint8_t vals[] = { 0, 20, 60, 140, 200, 100, 0, 0, 0, 0};
     858:	aa05      	add	r2, sp, #20
     85a:	4b4a      	ldr	r3, [pc, #296]	; (984 <main+0x150>)
     85c:	cb03      	ldmia	r3!, {r0, r1}
     85e:	c203      	stmia	r2!, {r0, r1}
     860:	881b      	ldrh	r3, [r3, #0]
     862:	8013      	strh	r3, [r2, #0]
     864:	ae05      	add	r6, sp, #20
     866:	ac08      	add	r4, sp, #32
     868:	2504      	movs	r5, #4
     86a:	2310      	movs	r3, #16
     86c:	469a      	mov	sl, r3

    // Load all the LEDs with default values
    for (uint8_t idx; idx < LP5036_NUM_LEDS; idx++) {
        leds[idx].R = vals[idx];
        leds[idx].G = vals[(idx+4)%12];
     86e:	0037      	movs	r7, r6
     870:	4b45      	ldr	r3, [pc, #276]	; (988 <main+0x154>)
     872:	4698      	mov	r8, r3
        leds[idx].B = vals[(idx+8)%12];
        leds[idx].brightness = 0xFF;
     874:	23ff      	movs	r3, #255	; 0xff
     876:	4699      	mov	r9, r3
        leds[idx].R = vals[idx];
     878:	7833      	ldrb	r3, [r6, #0]
     87a:	7023      	strb	r3, [r4, #0]
        leds[idx].G = vals[(idx+4)%12];
     87c:	210c      	movs	r1, #12
     87e:	0028      	movs	r0, r5
     880:	47c0      	blx	r8
     882:	5c7b      	ldrb	r3, [r7, r1]
     884:	7063      	strb	r3, [r4, #1]
        leds[idx].B = vals[(idx+8)%12];
     886:	1d28      	adds	r0, r5, #4
     888:	210c      	movs	r1, #12
     88a:	47c0      	blx	r8
     88c:	5c7b      	ldrb	r3, [r7, r1]
     88e:	70a3      	strb	r3, [r4, #2]
        leds[idx].brightness = 0xFF;
     890:	464b      	mov	r3, r9
     892:	70e3      	strb	r3, [r4, #3]
     894:	3601      	adds	r6, #1
     896:	3404      	adds	r4, #4
     898:	3501      	adds	r5, #1
    for (uint8_t idx; idx < LP5036_NUM_LEDS; idx++) {
     89a:	4555      	cmp	r5, sl
     89c:	d1ec      	bne.n	878 <main+0x44>
    }

    uint8_t led_phase = 0;

    LP5036_init(LP5036_ADDR_00);
     89e:	2030      	movs	r0, #48	; 0x30
     8a0:	4b3a      	ldr	r3, [pc, #232]	; (98c <main+0x158>)
     8a2:	4798      	blx	r3
    uint8_t led_phase = 0;
     8a4:	2300      	movs	r3, #0
     8a6:	4698      	mov	r8, r3
    uint8_t led_idx = 0;
     8a8:	2600      	movs	r6, #0
    uint8_t led_state = LED_UPDATE;
     8aa:	4699      	mov	r9, r3
    uint64_t previous_time = 0;
     8ac:	2300      	movs	r3, #0
     8ae:	2400      	movs	r4, #0
     8b0:	9300      	str	r3, [sp, #0]
     8b2:	9401      	str	r4, [sp, #4]

    while (1) {
        current_time = timer_get();
     8b4:	4b36      	ldr	r3, [pc, #216]	; (990 <main+0x15c>)
     8b6:	469b      	mov	fp, r3
        if (current_time - previous_time > delay_time) {
            switch (led_state) {
                case LED_UPDATE: {
                    // Change LED values
                    for (uint8_t idx = 0; idx < LP5036_NUM_LEDS; idx++) {
                        leds[idx].R = vals[((idx + led_phase) % 12)];
     8b8:	4f33      	ldr	r7, [pc, #204]	; (988 <main+0x154>)
     8ba:	e02c      	b.n	916 <main+0xe2>

                case LED_TX_END: {
                    // Wait for LED data send complete
                    if (LP5036_write_complete()) {
                        if (led_idx >= LP5036_NUM_LEDS) {
                            previous_time = current_time;
     8bc:	9400      	str	r4, [sp, #0]
     8be:	9501      	str	r5, [sp, #4]
                            led_state = LED_UPDATE;
     8c0:	2300      	movs	r3, #0
     8c2:	4699      	mov	r9, r3
     8c4:	e027      	b.n	916 <main+0xe2>
     8c6:	ac08      	add	r4, sp, #32
     8c8:	4643      	mov	r3, r8
     8ca:	9303      	str	r3, [sp, #12]
     8cc:	1d1d      	adds	r5, r3, #4
     8ce:	ab14      	add	r3, sp, #80	; 0x50
     8d0:	469a      	mov	sl, r3
                        leds[idx].R = vals[((idx + led_phase) % 12)];
     8d2:	ae05      	add	r6, sp, #20
                        leds[idx].brightness = 0xFF;
     8d4:	23ff      	movs	r3, #255	; 0xff
     8d6:	4698      	mov	r8, r3
                        leds[idx].R = vals[((idx + led_phase) % 12)];
     8d8:	1f28      	subs	r0, r5, #4
     8da:	210c      	movs	r1, #12
     8dc:	47b8      	blx	r7
     8de:	5c73      	ldrb	r3, [r6, r1]
     8e0:	7023      	strb	r3, [r4, #0]
                        leds[idx].G = vals[((idx + led_phase + 4) % 12)];
     8e2:	210c      	movs	r1, #12
     8e4:	0028      	movs	r0, r5
     8e6:	47b8      	blx	r7
     8e8:	5c73      	ldrb	r3, [r6, r1]
     8ea:	7063      	strb	r3, [r4, #1]
                        leds[idx].B = vals[((idx + led_phase + 8) % 12)];
     8ec:	1d28      	adds	r0, r5, #4
     8ee:	210c      	movs	r1, #12
     8f0:	47b8      	blx	r7
     8f2:	5c73      	ldrb	r3, [r6, r1]
     8f4:	70a3      	strb	r3, [r4, #2]
                        leds[idx].brightness = 0xFF;
     8f6:	4643      	mov	r3, r8
     8f8:	70e3      	strb	r3, [r4, #3]
     8fa:	3404      	adds	r4, #4
     8fc:	3501      	adds	r5, #1
                    for (uint8_t idx = 0; idx < LP5036_NUM_LEDS; idx++) {
     8fe:	4554      	cmp	r4, sl
     900:	d1ea      	bne.n	8d8 <main+0xa4>
                    led_phase = (led_phase + 1) % 12;
     902:	9803      	ldr	r0, [sp, #12]
     904:	3001      	adds	r0, #1
     906:	210c      	movs	r1, #12
     908:	4b1f      	ldr	r3, [pc, #124]	; (988 <main+0x154>)
     90a:	4798      	blx	r3
     90c:	b2cb      	uxtb	r3, r1
     90e:	4698      	mov	r8, r3
                    led_idx = 0;
     910:	464e      	mov	r6, r9
                    led_state = LED_TX;
     912:	2301      	movs	r3, #1
     914:	4699      	mov	r9, r3
        current_time = timer_get();
     916:	47d8      	blx	fp
     918:	0004      	movs	r4, r0
     91a:	000d      	movs	r5, r1
        if (current_time - previous_time > delay_time) {
     91c:	0002      	movs	r2, r0
     91e:	000b      	movs	r3, r1
     920:	9800      	ldr	r0, [sp, #0]
     922:	9901      	ldr	r1, [sp, #4]
     924:	1a12      	subs	r2, r2, r0
     926:	418b      	sbcs	r3, r1
     928:	2b00      	cmp	r3, #0
     92a:	d102      	bne.n	932 <main+0xfe>
     92c:	d1f3      	bne.n	916 <main+0xe2>
     92e:	2a32      	cmp	r2, #50	; 0x32
     930:	d9f1      	bls.n	916 <main+0xe2>
            switch (led_state) {
     932:	464b      	mov	r3, r9
     934:	2b01      	cmp	r3, #1
     936:	d00c      	beq.n	952 <main+0x11e>
     938:	2b00      	cmp	r3, #0
     93a:	d0c4      	beq.n	8c6 <main+0x92>
     93c:	2b02      	cmp	r3, #2
     93e:	d1ea      	bne.n	916 <main+0xe2>
                    if (LP5036_write_complete()) {
     940:	4b14      	ldr	r3, [pc, #80]	; (994 <main+0x160>)
     942:	4798      	blx	r3
     944:	2800      	cmp	r0, #0
     946:	d0e6      	beq.n	916 <main+0xe2>
                        if (led_idx >= LP5036_NUM_LEDS) {
     948:	2e0b      	cmp	r6, #11
     94a:	d8b7      	bhi.n	8bc <main+0x88>
                        } else {
                            led_state = LED_TX;
     94c:	2301      	movs	r3, #1
     94e:	4699      	mov	r9, r3
     950:	e7e1      	b.n	916 <main+0xe2>
                    if (LP5036_write(LP5036_ADDR_00, led_idx, &leds[led_idx])) {
     952:	00b2      	lsls	r2, r6, #2
     954:	ab08      	add	r3, sp, #32
     956:	469c      	mov	ip, r3
     958:	4462      	add	r2, ip
     95a:	0031      	movs	r1, r6
     95c:	2030      	movs	r0, #48	; 0x30
     95e:	4b0e      	ldr	r3, [pc, #56]	; (998 <main+0x164>)
     960:	4798      	blx	r3
     962:	2800      	cmp	r0, #0
     964:	d0d7      	beq.n	916 <main+0xe2>
                        led_idx++;
     966:	3601      	adds	r6, #1
     968:	b2f6      	uxtb	r6, r6
                        led_state = LED_TX_END;
     96a:	2302      	movs	r3, #2
     96c:	4699      	mov	r9, r3
     96e:	e7d2      	b.n	916 <main+0xe2>
     970:	000001fd 	.word	0x000001fd
     974:	00000d45 	.word	0x00000d45
     978:	000f4240 	.word	0x000f4240
     97c:	000009a1 	.word	0x000009a1
     980:	0000039d 	.word	0x0000039d
     984:	000022b8 	.word	0x000022b8
     988:	00000f75 	.word	0x00000f75
     98c:	00000789 	.word	0x00000789
     990:	00000d81 	.word	0x00000d81
     994:	00000821 	.word	0x00000821
     998:	000007d5 	.word	0x000007d5

0000099c <_serial_default_tx>:

//==============================================================================
uint8_t _serial_default_tx()
{
    return 0;
}
     99c:	2000      	movs	r0, #0
     99e:	4770      	bx	lr

000009a0 <serial_init>:
void serial_init(uint32_t baudrate) {
     9a0:	b570      	push	{r4, r5, r6, lr}
	PORT->Group[SERIAL_TX_GROUP].PMUX[SERIAL_TX_PMUX].bit.PMUXE = PORT_PMUX_PMUXE_D_Val;
     9a2:	4b55      	ldr	r3, [pc, #340]	; (af8 <serial_init+0x158>)
     9a4:	21bb      	movs	r1, #187	; 0xbb
     9a6:	5c5a      	ldrb	r2, [r3, r1]
     9a8:	240f      	movs	r4, #15
     9aa:	43a2      	bics	r2, r4
     9ac:	2403      	movs	r4, #3
     9ae:	4322      	orrs	r2, r4
     9b0:	545a      	strb	r2, [r3, r1]
	PORT->Group[SERIAL_TX_GROUP].PINCFG[SERIAL_TX_PIN].bit.PMUXEN = 1;
     9b2:	22d6      	movs	r2, #214	; 0xd6
     9b4:	5c9c      	ldrb	r4, [r3, r2]
     9b6:	2501      	movs	r5, #1
     9b8:	432c      	orrs	r4, r5
     9ba:	549c      	strb	r4, [r3, r2]
	PORT->Group[SERIAL_RX_GROUP].PMUX[SERIAL_RX_PMUX].bit.PMUXO = PORT_PMUX_PMUXO_D_Val;
     9bc:	5c5c      	ldrb	r4, [r3, r1]
     9be:	3ac7      	subs	r2, #199	; 0xc7
     9c0:	4022      	ands	r2, r4
     9c2:	2430      	movs	r4, #48	; 0x30
     9c4:	4322      	orrs	r2, r4
     9c6:	545a      	strb	r2, [r3, r1]
	PORT->Group[SERIAL_RX_GROUP].PINCFG[SERIAL_RX_PIN].bit.PMUXEN = 1;
     9c8:	311c      	adds	r1, #28
     9ca:	5c5a      	ldrb	r2, [r3, r1]
     9cc:	432a      	orrs	r2, r5
     9ce:	545a      	strb	r2, [r3, r1]
	PM->APBCMASK.reg |= PM_APBCMASK_SERCOM5;
     9d0:	4a4a      	ldr	r2, [pc, #296]	; (afc <serial_init+0x15c>)
     9d2:	6a13      	ldr	r3, [r2, #32]
     9d4:	3957      	subs	r1, #87	; 0x57
     9d6:	430b      	orrs	r3, r1
     9d8:	6213      	str	r3, [r2, #32]
	GCLK->CLKCTRL.reg = (GCLK_CLKCTRL_ID(GCLK_CLKCTRL_ID_SERCOM5_CORE) |
     9da:	4a49      	ldr	r2, [pc, #292]	; (b00 <serial_init+0x160>)
     9dc:	4b49      	ldr	r3, [pc, #292]	; (b04 <serial_init+0x164>)
     9de:	805a      	strh	r2, [r3, #2]
	while(GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY);
     9e0:	001a      	movs	r2, r3
     9e2:	7853      	ldrb	r3, [r2, #1]
     9e4:	b25b      	sxtb	r3, r3
     9e6:	2b00      	cmp	r3, #0
     9e8:	dbfb      	blt.n	9e2 <serial_init+0x42>
	SERCOM5->USART.CTRLA.bit.SWRST = 1;
     9ea:	4a47      	ldr	r2, [pc, #284]	; (b08 <serial_init+0x168>)
     9ec:	6813      	ldr	r3, [r2, #0]
     9ee:	2101      	movs	r1, #1
     9f0:	430b      	orrs	r3, r1
     9f2:	6013      	str	r3, [r2, #0]
	while (SERCOM5->USART.CTRLA.bit.SWRST || SERCOM5->USART.SYNCBUSY.bit.SWRST);
     9f4:	6813      	ldr	r3, [r2, #0]
     9f6:	07db      	lsls	r3, r3, #31
     9f8:	d4fc      	bmi.n	9f4 <serial_init+0x54>
     9fa:	69d3      	ldr	r3, [r2, #28]
     9fc:	07db      	lsls	r3, r3, #31
     9fe:	d4f9      	bmi.n	9f4 <serial_init+0x54>
	SERCOM5->USART.CTRLA.bit.MODE   = 1; // Internal clock
     a00:	4c41      	ldr	r4, [pc, #260]	; (b08 <serial_init+0x168>)
     a02:	6823      	ldr	r3, [r4, #0]
     a04:	221c      	movs	r2, #28
     a06:	4393      	bics	r3, r2
     a08:	3a18      	subs	r2, #24
     a0a:	4313      	orrs	r3, r2
     a0c:	6023      	str	r3, [r4, #0]
	SERCOM5->USART.CTRLA.bit.CMODE  = 0; // Asynchronous
     a0e:	6823      	ldr	r3, [r4, #0]
     a10:	4a3e      	ldr	r2, [pc, #248]	; (b0c <serial_init+0x16c>)
     a12:	4013      	ands	r3, r2
     a14:	6023      	str	r3, [r4, #0]
	SERCOM5->USART.CTRLA.bit.RXPO   = 3; // Pad 3
     a16:	6822      	ldr	r2, [r4, #0]
     a18:	23c0      	movs	r3, #192	; 0xc0
     a1a:	039b      	lsls	r3, r3, #14
     a1c:	4313      	orrs	r3, r2
     a1e:	6023      	str	r3, [r4, #0]
	SERCOM5->USART.CTRLA.bit.TXPO   = 1; // Pad 2
     a20:	6823      	ldr	r3, [r4, #0]
     a22:	4a3b      	ldr	r2, [pc, #236]	; (b10 <serial_init+0x170>)
     a24:	4013      	ands	r3, r2
     a26:	2280      	movs	r2, #128	; 0x80
     a28:	0252      	lsls	r2, r2, #9
     a2a:	4313      	orrs	r3, r2
     a2c:	6023      	str	r3, [r4, #0]
	SERCOM5->USART.CTRLA.bit.SAMPR  = 1; // 16x with fractional generation
     a2e:	6823      	ldr	r3, [r4, #0]
     a30:	4938      	ldr	r1, [pc, #224]	; (b14 <serial_init+0x174>)
     a32:	4019      	ands	r1, r3
     a34:	2380      	movs	r3, #128	; 0x80
     a36:	019b      	lsls	r3, r3, #6
     a38:	430b      	orrs	r3, r1
     a3a:	6023      	str	r3, [r4, #0]
	SERCOM5->USART.CTRLA.bit.DORD   = 1; // LSB first
     a3c:	6821      	ldr	r1, [r4, #0]
     a3e:	2380      	movs	r3, #128	; 0x80
     a40:	05db      	lsls	r3, r3, #23
     a42:	430b      	orrs	r3, r1
     a44:	6023      	str	r3, [r4, #0]
	SERCOM5->USART.CTRLA.bit.FORM   = 0; // USART Frame - No Parity
     a46:	6823      	ldr	r3, [r4, #0]
     a48:	4933      	ldr	r1, [pc, #204]	; (b18 <serial_init+0x178>)
     a4a:	400b      	ands	r3, r1
     a4c:	6023      	str	r3, [r4, #0]
	SERCOM5->USART.CTRLB.bit.CHSIZE = 0; // 8 bit
     a4e:	6863      	ldr	r3, [r4, #4]
     a50:	2107      	movs	r1, #7
     a52:	438b      	bics	r3, r1
     a54:	6063      	str	r3, [r4, #4]
	SERCOM5->USART.CTRLB.bit.SBMODE = 0; // 1 Stop bit
     a56:	6863      	ldr	r3, [r4, #4]
     a58:	3139      	adds	r1, #57	; 0x39
     a5a:	438b      	bics	r3, r1
     a5c:	6063      	str	r3, [r4, #4]
	SERCOM5->USART.CTRLB.bit.RXEN   = 1;
     a5e:	6861      	ldr	r1, [r4, #4]
     a60:	2380      	movs	r3, #128	; 0x80
     a62:	029b      	lsls	r3, r3, #10
     a64:	430b      	orrs	r3, r1
     a66:	6063      	str	r3, [r4, #4]
	SERCOM5->USART.CTRLB.bit.TXEN   = 1;
     a68:	6863      	ldr	r3, [r4, #4]
     a6a:	431a      	orrs	r2, r3
     a6c:	6062      	str	r2, [r4, #4]
    uint32_t baudTimes8 = (48000000ul * 8.0) / (16 * baudrate);
     a6e:	0100      	lsls	r0, r0, #4
     a70:	4b2a      	ldr	r3, [pc, #168]	; (b1c <serial_init+0x17c>)
     a72:	4798      	blx	r3
     a74:	0002      	movs	r2, r0
     a76:	000b      	movs	r3, r1
     a78:	2000      	movs	r0, #0
     a7a:	4929      	ldr	r1, [pc, #164]	; (b20 <serial_init+0x180>)
     a7c:	4d29      	ldr	r5, [pc, #164]	; (b24 <serial_init+0x184>)
     a7e:	47a8      	blx	r5
     a80:	4b29      	ldr	r3, [pc, #164]	; (b28 <serial_init+0x188>)
     a82:	4798      	blx	r3
    SERCOM5->USART.BAUD.FRAC.FP   = (baudTimes8 % 8);
     a84:	2307      	movs	r3, #7
     a86:	4003      	ands	r3, r0
     a88:	89a2      	ldrh	r2, [r4, #12]
     a8a:	035b      	lsls	r3, r3, #13
     a8c:	04d2      	lsls	r2, r2, #19
     a8e:	0cd2      	lsrs	r2, r2, #19
     a90:	431a      	orrs	r2, r3
     a92:	81a2      	strh	r2, [r4, #12]
    SERCOM5->USART.BAUD.FRAC.BAUD = (baudTimes8 / 8);
     a94:	0400      	lsls	r0, r0, #16
     a96:	89a3      	ldrh	r3, [r4, #12]
     a98:	0cc0      	lsrs	r0, r0, #19
     a9a:	0b5b      	lsrs	r3, r3, #13
     a9c:	035b      	lsls	r3, r3, #13
     a9e:	4303      	orrs	r3, r0
     aa0:	81a3      	strh	r3, [r4, #12]
	SERCOM5->USART.INTENSET.bit.TXC = 1;
     aa2:	7da3      	ldrb	r3, [r4, #22]
     aa4:	2202      	movs	r2, #2
     aa6:	4313      	orrs	r3, r2
     aa8:	75a3      	strb	r3, [r4, #22]
	SERCOM5->USART.INTENSET.bit.RXC = 1;
     aaa:	7da3      	ldrb	r3, [r4, #22]
     aac:	2204      	movs	r2, #4
     aae:	4313      	orrs	r3, r2
     ab0:	75a3      	strb	r3, [r4, #22]

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
     ab2:	4b1e      	ldr	r3, [pc, #120]	; (b2c <serial_init+0x18c>)
     ab4:	2280      	movs	r2, #128	; 0x80
     ab6:	01d2      	lsls	r2, r2, #7
     ab8:	601a      	str	r2, [r3, #0]
{
  if(IRQn < 0) {
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
        (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
  else {
    NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
     aba:	20c3      	movs	r0, #195	; 0xc3
     abc:	0080      	lsls	r0, r0, #2
     abe:	581a      	ldr	r2, [r3, r0]
     ac0:	491b      	ldr	r1, [pc, #108]	; (b30 <serial_init+0x190>)
     ac2:	4011      	ands	r1, r2
     ac4:	22c0      	movs	r2, #192	; 0xc0
     ac6:	0412      	lsls	r2, r2, #16
     ac8:	430a      	orrs	r2, r1
     aca:	501a      	str	r2, [r3, r0]
	SERCOM5->USART.CTRLA.bit.ENABLE = 1;
     acc:	6823      	ldr	r3, [r4, #0]
     ace:	2202      	movs	r2, #2
     ad0:	4313      	orrs	r3, r2
     ad2:	6023      	str	r3, [r4, #0]
	while (SERCOM5->USART.SYNCBUSY.bit.ENABLE);
     ad4:	0022      	movs	r2, r4
     ad6:	69d3      	ldr	r3, [r2, #28]
     ad8:	079b      	lsls	r3, r3, #30
     ada:	d4fc      	bmi.n	ad6 <serial_init+0x136>
    _serial_default.rx = _serial_default_rx;
     adc:	4b15      	ldr	r3, [pc, #84]	; (b34 <serial_init+0x194>)
     ade:	4a16      	ldr	r2, [pc, #88]	; (b38 <serial_init+0x198>)
     ae0:	601a      	str	r2, [r3, #0]
    _serial_default.tx = _serial_default_tx;
     ae2:	4a16      	ldr	r2, [pc, #88]	; (b3c <serial_init+0x19c>)
     ae4:	605a      	str	r2, [r3, #4]
    _serial_callback = _serial_default;
     ae6:	001a      	movs	r2, r3
     ae8:	3208      	adds	r2, #8
     aea:	cb03      	ldmia	r3!, {r0, r1}
     aec:	c203      	stmia	r2!, {r0, r1}
    _serial_active = 1;
     aee:	2201      	movs	r2, #1
     af0:	4b13      	ldr	r3, [pc, #76]	; (b40 <serial_init+0x1a0>)
     af2:	701a      	strb	r2, [r3, #0]
}
     af4:	bd70      	pop	{r4, r5, r6, pc}
     af6:	46c0      	nop			; (mov r8, r8)
     af8:	41004400 	.word	0x41004400
     afc:	40000400 	.word	0x40000400
     b00:	00004019 	.word	0x00004019
     b04:	40000c00 	.word	0x40000c00
     b08:	42001c00 	.word	0x42001c00
     b0c:	efffffff 	.word	0xefffffff
     b10:	fffcffff 	.word	0xfffcffff
     b14:	ffff1fff 	.word	0xffff1fff
     b18:	f0ffffff 	.word	0xf0ffffff
     b1c:	00001cb9 	.word	0x00001cb9
     b20:	41b6e360 	.word	0x41b6e360
     b24:	00000fbd 	.word	0x00000fbd
     b28:	00000f81 	.word	0x00000f81
     b2c:	e000e100 	.word	0xe000e100
     b30:	ff00ffff 	.word	0xff00ffff
     b34:	20000454 	.word	0x20000454
     b38:	00000b7d 	.word	0x00000b7d
     b3c:	0000099d 	.word	0x0000099d
     b40:	20000488 	.word	0x20000488

00000b44 <serial_tx_flag>:
    return SERCOM5->USART.INTFLAG.bit.TXC;
     b44:	4b02      	ldr	r3, [pc, #8]	; (b50 <serial_tx_flag+0xc>)
     b46:	7e18      	ldrb	r0, [r3, #24]
     b48:	0780      	lsls	r0, r0, #30
     b4a:	0fc0      	lsrs	r0, r0, #31
}
     b4c:	4770      	bx	lr
     b4e:	46c0      	nop			; (mov r8, r8)
     b50:	42001c00 	.word	0x42001c00

00000b54 <serial_rx_flag>:
	return SERCOM5->USART.INTFLAG.bit.RXC;
     b54:	4b02      	ldr	r3, [pc, #8]	; (b60 <serial_rx_flag+0xc>)
     b56:	7e18      	ldrb	r0, [r3, #24]
     b58:	0740      	lsls	r0, r0, #29
     b5a:	0fc0      	lsrs	r0, r0, #31
}
     b5c:	4770      	bx	lr
     b5e:	46c0      	nop			; (mov r8, r8)
     b60:	42001c00 	.word	0x42001c00

00000b64 <serial_read>:
    _serial_active = 1;
     b64:	2201      	movs	r2, #1
     b66:	4b03      	ldr	r3, [pc, #12]	; (b74 <serial_read+0x10>)
     b68:	701a      	strb	r2, [r3, #0]
    uint8_t data = SERCOM5->USART.DATA.bit.DATA;
     b6a:	4b03      	ldr	r3, [pc, #12]	; (b78 <serial_read+0x14>)
     b6c:	8d18      	ldrh	r0, [r3, #40]	; 0x28
    return data;
     b6e:	b2c0      	uxtb	r0, r0
}
     b70:	4770      	bx	lr
     b72:	46c0      	nop			; (mov r8, r8)
     b74:	20000488 	.word	0x20000488
     b78:	42001c00 	.word	0x42001c00

00000b7c <_serial_default_rx>:

//==============================================================================
uint8_t _serial_default_rx()
{
     b7c:	b510      	push	{r4, lr}
    serial_read();
     b7e:	4b02      	ldr	r3, [pc, #8]	; (b88 <_serial_default_rx+0xc>)
     b80:	4798      	blx	r3
    return 0;
}
     b82:	2000      	movs	r0, #0
     b84:	bd10      	pop	{r4, pc}
     b86:	46c0      	nop			; (mov r8, r8)
     b88:	00000b65 	.word	0x00000b65

00000b8c <serial_write>:
    _serial_active = 1;
     b8c:	2201      	movs	r2, #1
     b8e:	4b06      	ldr	r3, [pc, #24]	; (ba8 <serial_write+0x1c>)
     b90:	701a      	strb	r2, [r3, #0]
	while (!SERCOM5->USART.INTFLAG.bit.DRE);
     b92:	4a06      	ldr	r2, [pc, #24]	; (bac <serial_write+0x20>)
     b94:	7e13      	ldrb	r3, [r2, #24]
     b96:	07db      	lsls	r3, r3, #31
     b98:	d5fc      	bpl.n	b94 <serial_write+0x8>
	SERCOM5->USART.DATA.bit.DATA = data;
     b9a:	4a04      	ldr	r2, [pc, #16]	; (bac <serial_write+0x20>)
     b9c:	8d13      	ldrh	r3, [r2, #40]	; 0x28
     b9e:	0a5b      	lsrs	r3, r3, #9
     ba0:	025b      	lsls	r3, r3, #9
     ba2:	4318      	orrs	r0, r3
     ba4:	8510      	strh	r0, [r2, #40]	; 0x28
}
     ba6:	4770      	bx	lr
     ba8:	20000488 	.word	0x20000488
     bac:	42001c00 	.word	0x42001c00

00000bb0 <serial_unregister_rx>:
    if (_serial_callback.rx == callback) {
     bb0:	4b05      	ldr	r3, [pc, #20]	; (bc8 <serial_unregister_rx+0x18>)
     bb2:	689b      	ldr	r3, [r3, #8]
     bb4:	4283      	cmp	r3, r0
     bb6:	d000      	beq.n	bba <serial_unregister_rx+0xa>
}
     bb8:	4770      	bx	lr
        _serial_active = 1;
     bba:	2201      	movs	r2, #1
     bbc:	4b03      	ldr	r3, [pc, #12]	; (bcc <serial_unregister_rx+0x1c>)
     bbe:	701a      	strb	r2, [r3, #0]
        _serial_callback.rx = _serial_default.rx;
     bc0:	4b01      	ldr	r3, [pc, #4]	; (bc8 <serial_unregister_rx+0x18>)
     bc2:	681a      	ldr	r2, [r3, #0]
     bc4:	609a      	str	r2, [r3, #8]
}
     bc6:	e7f7      	b.n	bb8 <serial_unregister_rx+0x8>
     bc8:	20000454 	.word	0x20000454
     bcc:	20000488 	.word	0x20000488

00000bd0 <serial_unregister_tx>:
    if (_serial_callback.tx == callback) {
     bd0:	4b05      	ldr	r3, [pc, #20]	; (be8 <serial_unregister_tx+0x18>)
     bd2:	68db      	ldr	r3, [r3, #12]
     bd4:	4283      	cmp	r3, r0
     bd6:	d000      	beq.n	bda <serial_unregister_tx+0xa>
}
     bd8:	4770      	bx	lr
        _serial_active = 1;
     bda:	2201      	movs	r2, #1
     bdc:	4b03      	ldr	r3, [pc, #12]	; (bec <serial_unregister_tx+0x1c>)
     bde:	701a      	strb	r2, [r3, #0]
        _serial_callback.tx = _serial_default.tx;
     be0:	4b01      	ldr	r3, [pc, #4]	; (be8 <serial_unregister_tx+0x18>)
     be2:	685a      	ldr	r2, [r3, #4]
     be4:	60da      	str	r2, [r3, #12]
}
     be6:	e7f7      	b.n	bd8 <serial_unregister_tx+0x8>
     be8:	20000454 	.word	0x20000454
     bec:	20000488 	.word	0x20000488

00000bf0 <serial_unregister>:
void serial_unregister(serial_t callback) {
     bf0:	b500      	push	{lr}
     bf2:	b083      	sub	sp, #12
     bf4:	9101      	str	r1, [sp, #4]
    serial_unregister_rx(callback.rx);
     bf6:	4b03      	ldr	r3, [pc, #12]	; (c04 <serial_unregister+0x14>)
     bf8:	4798      	blx	r3
    serial_unregister_tx(callback.tx);
     bfa:	9801      	ldr	r0, [sp, #4]
     bfc:	4b02      	ldr	r3, [pc, #8]	; (c08 <serial_unregister+0x18>)
     bfe:	4798      	blx	r3
}
     c00:	b003      	add	sp, #12
     c02:	bd00      	pop	{pc}
     c04:	00000bb1 	.word	0x00000bb1
     c08:	00000bd1 	.word	0x00000bd1

00000c0c <_serial_rx_registered>:
    return (_serial_callback.rx != _serial_default.rx);
     c0c:	4b03      	ldr	r3, [pc, #12]	; (c1c <_serial_rx_registered+0x10>)
     c0e:	6898      	ldr	r0, [r3, #8]
     c10:	681b      	ldr	r3, [r3, #0]
     c12:	1ac0      	subs	r0, r0, r3
     c14:	1e43      	subs	r3, r0, #1
     c16:	4198      	sbcs	r0, r3
     c18:	b2c0      	uxtb	r0, r0
}
     c1a:	4770      	bx	lr
     c1c:	20000454 	.word	0x20000454

00000c20 <serial_register_rx>:
uint8_t serial_register_rx(serial_callback_t callback) {
     c20:	b510      	push	{r4, lr}
     c22:	0004      	movs	r4, r0
    if (!_serial_rx_registered()) {
     c24:	4b06      	ldr	r3, [pc, #24]	; (c40 <serial_register_rx+0x20>)
     c26:	4798      	blx	r3
    return 0;
     c28:	2300      	movs	r3, #0
    if (!_serial_rx_registered()) {
     c2a:	2800      	cmp	r0, #0
     c2c:	d105      	bne.n	c3a <serial_register_rx+0x1a>
        _serial_active = 1;
     c2e:	2201      	movs	r2, #1
     c30:	4b04      	ldr	r3, [pc, #16]	; (c44 <serial_register_rx+0x24>)
     c32:	701a      	strb	r2, [r3, #0]
        _serial_callback.rx = callback;
     c34:	4b04      	ldr	r3, [pc, #16]	; (c48 <serial_register_rx+0x28>)
     c36:	609c      	str	r4, [r3, #8]
        return 1;
     c38:	2301      	movs	r3, #1
}
     c3a:	0018      	movs	r0, r3
     c3c:	bd10      	pop	{r4, pc}
     c3e:	46c0      	nop			; (mov r8, r8)
     c40:	00000c0d 	.word	0x00000c0d
     c44:	20000488 	.word	0x20000488
     c48:	20000454 	.word	0x20000454

00000c4c <_serial_tx_registered>:
    return (_serial_callback.tx != _serial_default.tx);
     c4c:	4b03      	ldr	r3, [pc, #12]	; (c5c <_serial_tx_registered+0x10>)
     c4e:	68d8      	ldr	r0, [r3, #12]
     c50:	685b      	ldr	r3, [r3, #4]
     c52:	1ac0      	subs	r0, r0, r3
     c54:	1e43      	subs	r3, r0, #1
     c56:	4198      	sbcs	r0, r3
     c58:	b2c0      	uxtb	r0, r0
}
     c5a:	4770      	bx	lr
     c5c:	20000454 	.word	0x20000454

00000c60 <serial_register_tx>:
uint8_t serial_register_tx(serial_callback_t callback) {
     c60:	b510      	push	{r4, lr}
     c62:	0004      	movs	r4, r0
    if (!_serial_tx_registered()) {
     c64:	4b06      	ldr	r3, [pc, #24]	; (c80 <serial_register_tx+0x20>)
     c66:	4798      	blx	r3
    return 0;
     c68:	2300      	movs	r3, #0
    if (!_serial_tx_registered()) {
     c6a:	2800      	cmp	r0, #0
     c6c:	d105      	bne.n	c7a <serial_register_tx+0x1a>
        _serial_active = 1;
     c6e:	2201      	movs	r2, #1
     c70:	4b04      	ldr	r3, [pc, #16]	; (c84 <serial_register_tx+0x24>)
     c72:	701a      	strb	r2, [r3, #0]
        _serial_callback.tx = callback;
     c74:	4b04      	ldr	r3, [pc, #16]	; (c88 <serial_register_tx+0x28>)
     c76:	60dc      	str	r4, [r3, #12]
        return 1;
     c78:	2301      	movs	r3, #1
}
     c7a:	0018      	movs	r0, r3
     c7c:	bd10      	pop	{r4, pc}
     c7e:	46c0      	nop			; (mov r8, r8)
     c80:	00000c4d 	.word	0x00000c4d
     c84:	20000488 	.word	0x20000488
     c88:	20000454 	.word	0x20000454

00000c8c <serial_register>:
uint8_t serial_register(serial_t callback) {
     c8c:	b570      	push	{r4, r5, r6, lr}
     c8e:	b082      	sub	sp, #8
     c90:	0005      	movs	r5, r0
     c92:	000e      	movs	r6, r1
    if (callback.rx && callback.tx) {
     c94:	2800      	cmp	r0, #0
     c96:	d019      	beq.n	ccc <serial_register+0x40>
     c98:	2900      	cmp	r1, #0
     c9a:	d013      	beq.n	cc4 <serial_register+0x38>
        if (!_serial_rx_registered() && !_serial_tx_registered()) {
     c9c:	4b10      	ldr	r3, [pc, #64]	; (ce0 <serial_register+0x54>)
     c9e:	4798      	blx	r3
     ca0:	1e04      	subs	r4, r0, #0
     ca2:	d003      	beq.n	cac <serial_register+0x20>
    return 0;
     ca4:	2400      	movs	r4, #0
}
     ca6:	0020      	movs	r0, r4
     ca8:	b002      	add	sp, #8
     caa:	bd70      	pop	{r4, r5, r6, pc}
        if (!_serial_rx_registered() && !_serial_tx_registered()) {
     cac:	4b0d      	ldr	r3, [pc, #52]	; (ce4 <serial_register+0x58>)
     cae:	4798      	blx	r3
     cb0:	2800      	cmp	r0, #0
     cb2:	d1f8      	bne.n	ca6 <serial_register+0x1a>
            serial_register_rx(callback.rx);
     cb4:	0028      	movs	r0, r5
     cb6:	4b0c      	ldr	r3, [pc, #48]	; (ce8 <serial_register+0x5c>)
     cb8:	4798      	blx	r3
            serial_register_tx(callback.tx);
     cba:	0030      	movs	r0, r6
     cbc:	4b0b      	ldr	r3, [pc, #44]	; (cec <serial_register+0x60>)
     cbe:	4798      	blx	r3
            return 1;
     cc0:	3401      	adds	r4, #1
     cc2:	e7f0      	b.n	ca6 <serial_register+0x1a>
        return serial_register_rx(callback.rx);
     cc4:	4b08      	ldr	r3, [pc, #32]	; (ce8 <serial_register+0x5c>)
     cc6:	4798      	blx	r3
     cc8:	0004      	movs	r4, r0
     cca:	e7ec      	b.n	ca6 <serial_register+0x1a>
    else if (callback.tx) {
     ccc:	2900      	cmp	r1, #0
     cce:	d004      	beq.n	cda <serial_register+0x4e>
        return serial_register_tx(callback.tx);
     cd0:	0008      	movs	r0, r1
     cd2:	4b06      	ldr	r3, [pc, #24]	; (cec <serial_register+0x60>)
     cd4:	4798      	blx	r3
     cd6:	0004      	movs	r4, r0
     cd8:	e7e5      	b.n	ca6 <serial_register+0x1a>
    return 0;
     cda:	2400      	movs	r4, #0
     cdc:	e7e3      	b.n	ca6 <serial_register+0x1a>
     cde:	46c0      	nop			; (mov r8, r8)
     ce0:	00000c0d 	.word	0x00000c0d
     ce4:	00000c4d 	.word	0x00000c4d
     ce8:	00000c21 	.word	0x00000c21
     cec:	00000c61 	.word	0x00000c61

00000cf0 <SERCOM5_Handler>:
//     | .__/ |  \  .__/
//
//------------------------------------------------------------------------------

//==============================================================================
void SERCOM5_Handler() {
     cf0:	b510      	push	{r4, lr}
    // Prevent timeout
    _serial_active = 1;
     cf2:	2201      	movs	r2, #1
     cf4:	4b10      	ldr	r3, [pc, #64]	; (d38 <SERCOM5_Handler+0x48>)
     cf6:	701a      	strb	r2, [r3, #0]
    return SERCOM5->USART.INTFLAG.bit.TXC;
     cf8:	4b10      	ldr	r3, [pc, #64]	; (d3c <SERCOM5_Handler+0x4c>)
     cfa:	7e1b      	ldrb	r3, [r3, #24]

	if (serial_tx_flag()) {
     cfc:	079b      	lsls	r3, r3, #30
     cfe:	d50d      	bpl.n	d1c <SERCOM5_Handler+0x2c>
		// Clear the TX flag and call callback
		if (_serial_callback.tx()) {
     d00:	4b0f      	ldr	r3, [pc, #60]	; (d40 <SERCOM5_Handler+0x50>)
     d02:	68db      	ldr	r3, [r3, #12]
     d04:	4798      	blx	r3
     d06:	2800      	cmp	r0, #0
     d08:	d002      	beq.n	d10 <SERCOM5_Handler+0x20>
            _serial_callback.tx = _serial_default.tx;
     d0a:	4b0d      	ldr	r3, [pc, #52]	; (d40 <SERCOM5_Handler+0x50>)
     d0c:	685a      	ldr	r2, [r3, #4]
     d0e:	60da      	str	r2, [r3, #12]
    SERCOM5->USART.INTFLAG.bit.TXC = 1;
     d10:	4a0a      	ldr	r2, [pc, #40]	; (d3c <SERCOM5_Handler+0x4c>)
     d12:	7e13      	ldrb	r3, [r2, #24]
     d14:	2102      	movs	r1, #2
     d16:	430b      	orrs	r3, r1
     d18:	7613      	strb	r3, [r2, #24]
	} else if (serial_rx_flag()) {
		if (_serial_callback.rx()) {
            _serial_callback.rx = _serial_default.rx;
        }
	}
}
     d1a:	bd10      	pop	{r4, pc}
	return SERCOM5->USART.INTFLAG.bit.RXC;
     d1c:	4b07      	ldr	r3, [pc, #28]	; (d3c <SERCOM5_Handler+0x4c>)
     d1e:	7e1b      	ldrb	r3, [r3, #24]
	} else if (serial_rx_flag()) {
     d20:	075b      	lsls	r3, r3, #29
     d22:	d5fa      	bpl.n	d1a <SERCOM5_Handler+0x2a>
		if (_serial_callback.rx()) {
     d24:	4b06      	ldr	r3, [pc, #24]	; (d40 <SERCOM5_Handler+0x50>)
     d26:	689b      	ldr	r3, [r3, #8]
     d28:	4798      	blx	r3
     d2a:	2800      	cmp	r0, #0
     d2c:	d0f5      	beq.n	d1a <SERCOM5_Handler+0x2a>
            _serial_callback.rx = _serial_default.rx;
     d2e:	4b04      	ldr	r3, [pc, #16]	; (d40 <SERCOM5_Handler+0x50>)
     d30:	681a      	ldr	r2, [r3, #0]
     d32:	609a      	str	r2, [r3, #8]
}
     d34:	e7f1      	b.n	d1a <SERCOM5_Handler+0x2a>
     d36:	46c0      	nop			; (mov r8, r8)
     d38:	20000488 	.word	0x20000488
     d3c:	42001c00 	.word	0x42001c00
     d40:	20000454 	.word	0x20000454

00000d44 <timer_init>:
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
     d44:	4a0a      	ldr	r2, [pc, #40]	; (d70 <timer_init+0x2c>)
     d46:	4b0b      	ldr	r3, [pc, #44]	; (d74 <timer_init+0x30>)
     d48:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
     d4a:	480b      	ldr	r0, [pc, #44]	; (d78 <timer_init+0x34>)
     d4c:	6a03      	ldr	r3, [r0, #32]
     d4e:	021b      	lsls	r3, r3, #8
     d50:	0a1b      	lsrs	r3, r3, #8
     d52:	21c0      	movs	r1, #192	; 0xc0
     d54:	0609      	lsls	r1, r1, #24
     d56:	430b      	orrs	r3, r1
     d58:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
     d5a:	2300      	movs	r3, #0
     d5c:	6093      	str	r3, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
     d5e:	3307      	adds	r3, #7
     d60:	6013      	str	r3, [r2, #0]

//==============================================================================
void timer_init()
{
    SysTick_Config(48000);
    millis = 0;
     d62:	2000      	movs	r0, #0
     d64:	2100      	movs	r1, #0
     d66:	4b05      	ldr	r3, [pc, #20]	; (d7c <timer_init+0x38>)
     d68:	6018      	str	r0, [r3, #0]
     d6a:	6059      	str	r1, [r3, #4]
}
     d6c:	4770      	bx	lr
     d6e:	46c0      	nop			; (mov r8, r8)
     d70:	e000e010 	.word	0xe000e010
     d74:	0000bb7f 	.word	0x0000bb7f
     d78:	e000ed00 	.word	0xe000ed00
     d7c:	20000490 	.word	0x20000490

00000d80 <timer_get>:

//==============================================================================
uint64_t timer_get()
{
    return millis;
     d80:	4b01      	ldr	r3, [pc, #4]	; (d88 <timer_get+0x8>)
     d82:	6818      	ldr	r0, [r3, #0]
     d84:	6859      	ldr	r1, [r3, #4]
}
     d86:	4770      	bx	lr
     d88:	20000490 	.word	0x20000490

00000d8c <SysTick_Handler>:
//
//------------------------------------------------------------------------------

//==============================================================================
void SysTick_Handler()
{
     d8c:	b530      	push	{r4, r5, lr}
    millis++;
     d8e:	4905      	ldr	r1, [pc, #20]	; (da4 <SysTick_Handler+0x18>)
     d90:	680a      	ldr	r2, [r1, #0]
     d92:	684b      	ldr	r3, [r1, #4]
     d94:	2401      	movs	r4, #1
     d96:	2500      	movs	r5, #0
     d98:	1912      	adds	r2, r2, r4
     d9a:	416b      	adcs	r3, r5
     d9c:	600a      	str	r2, [r1, #0]
     d9e:	604b      	str	r3, [r1, #4]
}
     da0:	bd30      	pop	{r4, r5, pc}
     da2:	46c0      	nop			; (mov r8, r8)
     da4:	20000490 	.word	0x20000490

00000da8 <__divsi3>:
     da8:	4603      	mov	r3, r0
     daa:	430b      	orrs	r3, r1
     dac:	d47f      	bmi.n	eae <__divsi3+0x106>
     dae:	2200      	movs	r2, #0
     db0:	0843      	lsrs	r3, r0, #1
     db2:	428b      	cmp	r3, r1
     db4:	d374      	bcc.n	ea0 <__divsi3+0xf8>
     db6:	0903      	lsrs	r3, r0, #4
     db8:	428b      	cmp	r3, r1
     dba:	d35f      	bcc.n	e7c <__divsi3+0xd4>
     dbc:	0a03      	lsrs	r3, r0, #8
     dbe:	428b      	cmp	r3, r1
     dc0:	d344      	bcc.n	e4c <__divsi3+0xa4>
     dc2:	0b03      	lsrs	r3, r0, #12
     dc4:	428b      	cmp	r3, r1
     dc6:	d328      	bcc.n	e1a <__divsi3+0x72>
     dc8:	0c03      	lsrs	r3, r0, #16
     dca:	428b      	cmp	r3, r1
     dcc:	d30d      	bcc.n	dea <__divsi3+0x42>
     dce:	22ff      	movs	r2, #255	; 0xff
     dd0:	0209      	lsls	r1, r1, #8
     dd2:	ba12      	rev	r2, r2
     dd4:	0c03      	lsrs	r3, r0, #16
     dd6:	428b      	cmp	r3, r1
     dd8:	d302      	bcc.n	de0 <__divsi3+0x38>
     dda:	1212      	asrs	r2, r2, #8
     ddc:	0209      	lsls	r1, r1, #8
     dde:	d065      	beq.n	eac <__divsi3+0x104>
     de0:	0b03      	lsrs	r3, r0, #12
     de2:	428b      	cmp	r3, r1
     de4:	d319      	bcc.n	e1a <__divsi3+0x72>
     de6:	e000      	b.n	dea <__divsi3+0x42>
     de8:	0a09      	lsrs	r1, r1, #8
     dea:	0bc3      	lsrs	r3, r0, #15
     dec:	428b      	cmp	r3, r1
     dee:	d301      	bcc.n	df4 <__divsi3+0x4c>
     df0:	03cb      	lsls	r3, r1, #15
     df2:	1ac0      	subs	r0, r0, r3
     df4:	4152      	adcs	r2, r2
     df6:	0b83      	lsrs	r3, r0, #14
     df8:	428b      	cmp	r3, r1
     dfa:	d301      	bcc.n	e00 <__divsi3+0x58>
     dfc:	038b      	lsls	r3, r1, #14
     dfe:	1ac0      	subs	r0, r0, r3
     e00:	4152      	adcs	r2, r2
     e02:	0b43      	lsrs	r3, r0, #13
     e04:	428b      	cmp	r3, r1
     e06:	d301      	bcc.n	e0c <__divsi3+0x64>
     e08:	034b      	lsls	r3, r1, #13
     e0a:	1ac0      	subs	r0, r0, r3
     e0c:	4152      	adcs	r2, r2
     e0e:	0b03      	lsrs	r3, r0, #12
     e10:	428b      	cmp	r3, r1
     e12:	d301      	bcc.n	e18 <__divsi3+0x70>
     e14:	030b      	lsls	r3, r1, #12
     e16:	1ac0      	subs	r0, r0, r3
     e18:	4152      	adcs	r2, r2
     e1a:	0ac3      	lsrs	r3, r0, #11
     e1c:	428b      	cmp	r3, r1
     e1e:	d301      	bcc.n	e24 <__divsi3+0x7c>
     e20:	02cb      	lsls	r3, r1, #11
     e22:	1ac0      	subs	r0, r0, r3
     e24:	4152      	adcs	r2, r2
     e26:	0a83      	lsrs	r3, r0, #10
     e28:	428b      	cmp	r3, r1
     e2a:	d301      	bcc.n	e30 <__divsi3+0x88>
     e2c:	028b      	lsls	r3, r1, #10
     e2e:	1ac0      	subs	r0, r0, r3
     e30:	4152      	adcs	r2, r2
     e32:	0a43      	lsrs	r3, r0, #9
     e34:	428b      	cmp	r3, r1
     e36:	d301      	bcc.n	e3c <__divsi3+0x94>
     e38:	024b      	lsls	r3, r1, #9
     e3a:	1ac0      	subs	r0, r0, r3
     e3c:	4152      	adcs	r2, r2
     e3e:	0a03      	lsrs	r3, r0, #8
     e40:	428b      	cmp	r3, r1
     e42:	d301      	bcc.n	e48 <__divsi3+0xa0>
     e44:	020b      	lsls	r3, r1, #8
     e46:	1ac0      	subs	r0, r0, r3
     e48:	4152      	adcs	r2, r2
     e4a:	d2cd      	bcs.n	de8 <__divsi3+0x40>
     e4c:	09c3      	lsrs	r3, r0, #7
     e4e:	428b      	cmp	r3, r1
     e50:	d301      	bcc.n	e56 <__divsi3+0xae>
     e52:	01cb      	lsls	r3, r1, #7
     e54:	1ac0      	subs	r0, r0, r3
     e56:	4152      	adcs	r2, r2
     e58:	0983      	lsrs	r3, r0, #6
     e5a:	428b      	cmp	r3, r1
     e5c:	d301      	bcc.n	e62 <__divsi3+0xba>
     e5e:	018b      	lsls	r3, r1, #6
     e60:	1ac0      	subs	r0, r0, r3
     e62:	4152      	adcs	r2, r2
     e64:	0943      	lsrs	r3, r0, #5
     e66:	428b      	cmp	r3, r1
     e68:	d301      	bcc.n	e6e <__divsi3+0xc6>
     e6a:	014b      	lsls	r3, r1, #5
     e6c:	1ac0      	subs	r0, r0, r3
     e6e:	4152      	adcs	r2, r2
     e70:	0903      	lsrs	r3, r0, #4
     e72:	428b      	cmp	r3, r1
     e74:	d301      	bcc.n	e7a <__divsi3+0xd2>
     e76:	010b      	lsls	r3, r1, #4
     e78:	1ac0      	subs	r0, r0, r3
     e7a:	4152      	adcs	r2, r2
     e7c:	08c3      	lsrs	r3, r0, #3
     e7e:	428b      	cmp	r3, r1
     e80:	d301      	bcc.n	e86 <__divsi3+0xde>
     e82:	00cb      	lsls	r3, r1, #3
     e84:	1ac0      	subs	r0, r0, r3
     e86:	4152      	adcs	r2, r2
     e88:	0883      	lsrs	r3, r0, #2
     e8a:	428b      	cmp	r3, r1
     e8c:	d301      	bcc.n	e92 <__divsi3+0xea>
     e8e:	008b      	lsls	r3, r1, #2
     e90:	1ac0      	subs	r0, r0, r3
     e92:	4152      	adcs	r2, r2
     e94:	0843      	lsrs	r3, r0, #1
     e96:	428b      	cmp	r3, r1
     e98:	d301      	bcc.n	e9e <__divsi3+0xf6>
     e9a:	004b      	lsls	r3, r1, #1
     e9c:	1ac0      	subs	r0, r0, r3
     e9e:	4152      	adcs	r2, r2
     ea0:	1a41      	subs	r1, r0, r1
     ea2:	d200      	bcs.n	ea6 <__divsi3+0xfe>
     ea4:	4601      	mov	r1, r0
     ea6:	4152      	adcs	r2, r2
     ea8:	4610      	mov	r0, r2
     eaa:	4770      	bx	lr
     eac:	e05d      	b.n	f6a <__divsi3+0x1c2>
     eae:	0fca      	lsrs	r2, r1, #31
     eb0:	d000      	beq.n	eb4 <__divsi3+0x10c>
     eb2:	4249      	negs	r1, r1
     eb4:	1003      	asrs	r3, r0, #32
     eb6:	d300      	bcc.n	eba <__divsi3+0x112>
     eb8:	4240      	negs	r0, r0
     eba:	4053      	eors	r3, r2
     ebc:	2200      	movs	r2, #0
     ebe:	469c      	mov	ip, r3
     ec0:	0903      	lsrs	r3, r0, #4
     ec2:	428b      	cmp	r3, r1
     ec4:	d32d      	bcc.n	f22 <__divsi3+0x17a>
     ec6:	0a03      	lsrs	r3, r0, #8
     ec8:	428b      	cmp	r3, r1
     eca:	d312      	bcc.n	ef2 <__divsi3+0x14a>
     ecc:	22fc      	movs	r2, #252	; 0xfc
     ece:	0189      	lsls	r1, r1, #6
     ed0:	ba12      	rev	r2, r2
     ed2:	0a03      	lsrs	r3, r0, #8
     ed4:	428b      	cmp	r3, r1
     ed6:	d30c      	bcc.n	ef2 <__divsi3+0x14a>
     ed8:	0189      	lsls	r1, r1, #6
     eda:	1192      	asrs	r2, r2, #6
     edc:	428b      	cmp	r3, r1
     ede:	d308      	bcc.n	ef2 <__divsi3+0x14a>
     ee0:	0189      	lsls	r1, r1, #6
     ee2:	1192      	asrs	r2, r2, #6
     ee4:	428b      	cmp	r3, r1
     ee6:	d304      	bcc.n	ef2 <__divsi3+0x14a>
     ee8:	0189      	lsls	r1, r1, #6
     eea:	d03a      	beq.n	f62 <__divsi3+0x1ba>
     eec:	1192      	asrs	r2, r2, #6
     eee:	e000      	b.n	ef2 <__divsi3+0x14a>
     ef0:	0989      	lsrs	r1, r1, #6
     ef2:	09c3      	lsrs	r3, r0, #7
     ef4:	428b      	cmp	r3, r1
     ef6:	d301      	bcc.n	efc <__divsi3+0x154>
     ef8:	01cb      	lsls	r3, r1, #7
     efa:	1ac0      	subs	r0, r0, r3
     efc:	4152      	adcs	r2, r2
     efe:	0983      	lsrs	r3, r0, #6
     f00:	428b      	cmp	r3, r1
     f02:	d301      	bcc.n	f08 <__divsi3+0x160>
     f04:	018b      	lsls	r3, r1, #6
     f06:	1ac0      	subs	r0, r0, r3
     f08:	4152      	adcs	r2, r2
     f0a:	0943      	lsrs	r3, r0, #5
     f0c:	428b      	cmp	r3, r1
     f0e:	d301      	bcc.n	f14 <__divsi3+0x16c>
     f10:	014b      	lsls	r3, r1, #5
     f12:	1ac0      	subs	r0, r0, r3
     f14:	4152      	adcs	r2, r2
     f16:	0903      	lsrs	r3, r0, #4
     f18:	428b      	cmp	r3, r1
     f1a:	d301      	bcc.n	f20 <__divsi3+0x178>
     f1c:	010b      	lsls	r3, r1, #4
     f1e:	1ac0      	subs	r0, r0, r3
     f20:	4152      	adcs	r2, r2
     f22:	08c3      	lsrs	r3, r0, #3
     f24:	428b      	cmp	r3, r1
     f26:	d301      	bcc.n	f2c <__divsi3+0x184>
     f28:	00cb      	lsls	r3, r1, #3
     f2a:	1ac0      	subs	r0, r0, r3
     f2c:	4152      	adcs	r2, r2
     f2e:	0883      	lsrs	r3, r0, #2
     f30:	428b      	cmp	r3, r1
     f32:	d301      	bcc.n	f38 <__divsi3+0x190>
     f34:	008b      	lsls	r3, r1, #2
     f36:	1ac0      	subs	r0, r0, r3
     f38:	4152      	adcs	r2, r2
     f3a:	d2d9      	bcs.n	ef0 <__divsi3+0x148>
     f3c:	0843      	lsrs	r3, r0, #1
     f3e:	428b      	cmp	r3, r1
     f40:	d301      	bcc.n	f46 <__divsi3+0x19e>
     f42:	004b      	lsls	r3, r1, #1
     f44:	1ac0      	subs	r0, r0, r3
     f46:	4152      	adcs	r2, r2
     f48:	1a41      	subs	r1, r0, r1
     f4a:	d200      	bcs.n	f4e <__divsi3+0x1a6>
     f4c:	4601      	mov	r1, r0
     f4e:	4663      	mov	r3, ip
     f50:	4152      	adcs	r2, r2
     f52:	105b      	asrs	r3, r3, #1
     f54:	4610      	mov	r0, r2
     f56:	d301      	bcc.n	f5c <__divsi3+0x1b4>
     f58:	4240      	negs	r0, r0
     f5a:	2b00      	cmp	r3, #0
     f5c:	d500      	bpl.n	f60 <__divsi3+0x1b8>
     f5e:	4249      	negs	r1, r1
     f60:	4770      	bx	lr
     f62:	4663      	mov	r3, ip
     f64:	105b      	asrs	r3, r3, #1
     f66:	d300      	bcc.n	f6a <__divsi3+0x1c2>
     f68:	4240      	negs	r0, r0
     f6a:	b501      	push	{r0, lr}
     f6c:	2000      	movs	r0, #0
     f6e:	f000 f805 	bl	f7c <__aeabi_idiv0>
     f72:	bd02      	pop	{r1, pc}

00000f74 <__aeabi_idivmod>:
     f74:	2900      	cmp	r1, #0
     f76:	d0f8      	beq.n	f6a <__divsi3+0x1c2>
     f78:	e716      	b.n	da8 <__divsi3>
     f7a:	4770      	bx	lr

00000f7c <__aeabi_idiv0>:
     f7c:	4770      	bx	lr
     f7e:	46c0      	nop			; (mov r8, r8)

00000f80 <__aeabi_d2uiz>:
     f80:	b570      	push	{r4, r5, r6, lr}
     f82:	2200      	movs	r2, #0
     f84:	4b0c      	ldr	r3, [pc, #48]	; (fb8 <__aeabi_d2uiz+0x38>)
     f86:	0004      	movs	r4, r0
     f88:	000d      	movs	r5, r1
     f8a:	f000 ff8b 	bl	1ea4 <__aeabi_dcmpge>
     f8e:	2800      	cmp	r0, #0
     f90:	d104      	bne.n	f9c <__aeabi_d2uiz+0x1c>
     f92:	0020      	movs	r0, r4
     f94:	0029      	movs	r1, r5
     f96:	f000 fe5b 	bl	1c50 <__aeabi_d2iz>
     f9a:	bd70      	pop	{r4, r5, r6, pc}
     f9c:	4b06      	ldr	r3, [pc, #24]	; (fb8 <__aeabi_d2uiz+0x38>)
     f9e:	2200      	movs	r2, #0
     fa0:	0020      	movs	r0, r4
     fa2:	0029      	movs	r1, r5
     fa4:	f000 fb3e 	bl	1624 <__aeabi_dsub>
     fa8:	f000 fe52 	bl	1c50 <__aeabi_d2iz>
     fac:	2380      	movs	r3, #128	; 0x80
     fae:	061b      	lsls	r3, r3, #24
     fb0:	469c      	mov	ip, r3
     fb2:	4460      	add	r0, ip
     fb4:	e7f1      	b.n	f9a <__aeabi_d2uiz+0x1a>
     fb6:	46c0      	nop			; (mov r8, r8)
     fb8:	41e00000 	.word	0x41e00000

00000fbc <__aeabi_ddiv>:
     fbc:	b5f0      	push	{r4, r5, r6, r7, lr}
     fbe:	4657      	mov	r7, sl
     fc0:	4645      	mov	r5, r8
     fc2:	46de      	mov	lr, fp
     fc4:	464e      	mov	r6, r9
     fc6:	b5e0      	push	{r5, r6, r7, lr}
     fc8:	004c      	lsls	r4, r1, #1
     fca:	030e      	lsls	r6, r1, #12
     fcc:	b087      	sub	sp, #28
     fce:	4683      	mov	fp, r0
     fd0:	4692      	mov	sl, r2
     fd2:	001d      	movs	r5, r3
     fd4:	4680      	mov	r8, r0
     fd6:	0b36      	lsrs	r6, r6, #12
     fd8:	0d64      	lsrs	r4, r4, #21
     fda:	0fcf      	lsrs	r7, r1, #31
     fdc:	2c00      	cmp	r4, #0
     fde:	d04f      	beq.n	1080 <__aeabi_ddiv+0xc4>
     fe0:	4b6f      	ldr	r3, [pc, #444]	; (11a0 <__aeabi_ddiv+0x1e4>)
     fe2:	429c      	cmp	r4, r3
     fe4:	d035      	beq.n	1052 <__aeabi_ddiv+0x96>
     fe6:	2380      	movs	r3, #128	; 0x80
     fe8:	0f42      	lsrs	r2, r0, #29
     fea:	041b      	lsls	r3, r3, #16
     fec:	00f6      	lsls	r6, r6, #3
     fee:	4313      	orrs	r3, r2
     ff0:	4333      	orrs	r3, r6
     ff2:	4699      	mov	r9, r3
     ff4:	00c3      	lsls	r3, r0, #3
     ff6:	4698      	mov	r8, r3
     ff8:	4b6a      	ldr	r3, [pc, #424]	; (11a4 <__aeabi_ddiv+0x1e8>)
     ffa:	2600      	movs	r6, #0
     ffc:	469c      	mov	ip, r3
     ffe:	2300      	movs	r3, #0
    1000:	4464      	add	r4, ip
    1002:	9303      	str	r3, [sp, #12]
    1004:	032b      	lsls	r3, r5, #12
    1006:	0b1b      	lsrs	r3, r3, #12
    1008:	469b      	mov	fp, r3
    100a:	006b      	lsls	r3, r5, #1
    100c:	0fed      	lsrs	r5, r5, #31
    100e:	4650      	mov	r0, sl
    1010:	0d5b      	lsrs	r3, r3, #21
    1012:	9501      	str	r5, [sp, #4]
    1014:	d05e      	beq.n	10d4 <__aeabi_ddiv+0x118>
    1016:	4a62      	ldr	r2, [pc, #392]	; (11a0 <__aeabi_ddiv+0x1e4>)
    1018:	4293      	cmp	r3, r2
    101a:	d053      	beq.n	10c4 <__aeabi_ddiv+0x108>
    101c:	465a      	mov	r2, fp
    101e:	00d1      	lsls	r1, r2, #3
    1020:	2280      	movs	r2, #128	; 0x80
    1022:	0f40      	lsrs	r0, r0, #29
    1024:	0412      	lsls	r2, r2, #16
    1026:	4302      	orrs	r2, r0
    1028:	430a      	orrs	r2, r1
    102a:	4693      	mov	fp, r2
    102c:	4652      	mov	r2, sl
    102e:	00d1      	lsls	r1, r2, #3
    1030:	4a5c      	ldr	r2, [pc, #368]	; (11a4 <__aeabi_ddiv+0x1e8>)
    1032:	4694      	mov	ip, r2
    1034:	2200      	movs	r2, #0
    1036:	4463      	add	r3, ip
    1038:	0038      	movs	r0, r7
    103a:	4068      	eors	r0, r5
    103c:	4684      	mov	ip, r0
    103e:	9002      	str	r0, [sp, #8]
    1040:	1ae4      	subs	r4, r4, r3
    1042:	4316      	orrs	r6, r2
    1044:	2e0f      	cmp	r6, #15
    1046:	d900      	bls.n	104a <__aeabi_ddiv+0x8e>
    1048:	e0b4      	b.n	11b4 <__aeabi_ddiv+0x1f8>
    104a:	4b57      	ldr	r3, [pc, #348]	; (11a8 <__aeabi_ddiv+0x1ec>)
    104c:	00b6      	lsls	r6, r6, #2
    104e:	599b      	ldr	r3, [r3, r6]
    1050:	469f      	mov	pc, r3
    1052:	0003      	movs	r3, r0
    1054:	4333      	orrs	r3, r6
    1056:	4699      	mov	r9, r3
    1058:	d16c      	bne.n	1134 <__aeabi_ddiv+0x178>
    105a:	2300      	movs	r3, #0
    105c:	4698      	mov	r8, r3
    105e:	3302      	adds	r3, #2
    1060:	2608      	movs	r6, #8
    1062:	9303      	str	r3, [sp, #12]
    1064:	e7ce      	b.n	1004 <__aeabi_ddiv+0x48>
    1066:	46cb      	mov	fp, r9
    1068:	4641      	mov	r1, r8
    106a:	9a03      	ldr	r2, [sp, #12]
    106c:	9701      	str	r7, [sp, #4]
    106e:	2a02      	cmp	r2, #2
    1070:	d165      	bne.n	113e <__aeabi_ddiv+0x182>
    1072:	9b01      	ldr	r3, [sp, #4]
    1074:	4c4a      	ldr	r4, [pc, #296]	; (11a0 <__aeabi_ddiv+0x1e4>)
    1076:	469c      	mov	ip, r3
    1078:	2300      	movs	r3, #0
    107a:	2200      	movs	r2, #0
    107c:	4698      	mov	r8, r3
    107e:	e06b      	b.n	1158 <__aeabi_ddiv+0x19c>
    1080:	0003      	movs	r3, r0
    1082:	4333      	orrs	r3, r6
    1084:	4699      	mov	r9, r3
    1086:	d04e      	beq.n	1126 <__aeabi_ddiv+0x16a>
    1088:	2e00      	cmp	r6, #0
    108a:	d100      	bne.n	108e <__aeabi_ddiv+0xd2>
    108c:	e1bc      	b.n	1408 <__aeabi_ddiv+0x44c>
    108e:	0030      	movs	r0, r6
    1090:	f000 ff12 	bl	1eb8 <__clzsi2>
    1094:	0003      	movs	r3, r0
    1096:	3b0b      	subs	r3, #11
    1098:	2b1c      	cmp	r3, #28
    109a:	dd00      	ble.n	109e <__aeabi_ddiv+0xe2>
    109c:	e1ac      	b.n	13f8 <__aeabi_ddiv+0x43c>
    109e:	221d      	movs	r2, #29
    10a0:	1ad3      	subs	r3, r2, r3
    10a2:	465a      	mov	r2, fp
    10a4:	0001      	movs	r1, r0
    10a6:	40da      	lsrs	r2, r3
    10a8:	3908      	subs	r1, #8
    10aa:	408e      	lsls	r6, r1
    10ac:	0013      	movs	r3, r2
    10ae:	4333      	orrs	r3, r6
    10b0:	4699      	mov	r9, r3
    10b2:	465b      	mov	r3, fp
    10b4:	408b      	lsls	r3, r1
    10b6:	4698      	mov	r8, r3
    10b8:	2300      	movs	r3, #0
    10ba:	4c3c      	ldr	r4, [pc, #240]	; (11ac <__aeabi_ddiv+0x1f0>)
    10bc:	2600      	movs	r6, #0
    10be:	1a24      	subs	r4, r4, r0
    10c0:	9303      	str	r3, [sp, #12]
    10c2:	e79f      	b.n	1004 <__aeabi_ddiv+0x48>
    10c4:	4651      	mov	r1, sl
    10c6:	465a      	mov	r2, fp
    10c8:	4311      	orrs	r1, r2
    10ca:	d129      	bne.n	1120 <__aeabi_ddiv+0x164>
    10cc:	2200      	movs	r2, #0
    10ce:	4693      	mov	fp, r2
    10d0:	3202      	adds	r2, #2
    10d2:	e7b1      	b.n	1038 <__aeabi_ddiv+0x7c>
    10d4:	4659      	mov	r1, fp
    10d6:	4301      	orrs	r1, r0
    10d8:	d01e      	beq.n	1118 <__aeabi_ddiv+0x15c>
    10da:	465b      	mov	r3, fp
    10dc:	2b00      	cmp	r3, #0
    10de:	d100      	bne.n	10e2 <__aeabi_ddiv+0x126>
    10e0:	e19e      	b.n	1420 <__aeabi_ddiv+0x464>
    10e2:	4658      	mov	r0, fp
    10e4:	f000 fee8 	bl	1eb8 <__clzsi2>
    10e8:	0003      	movs	r3, r0
    10ea:	3b0b      	subs	r3, #11
    10ec:	2b1c      	cmp	r3, #28
    10ee:	dd00      	ble.n	10f2 <__aeabi_ddiv+0x136>
    10f0:	e18f      	b.n	1412 <__aeabi_ddiv+0x456>
    10f2:	0002      	movs	r2, r0
    10f4:	4659      	mov	r1, fp
    10f6:	3a08      	subs	r2, #8
    10f8:	4091      	lsls	r1, r2
    10fa:	468b      	mov	fp, r1
    10fc:	211d      	movs	r1, #29
    10fe:	1acb      	subs	r3, r1, r3
    1100:	4651      	mov	r1, sl
    1102:	40d9      	lsrs	r1, r3
    1104:	000b      	movs	r3, r1
    1106:	4659      	mov	r1, fp
    1108:	430b      	orrs	r3, r1
    110a:	4651      	mov	r1, sl
    110c:	469b      	mov	fp, r3
    110e:	4091      	lsls	r1, r2
    1110:	4b26      	ldr	r3, [pc, #152]	; (11ac <__aeabi_ddiv+0x1f0>)
    1112:	2200      	movs	r2, #0
    1114:	1a1b      	subs	r3, r3, r0
    1116:	e78f      	b.n	1038 <__aeabi_ddiv+0x7c>
    1118:	2300      	movs	r3, #0
    111a:	2201      	movs	r2, #1
    111c:	469b      	mov	fp, r3
    111e:	e78b      	b.n	1038 <__aeabi_ddiv+0x7c>
    1120:	4651      	mov	r1, sl
    1122:	2203      	movs	r2, #3
    1124:	e788      	b.n	1038 <__aeabi_ddiv+0x7c>
    1126:	2300      	movs	r3, #0
    1128:	4698      	mov	r8, r3
    112a:	3301      	adds	r3, #1
    112c:	2604      	movs	r6, #4
    112e:	2400      	movs	r4, #0
    1130:	9303      	str	r3, [sp, #12]
    1132:	e767      	b.n	1004 <__aeabi_ddiv+0x48>
    1134:	2303      	movs	r3, #3
    1136:	46b1      	mov	r9, r6
    1138:	9303      	str	r3, [sp, #12]
    113a:	260c      	movs	r6, #12
    113c:	e762      	b.n	1004 <__aeabi_ddiv+0x48>
    113e:	2a03      	cmp	r2, #3
    1140:	d100      	bne.n	1144 <__aeabi_ddiv+0x188>
    1142:	e25c      	b.n	15fe <__aeabi_ddiv+0x642>
    1144:	9b01      	ldr	r3, [sp, #4]
    1146:	2a01      	cmp	r2, #1
    1148:	d000      	beq.n	114c <__aeabi_ddiv+0x190>
    114a:	e1e4      	b.n	1516 <__aeabi_ddiv+0x55a>
    114c:	4013      	ands	r3, r2
    114e:	469c      	mov	ip, r3
    1150:	2300      	movs	r3, #0
    1152:	2400      	movs	r4, #0
    1154:	2200      	movs	r2, #0
    1156:	4698      	mov	r8, r3
    1158:	2100      	movs	r1, #0
    115a:	0312      	lsls	r2, r2, #12
    115c:	0b13      	lsrs	r3, r2, #12
    115e:	0d0a      	lsrs	r2, r1, #20
    1160:	0512      	lsls	r2, r2, #20
    1162:	431a      	orrs	r2, r3
    1164:	0523      	lsls	r3, r4, #20
    1166:	4c12      	ldr	r4, [pc, #72]	; (11b0 <__aeabi_ddiv+0x1f4>)
    1168:	4640      	mov	r0, r8
    116a:	4022      	ands	r2, r4
    116c:	4313      	orrs	r3, r2
    116e:	4662      	mov	r2, ip
    1170:	005b      	lsls	r3, r3, #1
    1172:	07d2      	lsls	r2, r2, #31
    1174:	085b      	lsrs	r3, r3, #1
    1176:	4313      	orrs	r3, r2
    1178:	0019      	movs	r1, r3
    117a:	b007      	add	sp, #28
    117c:	bc3c      	pop	{r2, r3, r4, r5}
    117e:	4690      	mov	r8, r2
    1180:	4699      	mov	r9, r3
    1182:	46a2      	mov	sl, r4
    1184:	46ab      	mov	fp, r5
    1186:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1188:	2300      	movs	r3, #0
    118a:	2280      	movs	r2, #128	; 0x80
    118c:	469c      	mov	ip, r3
    118e:	0312      	lsls	r2, r2, #12
    1190:	4698      	mov	r8, r3
    1192:	4c03      	ldr	r4, [pc, #12]	; (11a0 <__aeabi_ddiv+0x1e4>)
    1194:	e7e0      	b.n	1158 <__aeabi_ddiv+0x19c>
    1196:	2300      	movs	r3, #0
    1198:	4c01      	ldr	r4, [pc, #4]	; (11a0 <__aeabi_ddiv+0x1e4>)
    119a:	2200      	movs	r2, #0
    119c:	4698      	mov	r8, r3
    119e:	e7db      	b.n	1158 <__aeabi_ddiv+0x19c>
    11a0:	000007ff 	.word	0x000007ff
    11a4:	fffffc01 	.word	0xfffffc01
    11a8:	000022c4 	.word	0x000022c4
    11ac:	fffffc0d 	.word	0xfffffc0d
    11b0:	800fffff 	.word	0x800fffff
    11b4:	45d9      	cmp	r9, fp
    11b6:	d900      	bls.n	11ba <__aeabi_ddiv+0x1fe>
    11b8:	e139      	b.n	142e <__aeabi_ddiv+0x472>
    11ba:	d100      	bne.n	11be <__aeabi_ddiv+0x202>
    11bc:	e134      	b.n	1428 <__aeabi_ddiv+0x46c>
    11be:	2300      	movs	r3, #0
    11c0:	4646      	mov	r6, r8
    11c2:	464d      	mov	r5, r9
    11c4:	469a      	mov	sl, r3
    11c6:	3c01      	subs	r4, #1
    11c8:	465b      	mov	r3, fp
    11ca:	0e0a      	lsrs	r2, r1, #24
    11cc:	021b      	lsls	r3, r3, #8
    11ce:	431a      	orrs	r2, r3
    11d0:	020b      	lsls	r3, r1, #8
    11d2:	0c17      	lsrs	r7, r2, #16
    11d4:	9303      	str	r3, [sp, #12]
    11d6:	0413      	lsls	r3, r2, #16
    11d8:	0c1b      	lsrs	r3, r3, #16
    11da:	0039      	movs	r1, r7
    11dc:	0028      	movs	r0, r5
    11de:	4690      	mov	r8, r2
    11e0:	9301      	str	r3, [sp, #4]
    11e2:	f000 fda1 	bl	1d28 <__udivsi3>
    11e6:	0002      	movs	r2, r0
    11e8:	9b01      	ldr	r3, [sp, #4]
    11ea:	4683      	mov	fp, r0
    11ec:	435a      	muls	r2, r3
    11ee:	0028      	movs	r0, r5
    11f0:	0039      	movs	r1, r7
    11f2:	4691      	mov	r9, r2
    11f4:	f000 fe1e 	bl	1e34 <__aeabi_uidivmod>
    11f8:	0c35      	lsrs	r5, r6, #16
    11fa:	0409      	lsls	r1, r1, #16
    11fc:	430d      	orrs	r5, r1
    11fe:	45a9      	cmp	r9, r5
    1200:	d90d      	bls.n	121e <__aeabi_ddiv+0x262>
    1202:	465b      	mov	r3, fp
    1204:	4445      	add	r5, r8
    1206:	3b01      	subs	r3, #1
    1208:	45a8      	cmp	r8, r5
    120a:	d900      	bls.n	120e <__aeabi_ddiv+0x252>
    120c:	e13a      	b.n	1484 <__aeabi_ddiv+0x4c8>
    120e:	45a9      	cmp	r9, r5
    1210:	d800      	bhi.n	1214 <__aeabi_ddiv+0x258>
    1212:	e137      	b.n	1484 <__aeabi_ddiv+0x4c8>
    1214:	2302      	movs	r3, #2
    1216:	425b      	negs	r3, r3
    1218:	469c      	mov	ip, r3
    121a:	4445      	add	r5, r8
    121c:	44e3      	add	fp, ip
    121e:	464b      	mov	r3, r9
    1220:	1aeb      	subs	r3, r5, r3
    1222:	0039      	movs	r1, r7
    1224:	0018      	movs	r0, r3
    1226:	9304      	str	r3, [sp, #16]
    1228:	f000 fd7e 	bl	1d28 <__udivsi3>
    122c:	9b01      	ldr	r3, [sp, #4]
    122e:	0005      	movs	r5, r0
    1230:	4343      	muls	r3, r0
    1232:	0039      	movs	r1, r7
    1234:	9804      	ldr	r0, [sp, #16]
    1236:	4699      	mov	r9, r3
    1238:	f000 fdfc 	bl	1e34 <__aeabi_uidivmod>
    123c:	0433      	lsls	r3, r6, #16
    123e:	0409      	lsls	r1, r1, #16
    1240:	0c1b      	lsrs	r3, r3, #16
    1242:	430b      	orrs	r3, r1
    1244:	4599      	cmp	r9, r3
    1246:	d909      	bls.n	125c <__aeabi_ddiv+0x2a0>
    1248:	4443      	add	r3, r8
    124a:	1e6a      	subs	r2, r5, #1
    124c:	4598      	cmp	r8, r3
    124e:	d900      	bls.n	1252 <__aeabi_ddiv+0x296>
    1250:	e11a      	b.n	1488 <__aeabi_ddiv+0x4cc>
    1252:	4599      	cmp	r9, r3
    1254:	d800      	bhi.n	1258 <__aeabi_ddiv+0x29c>
    1256:	e117      	b.n	1488 <__aeabi_ddiv+0x4cc>
    1258:	3d02      	subs	r5, #2
    125a:	4443      	add	r3, r8
    125c:	464a      	mov	r2, r9
    125e:	1a9b      	subs	r3, r3, r2
    1260:	465a      	mov	r2, fp
    1262:	0412      	lsls	r2, r2, #16
    1264:	432a      	orrs	r2, r5
    1266:	9903      	ldr	r1, [sp, #12]
    1268:	4693      	mov	fp, r2
    126a:	0c10      	lsrs	r0, r2, #16
    126c:	0c0a      	lsrs	r2, r1, #16
    126e:	4691      	mov	r9, r2
    1270:	0409      	lsls	r1, r1, #16
    1272:	465a      	mov	r2, fp
    1274:	0c09      	lsrs	r1, r1, #16
    1276:	464e      	mov	r6, r9
    1278:	000d      	movs	r5, r1
    127a:	0412      	lsls	r2, r2, #16
    127c:	0c12      	lsrs	r2, r2, #16
    127e:	4345      	muls	r5, r0
    1280:	9105      	str	r1, [sp, #20]
    1282:	4351      	muls	r1, r2
    1284:	4372      	muls	r2, r6
    1286:	4370      	muls	r0, r6
    1288:	1952      	adds	r2, r2, r5
    128a:	0c0e      	lsrs	r6, r1, #16
    128c:	18b2      	adds	r2, r6, r2
    128e:	4295      	cmp	r5, r2
    1290:	d903      	bls.n	129a <__aeabi_ddiv+0x2de>
    1292:	2580      	movs	r5, #128	; 0x80
    1294:	026d      	lsls	r5, r5, #9
    1296:	46ac      	mov	ip, r5
    1298:	4460      	add	r0, ip
    129a:	0c15      	lsrs	r5, r2, #16
    129c:	0409      	lsls	r1, r1, #16
    129e:	0412      	lsls	r2, r2, #16
    12a0:	0c09      	lsrs	r1, r1, #16
    12a2:	1828      	adds	r0, r5, r0
    12a4:	1852      	adds	r2, r2, r1
    12a6:	4283      	cmp	r3, r0
    12a8:	d200      	bcs.n	12ac <__aeabi_ddiv+0x2f0>
    12aa:	e0ce      	b.n	144a <__aeabi_ddiv+0x48e>
    12ac:	d100      	bne.n	12b0 <__aeabi_ddiv+0x2f4>
    12ae:	e0c8      	b.n	1442 <__aeabi_ddiv+0x486>
    12b0:	1a1d      	subs	r5, r3, r0
    12b2:	4653      	mov	r3, sl
    12b4:	1a9e      	subs	r6, r3, r2
    12b6:	45b2      	cmp	sl, r6
    12b8:	4192      	sbcs	r2, r2
    12ba:	4252      	negs	r2, r2
    12bc:	1aab      	subs	r3, r5, r2
    12be:	469a      	mov	sl, r3
    12c0:	4598      	cmp	r8, r3
    12c2:	d100      	bne.n	12c6 <__aeabi_ddiv+0x30a>
    12c4:	e117      	b.n	14f6 <__aeabi_ddiv+0x53a>
    12c6:	0039      	movs	r1, r7
    12c8:	0018      	movs	r0, r3
    12ca:	f000 fd2d 	bl	1d28 <__udivsi3>
    12ce:	9b01      	ldr	r3, [sp, #4]
    12d0:	0005      	movs	r5, r0
    12d2:	4343      	muls	r3, r0
    12d4:	0039      	movs	r1, r7
    12d6:	4650      	mov	r0, sl
    12d8:	9304      	str	r3, [sp, #16]
    12da:	f000 fdab 	bl	1e34 <__aeabi_uidivmod>
    12de:	9804      	ldr	r0, [sp, #16]
    12e0:	040b      	lsls	r3, r1, #16
    12e2:	0c31      	lsrs	r1, r6, #16
    12e4:	4319      	orrs	r1, r3
    12e6:	4288      	cmp	r0, r1
    12e8:	d909      	bls.n	12fe <__aeabi_ddiv+0x342>
    12ea:	4441      	add	r1, r8
    12ec:	1e6b      	subs	r3, r5, #1
    12ee:	4588      	cmp	r8, r1
    12f0:	d900      	bls.n	12f4 <__aeabi_ddiv+0x338>
    12f2:	e107      	b.n	1504 <__aeabi_ddiv+0x548>
    12f4:	4288      	cmp	r0, r1
    12f6:	d800      	bhi.n	12fa <__aeabi_ddiv+0x33e>
    12f8:	e104      	b.n	1504 <__aeabi_ddiv+0x548>
    12fa:	3d02      	subs	r5, #2
    12fc:	4441      	add	r1, r8
    12fe:	9b04      	ldr	r3, [sp, #16]
    1300:	1acb      	subs	r3, r1, r3
    1302:	0018      	movs	r0, r3
    1304:	0039      	movs	r1, r7
    1306:	9304      	str	r3, [sp, #16]
    1308:	f000 fd0e 	bl	1d28 <__udivsi3>
    130c:	9b01      	ldr	r3, [sp, #4]
    130e:	4682      	mov	sl, r0
    1310:	4343      	muls	r3, r0
    1312:	0039      	movs	r1, r7
    1314:	9804      	ldr	r0, [sp, #16]
    1316:	9301      	str	r3, [sp, #4]
    1318:	f000 fd8c 	bl	1e34 <__aeabi_uidivmod>
    131c:	9801      	ldr	r0, [sp, #4]
    131e:	040b      	lsls	r3, r1, #16
    1320:	0431      	lsls	r1, r6, #16
    1322:	0c09      	lsrs	r1, r1, #16
    1324:	4319      	orrs	r1, r3
    1326:	4288      	cmp	r0, r1
    1328:	d90d      	bls.n	1346 <__aeabi_ddiv+0x38a>
    132a:	4653      	mov	r3, sl
    132c:	4441      	add	r1, r8
    132e:	3b01      	subs	r3, #1
    1330:	4588      	cmp	r8, r1
    1332:	d900      	bls.n	1336 <__aeabi_ddiv+0x37a>
    1334:	e0e8      	b.n	1508 <__aeabi_ddiv+0x54c>
    1336:	4288      	cmp	r0, r1
    1338:	d800      	bhi.n	133c <__aeabi_ddiv+0x380>
    133a:	e0e5      	b.n	1508 <__aeabi_ddiv+0x54c>
    133c:	2302      	movs	r3, #2
    133e:	425b      	negs	r3, r3
    1340:	469c      	mov	ip, r3
    1342:	4441      	add	r1, r8
    1344:	44e2      	add	sl, ip
    1346:	9b01      	ldr	r3, [sp, #4]
    1348:	042d      	lsls	r5, r5, #16
    134a:	1ace      	subs	r6, r1, r3
    134c:	4651      	mov	r1, sl
    134e:	4329      	orrs	r1, r5
    1350:	9d05      	ldr	r5, [sp, #20]
    1352:	464f      	mov	r7, r9
    1354:	002a      	movs	r2, r5
    1356:	040b      	lsls	r3, r1, #16
    1358:	0c08      	lsrs	r0, r1, #16
    135a:	0c1b      	lsrs	r3, r3, #16
    135c:	435a      	muls	r2, r3
    135e:	4345      	muls	r5, r0
    1360:	437b      	muls	r3, r7
    1362:	4378      	muls	r0, r7
    1364:	195b      	adds	r3, r3, r5
    1366:	0c17      	lsrs	r7, r2, #16
    1368:	18fb      	adds	r3, r7, r3
    136a:	429d      	cmp	r5, r3
    136c:	d903      	bls.n	1376 <__aeabi_ddiv+0x3ba>
    136e:	2580      	movs	r5, #128	; 0x80
    1370:	026d      	lsls	r5, r5, #9
    1372:	46ac      	mov	ip, r5
    1374:	4460      	add	r0, ip
    1376:	0c1d      	lsrs	r5, r3, #16
    1378:	0412      	lsls	r2, r2, #16
    137a:	041b      	lsls	r3, r3, #16
    137c:	0c12      	lsrs	r2, r2, #16
    137e:	1828      	adds	r0, r5, r0
    1380:	189b      	adds	r3, r3, r2
    1382:	4286      	cmp	r6, r0
    1384:	d200      	bcs.n	1388 <__aeabi_ddiv+0x3cc>
    1386:	e093      	b.n	14b0 <__aeabi_ddiv+0x4f4>
    1388:	d100      	bne.n	138c <__aeabi_ddiv+0x3d0>
    138a:	e08e      	b.n	14aa <__aeabi_ddiv+0x4ee>
    138c:	2301      	movs	r3, #1
    138e:	4319      	orrs	r1, r3
    1390:	4ba0      	ldr	r3, [pc, #640]	; (1614 <__aeabi_ddiv+0x658>)
    1392:	18e3      	adds	r3, r4, r3
    1394:	2b00      	cmp	r3, #0
    1396:	dc00      	bgt.n	139a <__aeabi_ddiv+0x3de>
    1398:	e099      	b.n	14ce <__aeabi_ddiv+0x512>
    139a:	074a      	lsls	r2, r1, #29
    139c:	d000      	beq.n	13a0 <__aeabi_ddiv+0x3e4>
    139e:	e09e      	b.n	14de <__aeabi_ddiv+0x522>
    13a0:	465a      	mov	r2, fp
    13a2:	01d2      	lsls	r2, r2, #7
    13a4:	d506      	bpl.n	13b4 <__aeabi_ddiv+0x3f8>
    13a6:	465a      	mov	r2, fp
    13a8:	4b9b      	ldr	r3, [pc, #620]	; (1618 <__aeabi_ddiv+0x65c>)
    13aa:	401a      	ands	r2, r3
    13ac:	2380      	movs	r3, #128	; 0x80
    13ae:	4693      	mov	fp, r2
    13b0:	00db      	lsls	r3, r3, #3
    13b2:	18e3      	adds	r3, r4, r3
    13b4:	4a99      	ldr	r2, [pc, #612]	; (161c <__aeabi_ddiv+0x660>)
    13b6:	4293      	cmp	r3, r2
    13b8:	dd68      	ble.n	148c <__aeabi_ddiv+0x4d0>
    13ba:	2301      	movs	r3, #1
    13bc:	9a02      	ldr	r2, [sp, #8]
    13be:	4c98      	ldr	r4, [pc, #608]	; (1620 <__aeabi_ddiv+0x664>)
    13c0:	401a      	ands	r2, r3
    13c2:	2300      	movs	r3, #0
    13c4:	4694      	mov	ip, r2
    13c6:	4698      	mov	r8, r3
    13c8:	2200      	movs	r2, #0
    13ca:	e6c5      	b.n	1158 <__aeabi_ddiv+0x19c>
    13cc:	2280      	movs	r2, #128	; 0x80
    13ce:	464b      	mov	r3, r9
    13d0:	0312      	lsls	r2, r2, #12
    13d2:	4213      	tst	r3, r2
    13d4:	d00a      	beq.n	13ec <__aeabi_ddiv+0x430>
    13d6:	465b      	mov	r3, fp
    13d8:	4213      	tst	r3, r2
    13da:	d106      	bne.n	13ea <__aeabi_ddiv+0x42e>
    13dc:	431a      	orrs	r2, r3
    13de:	0312      	lsls	r2, r2, #12
    13e0:	0b12      	lsrs	r2, r2, #12
    13e2:	46ac      	mov	ip, r5
    13e4:	4688      	mov	r8, r1
    13e6:	4c8e      	ldr	r4, [pc, #568]	; (1620 <__aeabi_ddiv+0x664>)
    13e8:	e6b6      	b.n	1158 <__aeabi_ddiv+0x19c>
    13ea:	464b      	mov	r3, r9
    13ec:	431a      	orrs	r2, r3
    13ee:	0312      	lsls	r2, r2, #12
    13f0:	0b12      	lsrs	r2, r2, #12
    13f2:	46bc      	mov	ip, r7
    13f4:	4c8a      	ldr	r4, [pc, #552]	; (1620 <__aeabi_ddiv+0x664>)
    13f6:	e6af      	b.n	1158 <__aeabi_ddiv+0x19c>
    13f8:	0003      	movs	r3, r0
    13fa:	465a      	mov	r2, fp
    13fc:	3b28      	subs	r3, #40	; 0x28
    13fe:	409a      	lsls	r2, r3
    1400:	2300      	movs	r3, #0
    1402:	4691      	mov	r9, r2
    1404:	4698      	mov	r8, r3
    1406:	e657      	b.n	10b8 <__aeabi_ddiv+0xfc>
    1408:	4658      	mov	r0, fp
    140a:	f000 fd55 	bl	1eb8 <__clzsi2>
    140e:	3020      	adds	r0, #32
    1410:	e640      	b.n	1094 <__aeabi_ddiv+0xd8>
    1412:	0003      	movs	r3, r0
    1414:	4652      	mov	r2, sl
    1416:	3b28      	subs	r3, #40	; 0x28
    1418:	409a      	lsls	r2, r3
    141a:	2100      	movs	r1, #0
    141c:	4693      	mov	fp, r2
    141e:	e677      	b.n	1110 <__aeabi_ddiv+0x154>
    1420:	f000 fd4a 	bl	1eb8 <__clzsi2>
    1424:	3020      	adds	r0, #32
    1426:	e65f      	b.n	10e8 <__aeabi_ddiv+0x12c>
    1428:	4588      	cmp	r8, r1
    142a:	d200      	bcs.n	142e <__aeabi_ddiv+0x472>
    142c:	e6c7      	b.n	11be <__aeabi_ddiv+0x202>
    142e:	464b      	mov	r3, r9
    1430:	07de      	lsls	r6, r3, #31
    1432:	085d      	lsrs	r5, r3, #1
    1434:	4643      	mov	r3, r8
    1436:	085b      	lsrs	r3, r3, #1
    1438:	431e      	orrs	r6, r3
    143a:	4643      	mov	r3, r8
    143c:	07db      	lsls	r3, r3, #31
    143e:	469a      	mov	sl, r3
    1440:	e6c2      	b.n	11c8 <__aeabi_ddiv+0x20c>
    1442:	2500      	movs	r5, #0
    1444:	4592      	cmp	sl, r2
    1446:	d300      	bcc.n	144a <__aeabi_ddiv+0x48e>
    1448:	e733      	b.n	12b2 <__aeabi_ddiv+0x2f6>
    144a:	9e03      	ldr	r6, [sp, #12]
    144c:	4659      	mov	r1, fp
    144e:	46b4      	mov	ip, r6
    1450:	44e2      	add	sl, ip
    1452:	45b2      	cmp	sl, r6
    1454:	41ad      	sbcs	r5, r5
    1456:	426d      	negs	r5, r5
    1458:	4445      	add	r5, r8
    145a:	18eb      	adds	r3, r5, r3
    145c:	3901      	subs	r1, #1
    145e:	4598      	cmp	r8, r3
    1460:	d207      	bcs.n	1472 <__aeabi_ddiv+0x4b6>
    1462:	4298      	cmp	r0, r3
    1464:	d900      	bls.n	1468 <__aeabi_ddiv+0x4ac>
    1466:	e07f      	b.n	1568 <__aeabi_ddiv+0x5ac>
    1468:	d100      	bne.n	146c <__aeabi_ddiv+0x4b0>
    146a:	e0bc      	b.n	15e6 <__aeabi_ddiv+0x62a>
    146c:	1a1d      	subs	r5, r3, r0
    146e:	468b      	mov	fp, r1
    1470:	e71f      	b.n	12b2 <__aeabi_ddiv+0x2f6>
    1472:	4598      	cmp	r8, r3
    1474:	d1fa      	bne.n	146c <__aeabi_ddiv+0x4b0>
    1476:	9d03      	ldr	r5, [sp, #12]
    1478:	4555      	cmp	r5, sl
    147a:	d9f2      	bls.n	1462 <__aeabi_ddiv+0x4a6>
    147c:	4643      	mov	r3, r8
    147e:	468b      	mov	fp, r1
    1480:	1a1d      	subs	r5, r3, r0
    1482:	e716      	b.n	12b2 <__aeabi_ddiv+0x2f6>
    1484:	469b      	mov	fp, r3
    1486:	e6ca      	b.n	121e <__aeabi_ddiv+0x262>
    1488:	0015      	movs	r5, r2
    148a:	e6e7      	b.n	125c <__aeabi_ddiv+0x2a0>
    148c:	465a      	mov	r2, fp
    148e:	08c9      	lsrs	r1, r1, #3
    1490:	0752      	lsls	r2, r2, #29
    1492:	430a      	orrs	r2, r1
    1494:	055b      	lsls	r3, r3, #21
    1496:	4690      	mov	r8, r2
    1498:	0d5c      	lsrs	r4, r3, #21
    149a:	465a      	mov	r2, fp
    149c:	2301      	movs	r3, #1
    149e:	9902      	ldr	r1, [sp, #8]
    14a0:	0252      	lsls	r2, r2, #9
    14a2:	4019      	ands	r1, r3
    14a4:	0b12      	lsrs	r2, r2, #12
    14a6:	468c      	mov	ip, r1
    14a8:	e656      	b.n	1158 <__aeabi_ddiv+0x19c>
    14aa:	2b00      	cmp	r3, #0
    14ac:	d100      	bne.n	14b0 <__aeabi_ddiv+0x4f4>
    14ae:	e76f      	b.n	1390 <__aeabi_ddiv+0x3d4>
    14b0:	4446      	add	r6, r8
    14b2:	1e4a      	subs	r2, r1, #1
    14b4:	45b0      	cmp	r8, r6
    14b6:	d929      	bls.n	150c <__aeabi_ddiv+0x550>
    14b8:	0011      	movs	r1, r2
    14ba:	4286      	cmp	r6, r0
    14bc:	d000      	beq.n	14c0 <__aeabi_ddiv+0x504>
    14be:	e765      	b.n	138c <__aeabi_ddiv+0x3d0>
    14c0:	9a03      	ldr	r2, [sp, #12]
    14c2:	4293      	cmp	r3, r2
    14c4:	d000      	beq.n	14c8 <__aeabi_ddiv+0x50c>
    14c6:	e761      	b.n	138c <__aeabi_ddiv+0x3d0>
    14c8:	e762      	b.n	1390 <__aeabi_ddiv+0x3d4>
    14ca:	2101      	movs	r1, #1
    14cc:	4249      	negs	r1, r1
    14ce:	2001      	movs	r0, #1
    14d0:	1ac2      	subs	r2, r0, r3
    14d2:	2a38      	cmp	r2, #56	; 0x38
    14d4:	dd21      	ble.n	151a <__aeabi_ddiv+0x55e>
    14d6:	9b02      	ldr	r3, [sp, #8]
    14d8:	4003      	ands	r3, r0
    14da:	469c      	mov	ip, r3
    14dc:	e638      	b.n	1150 <__aeabi_ddiv+0x194>
    14de:	220f      	movs	r2, #15
    14e0:	400a      	ands	r2, r1
    14e2:	2a04      	cmp	r2, #4
    14e4:	d100      	bne.n	14e8 <__aeabi_ddiv+0x52c>
    14e6:	e75b      	b.n	13a0 <__aeabi_ddiv+0x3e4>
    14e8:	000a      	movs	r2, r1
    14ea:	1d11      	adds	r1, r2, #4
    14ec:	4291      	cmp	r1, r2
    14ee:	4192      	sbcs	r2, r2
    14f0:	4252      	negs	r2, r2
    14f2:	4493      	add	fp, r2
    14f4:	e754      	b.n	13a0 <__aeabi_ddiv+0x3e4>
    14f6:	4b47      	ldr	r3, [pc, #284]	; (1614 <__aeabi_ddiv+0x658>)
    14f8:	18e3      	adds	r3, r4, r3
    14fa:	2b00      	cmp	r3, #0
    14fc:	dde5      	ble.n	14ca <__aeabi_ddiv+0x50e>
    14fe:	2201      	movs	r2, #1
    1500:	4252      	negs	r2, r2
    1502:	e7f2      	b.n	14ea <__aeabi_ddiv+0x52e>
    1504:	001d      	movs	r5, r3
    1506:	e6fa      	b.n	12fe <__aeabi_ddiv+0x342>
    1508:	469a      	mov	sl, r3
    150a:	e71c      	b.n	1346 <__aeabi_ddiv+0x38a>
    150c:	42b0      	cmp	r0, r6
    150e:	d839      	bhi.n	1584 <__aeabi_ddiv+0x5c8>
    1510:	d06e      	beq.n	15f0 <__aeabi_ddiv+0x634>
    1512:	0011      	movs	r1, r2
    1514:	e73a      	b.n	138c <__aeabi_ddiv+0x3d0>
    1516:	9302      	str	r3, [sp, #8]
    1518:	e73a      	b.n	1390 <__aeabi_ddiv+0x3d4>
    151a:	2a1f      	cmp	r2, #31
    151c:	dc3c      	bgt.n	1598 <__aeabi_ddiv+0x5dc>
    151e:	2320      	movs	r3, #32
    1520:	1a9b      	subs	r3, r3, r2
    1522:	000c      	movs	r4, r1
    1524:	4658      	mov	r0, fp
    1526:	4099      	lsls	r1, r3
    1528:	4098      	lsls	r0, r3
    152a:	1e4b      	subs	r3, r1, #1
    152c:	4199      	sbcs	r1, r3
    152e:	465b      	mov	r3, fp
    1530:	40d4      	lsrs	r4, r2
    1532:	40d3      	lsrs	r3, r2
    1534:	4320      	orrs	r0, r4
    1536:	4308      	orrs	r0, r1
    1538:	001a      	movs	r2, r3
    153a:	0743      	lsls	r3, r0, #29
    153c:	d009      	beq.n	1552 <__aeabi_ddiv+0x596>
    153e:	230f      	movs	r3, #15
    1540:	4003      	ands	r3, r0
    1542:	2b04      	cmp	r3, #4
    1544:	d005      	beq.n	1552 <__aeabi_ddiv+0x596>
    1546:	0001      	movs	r1, r0
    1548:	1d08      	adds	r0, r1, #4
    154a:	4288      	cmp	r0, r1
    154c:	419b      	sbcs	r3, r3
    154e:	425b      	negs	r3, r3
    1550:	18d2      	adds	r2, r2, r3
    1552:	0213      	lsls	r3, r2, #8
    1554:	d53a      	bpl.n	15cc <__aeabi_ddiv+0x610>
    1556:	2301      	movs	r3, #1
    1558:	9a02      	ldr	r2, [sp, #8]
    155a:	2401      	movs	r4, #1
    155c:	401a      	ands	r2, r3
    155e:	2300      	movs	r3, #0
    1560:	4694      	mov	ip, r2
    1562:	4698      	mov	r8, r3
    1564:	2200      	movs	r2, #0
    1566:	e5f7      	b.n	1158 <__aeabi_ddiv+0x19c>
    1568:	2102      	movs	r1, #2
    156a:	4249      	negs	r1, r1
    156c:	468c      	mov	ip, r1
    156e:	9d03      	ldr	r5, [sp, #12]
    1570:	44e3      	add	fp, ip
    1572:	46ac      	mov	ip, r5
    1574:	44e2      	add	sl, ip
    1576:	45aa      	cmp	sl, r5
    1578:	41ad      	sbcs	r5, r5
    157a:	426d      	negs	r5, r5
    157c:	4445      	add	r5, r8
    157e:	18ed      	adds	r5, r5, r3
    1580:	1a2d      	subs	r5, r5, r0
    1582:	e696      	b.n	12b2 <__aeabi_ddiv+0x2f6>
    1584:	1e8a      	subs	r2, r1, #2
    1586:	9903      	ldr	r1, [sp, #12]
    1588:	004d      	lsls	r5, r1, #1
    158a:	428d      	cmp	r5, r1
    158c:	4189      	sbcs	r1, r1
    158e:	4249      	negs	r1, r1
    1590:	4441      	add	r1, r8
    1592:	1876      	adds	r6, r6, r1
    1594:	9503      	str	r5, [sp, #12]
    1596:	e78f      	b.n	14b8 <__aeabi_ddiv+0x4fc>
    1598:	201f      	movs	r0, #31
    159a:	4240      	negs	r0, r0
    159c:	1ac3      	subs	r3, r0, r3
    159e:	4658      	mov	r0, fp
    15a0:	40d8      	lsrs	r0, r3
    15a2:	0003      	movs	r3, r0
    15a4:	2a20      	cmp	r2, #32
    15a6:	d028      	beq.n	15fa <__aeabi_ddiv+0x63e>
    15a8:	2040      	movs	r0, #64	; 0x40
    15aa:	465d      	mov	r5, fp
    15ac:	1a82      	subs	r2, r0, r2
    15ae:	4095      	lsls	r5, r2
    15b0:	4329      	orrs	r1, r5
    15b2:	1e4a      	subs	r2, r1, #1
    15b4:	4191      	sbcs	r1, r2
    15b6:	4319      	orrs	r1, r3
    15b8:	2307      	movs	r3, #7
    15ba:	2200      	movs	r2, #0
    15bc:	400b      	ands	r3, r1
    15be:	d009      	beq.n	15d4 <__aeabi_ddiv+0x618>
    15c0:	230f      	movs	r3, #15
    15c2:	2200      	movs	r2, #0
    15c4:	400b      	ands	r3, r1
    15c6:	0008      	movs	r0, r1
    15c8:	2b04      	cmp	r3, #4
    15ca:	d1bd      	bne.n	1548 <__aeabi_ddiv+0x58c>
    15cc:	0001      	movs	r1, r0
    15ce:	0753      	lsls	r3, r2, #29
    15d0:	0252      	lsls	r2, r2, #9
    15d2:	0b12      	lsrs	r2, r2, #12
    15d4:	08c9      	lsrs	r1, r1, #3
    15d6:	4319      	orrs	r1, r3
    15d8:	2301      	movs	r3, #1
    15da:	4688      	mov	r8, r1
    15dc:	9902      	ldr	r1, [sp, #8]
    15de:	2400      	movs	r4, #0
    15e0:	4019      	ands	r1, r3
    15e2:	468c      	mov	ip, r1
    15e4:	e5b8      	b.n	1158 <__aeabi_ddiv+0x19c>
    15e6:	4552      	cmp	r2, sl
    15e8:	d8be      	bhi.n	1568 <__aeabi_ddiv+0x5ac>
    15ea:	468b      	mov	fp, r1
    15ec:	2500      	movs	r5, #0
    15ee:	e660      	b.n	12b2 <__aeabi_ddiv+0x2f6>
    15f0:	9d03      	ldr	r5, [sp, #12]
    15f2:	429d      	cmp	r5, r3
    15f4:	d3c6      	bcc.n	1584 <__aeabi_ddiv+0x5c8>
    15f6:	0011      	movs	r1, r2
    15f8:	e762      	b.n	14c0 <__aeabi_ddiv+0x504>
    15fa:	2500      	movs	r5, #0
    15fc:	e7d8      	b.n	15b0 <__aeabi_ddiv+0x5f4>
    15fe:	2280      	movs	r2, #128	; 0x80
    1600:	465b      	mov	r3, fp
    1602:	0312      	lsls	r2, r2, #12
    1604:	431a      	orrs	r2, r3
    1606:	9b01      	ldr	r3, [sp, #4]
    1608:	0312      	lsls	r2, r2, #12
    160a:	0b12      	lsrs	r2, r2, #12
    160c:	469c      	mov	ip, r3
    160e:	4688      	mov	r8, r1
    1610:	4c03      	ldr	r4, [pc, #12]	; (1620 <__aeabi_ddiv+0x664>)
    1612:	e5a1      	b.n	1158 <__aeabi_ddiv+0x19c>
    1614:	000003ff 	.word	0x000003ff
    1618:	feffffff 	.word	0xfeffffff
    161c:	000007fe 	.word	0x000007fe
    1620:	000007ff 	.word	0x000007ff

00001624 <__aeabi_dsub>:
    1624:	b5f0      	push	{r4, r5, r6, r7, lr}
    1626:	4646      	mov	r6, r8
    1628:	46d6      	mov	lr, sl
    162a:	464f      	mov	r7, r9
    162c:	030c      	lsls	r4, r1, #12
    162e:	b5c0      	push	{r6, r7, lr}
    1630:	0fcd      	lsrs	r5, r1, #31
    1632:	004e      	lsls	r6, r1, #1
    1634:	0a61      	lsrs	r1, r4, #9
    1636:	0f44      	lsrs	r4, r0, #29
    1638:	430c      	orrs	r4, r1
    163a:	00c1      	lsls	r1, r0, #3
    163c:	0058      	lsls	r0, r3, #1
    163e:	0d40      	lsrs	r0, r0, #21
    1640:	4684      	mov	ip, r0
    1642:	468a      	mov	sl, r1
    1644:	000f      	movs	r7, r1
    1646:	0319      	lsls	r1, r3, #12
    1648:	0f50      	lsrs	r0, r2, #29
    164a:	0a49      	lsrs	r1, r1, #9
    164c:	4301      	orrs	r1, r0
    164e:	48c6      	ldr	r0, [pc, #792]	; (1968 <__aeabi_dsub+0x344>)
    1650:	0d76      	lsrs	r6, r6, #21
    1652:	46a8      	mov	r8, r5
    1654:	0fdb      	lsrs	r3, r3, #31
    1656:	00d2      	lsls	r2, r2, #3
    1658:	4584      	cmp	ip, r0
    165a:	d100      	bne.n	165e <__aeabi_dsub+0x3a>
    165c:	e0d8      	b.n	1810 <__aeabi_dsub+0x1ec>
    165e:	2001      	movs	r0, #1
    1660:	4043      	eors	r3, r0
    1662:	42ab      	cmp	r3, r5
    1664:	d100      	bne.n	1668 <__aeabi_dsub+0x44>
    1666:	e0a6      	b.n	17b6 <__aeabi_dsub+0x192>
    1668:	4660      	mov	r0, ip
    166a:	1a35      	subs	r5, r6, r0
    166c:	2d00      	cmp	r5, #0
    166e:	dc00      	bgt.n	1672 <__aeabi_dsub+0x4e>
    1670:	e105      	b.n	187e <__aeabi_dsub+0x25a>
    1672:	2800      	cmp	r0, #0
    1674:	d110      	bne.n	1698 <__aeabi_dsub+0x74>
    1676:	000b      	movs	r3, r1
    1678:	4313      	orrs	r3, r2
    167a:	d100      	bne.n	167e <__aeabi_dsub+0x5a>
    167c:	e0d7      	b.n	182e <__aeabi_dsub+0x20a>
    167e:	1e6b      	subs	r3, r5, #1
    1680:	2b00      	cmp	r3, #0
    1682:	d000      	beq.n	1686 <__aeabi_dsub+0x62>
    1684:	e14b      	b.n	191e <__aeabi_dsub+0x2fa>
    1686:	4653      	mov	r3, sl
    1688:	1a9f      	subs	r7, r3, r2
    168a:	45ba      	cmp	sl, r7
    168c:	4180      	sbcs	r0, r0
    168e:	1a64      	subs	r4, r4, r1
    1690:	4240      	negs	r0, r0
    1692:	1a24      	subs	r4, r4, r0
    1694:	2601      	movs	r6, #1
    1696:	e01e      	b.n	16d6 <__aeabi_dsub+0xb2>
    1698:	4bb3      	ldr	r3, [pc, #716]	; (1968 <__aeabi_dsub+0x344>)
    169a:	429e      	cmp	r6, r3
    169c:	d048      	beq.n	1730 <__aeabi_dsub+0x10c>
    169e:	2380      	movs	r3, #128	; 0x80
    16a0:	041b      	lsls	r3, r3, #16
    16a2:	4319      	orrs	r1, r3
    16a4:	2d38      	cmp	r5, #56	; 0x38
    16a6:	dd00      	ble.n	16aa <__aeabi_dsub+0x86>
    16a8:	e119      	b.n	18de <__aeabi_dsub+0x2ba>
    16aa:	2d1f      	cmp	r5, #31
    16ac:	dd00      	ble.n	16b0 <__aeabi_dsub+0x8c>
    16ae:	e14c      	b.n	194a <__aeabi_dsub+0x326>
    16b0:	2320      	movs	r3, #32
    16b2:	000f      	movs	r7, r1
    16b4:	1b5b      	subs	r3, r3, r5
    16b6:	0010      	movs	r0, r2
    16b8:	409a      	lsls	r2, r3
    16ba:	409f      	lsls	r7, r3
    16bc:	40e8      	lsrs	r0, r5
    16be:	1e53      	subs	r3, r2, #1
    16c0:	419a      	sbcs	r2, r3
    16c2:	40e9      	lsrs	r1, r5
    16c4:	4307      	orrs	r7, r0
    16c6:	4317      	orrs	r7, r2
    16c8:	4653      	mov	r3, sl
    16ca:	1bdf      	subs	r7, r3, r7
    16cc:	1a61      	subs	r1, r4, r1
    16ce:	45ba      	cmp	sl, r7
    16d0:	41a4      	sbcs	r4, r4
    16d2:	4264      	negs	r4, r4
    16d4:	1b0c      	subs	r4, r1, r4
    16d6:	0223      	lsls	r3, r4, #8
    16d8:	d400      	bmi.n	16dc <__aeabi_dsub+0xb8>
    16da:	e0c5      	b.n	1868 <__aeabi_dsub+0x244>
    16dc:	0264      	lsls	r4, r4, #9
    16de:	0a65      	lsrs	r5, r4, #9
    16e0:	2d00      	cmp	r5, #0
    16e2:	d100      	bne.n	16e6 <__aeabi_dsub+0xc2>
    16e4:	e0f6      	b.n	18d4 <__aeabi_dsub+0x2b0>
    16e6:	0028      	movs	r0, r5
    16e8:	f000 fbe6 	bl	1eb8 <__clzsi2>
    16ec:	0003      	movs	r3, r0
    16ee:	3b08      	subs	r3, #8
    16f0:	2b1f      	cmp	r3, #31
    16f2:	dd00      	ble.n	16f6 <__aeabi_dsub+0xd2>
    16f4:	e0e9      	b.n	18ca <__aeabi_dsub+0x2a6>
    16f6:	2220      	movs	r2, #32
    16f8:	003c      	movs	r4, r7
    16fa:	1ad2      	subs	r2, r2, r3
    16fc:	409d      	lsls	r5, r3
    16fe:	40d4      	lsrs	r4, r2
    1700:	409f      	lsls	r7, r3
    1702:	4325      	orrs	r5, r4
    1704:	429e      	cmp	r6, r3
    1706:	dd00      	ble.n	170a <__aeabi_dsub+0xe6>
    1708:	e0db      	b.n	18c2 <__aeabi_dsub+0x29e>
    170a:	1b9e      	subs	r6, r3, r6
    170c:	1c73      	adds	r3, r6, #1
    170e:	2b1f      	cmp	r3, #31
    1710:	dd00      	ble.n	1714 <__aeabi_dsub+0xf0>
    1712:	e10a      	b.n	192a <__aeabi_dsub+0x306>
    1714:	2220      	movs	r2, #32
    1716:	0038      	movs	r0, r7
    1718:	1ad2      	subs	r2, r2, r3
    171a:	0029      	movs	r1, r5
    171c:	4097      	lsls	r7, r2
    171e:	002c      	movs	r4, r5
    1720:	4091      	lsls	r1, r2
    1722:	40d8      	lsrs	r0, r3
    1724:	1e7a      	subs	r2, r7, #1
    1726:	4197      	sbcs	r7, r2
    1728:	40dc      	lsrs	r4, r3
    172a:	2600      	movs	r6, #0
    172c:	4301      	orrs	r1, r0
    172e:	430f      	orrs	r7, r1
    1730:	077b      	lsls	r3, r7, #29
    1732:	d009      	beq.n	1748 <__aeabi_dsub+0x124>
    1734:	230f      	movs	r3, #15
    1736:	403b      	ands	r3, r7
    1738:	2b04      	cmp	r3, #4
    173a:	d005      	beq.n	1748 <__aeabi_dsub+0x124>
    173c:	1d3b      	adds	r3, r7, #4
    173e:	42bb      	cmp	r3, r7
    1740:	41bf      	sbcs	r7, r7
    1742:	427f      	negs	r7, r7
    1744:	19e4      	adds	r4, r4, r7
    1746:	001f      	movs	r7, r3
    1748:	0223      	lsls	r3, r4, #8
    174a:	d525      	bpl.n	1798 <__aeabi_dsub+0x174>
    174c:	4b86      	ldr	r3, [pc, #536]	; (1968 <__aeabi_dsub+0x344>)
    174e:	3601      	adds	r6, #1
    1750:	429e      	cmp	r6, r3
    1752:	d100      	bne.n	1756 <__aeabi_dsub+0x132>
    1754:	e0af      	b.n	18b6 <__aeabi_dsub+0x292>
    1756:	4b85      	ldr	r3, [pc, #532]	; (196c <__aeabi_dsub+0x348>)
    1758:	2501      	movs	r5, #1
    175a:	401c      	ands	r4, r3
    175c:	4643      	mov	r3, r8
    175e:	0762      	lsls	r2, r4, #29
    1760:	08ff      	lsrs	r7, r7, #3
    1762:	0264      	lsls	r4, r4, #9
    1764:	0576      	lsls	r6, r6, #21
    1766:	4317      	orrs	r7, r2
    1768:	0b24      	lsrs	r4, r4, #12
    176a:	0d76      	lsrs	r6, r6, #21
    176c:	401d      	ands	r5, r3
    176e:	2100      	movs	r1, #0
    1770:	0324      	lsls	r4, r4, #12
    1772:	0b23      	lsrs	r3, r4, #12
    1774:	0d0c      	lsrs	r4, r1, #20
    1776:	4a7e      	ldr	r2, [pc, #504]	; (1970 <__aeabi_dsub+0x34c>)
    1778:	0524      	lsls	r4, r4, #20
    177a:	431c      	orrs	r4, r3
    177c:	4014      	ands	r4, r2
    177e:	0533      	lsls	r3, r6, #20
    1780:	4323      	orrs	r3, r4
    1782:	005b      	lsls	r3, r3, #1
    1784:	07ed      	lsls	r5, r5, #31
    1786:	085b      	lsrs	r3, r3, #1
    1788:	432b      	orrs	r3, r5
    178a:	0038      	movs	r0, r7
    178c:	0019      	movs	r1, r3
    178e:	bc1c      	pop	{r2, r3, r4}
    1790:	4690      	mov	r8, r2
    1792:	4699      	mov	r9, r3
    1794:	46a2      	mov	sl, r4
    1796:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1798:	2501      	movs	r5, #1
    179a:	4643      	mov	r3, r8
    179c:	0762      	lsls	r2, r4, #29
    179e:	08ff      	lsrs	r7, r7, #3
    17a0:	4317      	orrs	r7, r2
    17a2:	08e4      	lsrs	r4, r4, #3
    17a4:	401d      	ands	r5, r3
    17a6:	4b70      	ldr	r3, [pc, #448]	; (1968 <__aeabi_dsub+0x344>)
    17a8:	429e      	cmp	r6, r3
    17aa:	d036      	beq.n	181a <__aeabi_dsub+0x1f6>
    17ac:	0324      	lsls	r4, r4, #12
    17ae:	0576      	lsls	r6, r6, #21
    17b0:	0b24      	lsrs	r4, r4, #12
    17b2:	0d76      	lsrs	r6, r6, #21
    17b4:	e7db      	b.n	176e <__aeabi_dsub+0x14a>
    17b6:	4663      	mov	r3, ip
    17b8:	1af3      	subs	r3, r6, r3
    17ba:	2b00      	cmp	r3, #0
    17bc:	dc00      	bgt.n	17c0 <__aeabi_dsub+0x19c>
    17be:	e094      	b.n	18ea <__aeabi_dsub+0x2c6>
    17c0:	4660      	mov	r0, ip
    17c2:	2800      	cmp	r0, #0
    17c4:	d035      	beq.n	1832 <__aeabi_dsub+0x20e>
    17c6:	4868      	ldr	r0, [pc, #416]	; (1968 <__aeabi_dsub+0x344>)
    17c8:	4286      	cmp	r6, r0
    17ca:	d0b1      	beq.n	1730 <__aeabi_dsub+0x10c>
    17cc:	2780      	movs	r7, #128	; 0x80
    17ce:	043f      	lsls	r7, r7, #16
    17d0:	4339      	orrs	r1, r7
    17d2:	2b38      	cmp	r3, #56	; 0x38
    17d4:	dc00      	bgt.n	17d8 <__aeabi_dsub+0x1b4>
    17d6:	e0fd      	b.n	19d4 <__aeabi_dsub+0x3b0>
    17d8:	430a      	orrs	r2, r1
    17da:	0017      	movs	r7, r2
    17dc:	2100      	movs	r1, #0
    17de:	1e7a      	subs	r2, r7, #1
    17e0:	4197      	sbcs	r7, r2
    17e2:	4457      	add	r7, sl
    17e4:	4557      	cmp	r7, sl
    17e6:	4180      	sbcs	r0, r0
    17e8:	1909      	adds	r1, r1, r4
    17ea:	4244      	negs	r4, r0
    17ec:	190c      	adds	r4, r1, r4
    17ee:	0223      	lsls	r3, r4, #8
    17f0:	d53a      	bpl.n	1868 <__aeabi_dsub+0x244>
    17f2:	4b5d      	ldr	r3, [pc, #372]	; (1968 <__aeabi_dsub+0x344>)
    17f4:	3601      	adds	r6, #1
    17f6:	429e      	cmp	r6, r3
    17f8:	d100      	bne.n	17fc <__aeabi_dsub+0x1d8>
    17fa:	e14b      	b.n	1a94 <__aeabi_dsub+0x470>
    17fc:	2201      	movs	r2, #1
    17fe:	4b5b      	ldr	r3, [pc, #364]	; (196c <__aeabi_dsub+0x348>)
    1800:	401c      	ands	r4, r3
    1802:	087b      	lsrs	r3, r7, #1
    1804:	4017      	ands	r7, r2
    1806:	431f      	orrs	r7, r3
    1808:	07e2      	lsls	r2, r4, #31
    180a:	4317      	orrs	r7, r2
    180c:	0864      	lsrs	r4, r4, #1
    180e:	e78f      	b.n	1730 <__aeabi_dsub+0x10c>
    1810:	0008      	movs	r0, r1
    1812:	4310      	orrs	r0, r2
    1814:	d000      	beq.n	1818 <__aeabi_dsub+0x1f4>
    1816:	e724      	b.n	1662 <__aeabi_dsub+0x3e>
    1818:	e721      	b.n	165e <__aeabi_dsub+0x3a>
    181a:	0023      	movs	r3, r4
    181c:	433b      	orrs	r3, r7
    181e:	d100      	bne.n	1822 <__aeabi_dsub+0x1fe>
    1820:	e1b9      	b.n	1b96 <__aeabi_dsub+0x572>
    1822:	2280      	movs	r2, #128	; 0x80
    1824:	0312      	lsls	r2, r2, #12
    1826:	4314      	orrs	r4, r2
    1828:	0324      	lsls	r4, r4, #12
    182a:	0b24      	lsrs	r4, r4, #12
    182c:	e79f      	b.n	176e <__aeabi_dsub+0x14a>
    182e:	002e      	movs	r6, r5
    1830:	e77e      	b.n	1730 <__aeabi_dsub+0x10c>
    1832:	0008      	movs	r0, r1
    1834:	4310      	orrs	r0, r2
    1836:	d100      	bne.n	183a <__aeabi_dsub+0x216>
    1838:	e0ca      	b.n	19d0 <__aeabi_dsub+0x3ac>
    183a:	1e58      	subs	r0, r3, #1
    183c:	4684      	mov	ip, r0
    183e:	2800      	cmp	r0, #0
    1840:	d000      	beq.n	1844 <__aeabi_dsub+0x220>
    1842:	e0e7      	b.n	1a14 <__aeabi_dsub+0x3f0>
    1844:	4452      	add	r2, sl
    1846:	4552      	cmp	r2, sl
    1848:	4180      	sbcs	r0, r0
    184a:	1864      	adds	r4, r4, r1
    184c:	4240      	negs	r0, r0
    184e:	1824      	adds	r4, r4, r0
    1850:	0017      	movs	r7, r2
    1852:	2601      	movs	r6, #1
    1854:	0223      	lsls	r3, r4, #8
    1856:	d507      	bpl.n	1868 <__aeabi_dsub+0x244>
    1858:	2602      	movs	r6, #2
    185a:	e7cf      	b.n	17fc <__aeabi_dsub+0x1d8>
    185c:	4664      	mov	r4, ip
    185e:	432c      	orrs	r4, r5
    1860:	d100      	bne.n	1864 <__aeabi_dsub+0x240>
    1862:	e1b3      	b.n	1bcc <__aeabi_dsub+0x5a8>
    1864:	002c      	movs	r4, r5
    1866:	4667      	mov	r7, ip
    1868:	077b      	lsls	r3, r7, #29
    186a:	d000      	beq.n	186e <__aeabi_dsub+0x24a>
    186c:	e762      	b.n	1734 <__aeabi_dsub+0x110>
    186e:	0763      	lsls	r3, r4, #29
    1870:	08ff      	lsrs	r7, r7, #3
    1872:	431f      	orrs	r7, r3
    1874:	2501      	movs	r5, #1
    1876:	4643      	mov	r3, r8
    1878:	08e4      	lsrs	r4, r4, #3
    187a:	401d      	ands	r5, r3
    187c:	e793      	b.n	17a6 <__aeabi_dsub+0x182>
    187e:	2d00      	cmp	r5, #0
    1880:	d178      	bne.n	1974 <__aeabi_dsub+0x350>
    1882:	1c75      	adds	r5, r6, #1
    1884:	056d      	lsls	r5, r5, #21
    1886:	0d6d      	lsrs	r5, r5, #21
    1888:	2d01      	cmp	r5, #1
    188a:	dc00      	bgt.n	188e <__aeabi_dsub+0x26a>
    188c:	e0f2      	b.n	1a74 <__aeabi_dsub+0x450>
    188e:	4650      	mov	r0, sl
    1890:	1a80      	subs	r0, r0, r2
    1892:	4582      	cmp	sl, r0
    1894:	41bf      	sbcs	r7, r7
    1896:	1a65      	subs	r5, r4, r1
    1898:	427f      	negs	r7, r7
    189a:	1bed      	subs	r5, r5, r7
    189c:	4684      	mov	ip, r0
    189e:	0228      	lsls	r0, r5, #8
    18a0:	d400      	bmi.n	18a4 <__aeabi_dsub+0x280>
    18a2:	e08c      	b.n	19be <__aeabi_dsub+0x39a>
    18a4:	4650      	mov	r0, sl
    18a6:	1a17      	subs	r7, r2, r0
    18a8:	42ba      	cmp	r2, r7
    18aa:	4192      	sbcs	r2, r2
    18ac:	1b0c      	subs	r4, r1, r4
    18ae:	4255      	negs	r5, r2
    18b0:	1b65      	subs	r5, r4, r5
    18b2:	4698      	mov	r8, r3
    18b4:	e714      	b.n	16e0 <__aeabi_dsub+0xbc>
    18b6:	2501      	movs	r5, #1
    18b8:	4643      	mov	r3, r8
    18ba:	2400      	movs	r4, #0
    18bc:	401d      	ands	r5, r3
    18be:	2700      	movs	r7, #0
    18c0:	e755      	b.n	176e <__aeabi_dsub+0x14a>
    18c2:	4c2a      	ldr	r4, [pc, #168]	; (196c <__aeabi_dsub+0x348>)
    18c4:	1af6      	subs	r6, r6, r3
    18c6:	402c      	ands	r4, r5
    18c8:	e732      	b.n	1730 <__aeabi_dsub+0x10c>
    18ca:	003d      	movs	r5, r7
    18cc:	3828      	subs	r0, #40	; 0x28
    18ce:	4085      	lsls	r5, r0
    18d0:	2700      	movs	r7, #0
    18d2:	e717      	b.n	1704 <__aeabi_dsub+0xe0>
    18d4:	0038      	movs	r0, r7
    18d6:	f000 faef 	bl	1eb8 <__clzsi2>
    18da:	3020      	adds	r0, #32
    18dc:	e706      	b.n	16ec <__aeabi_dsub+0xc8>
    18de:	430a      	orrs	r2, r1
    18e0:	0017      	movs	r7, r2
    18e2:	2100      	movs	r1, #0
    18e4:	1e7a      	subs	r2, r7, #1
    18e6:	4197      	sbcs	r7, r2
    18e8:	e6ee      	b.n	16c8 <__aeabi_dsub+0xa4>
    18ea:	2b00      	cmp	r3, #0
    18ec:	d000      	beq.n	18f0 <__aeabi_dsub+0x2cc>
    18ee:	e0e5      	b.n	1abc <__aeabi_dsub+0x498>
    18f0:	1c73      	adds	r3, r6, #1
    18f2:	469c      	mov	ip, r3
    18f4:	055b      	lsls	r3, r3, #21
    18f6:	0d5b      	lsrs	r3, r3, #21
    18f8:	2b01      	cmp	r3, #1
    18fa:	dc00      	bgt.n	18fe <__aeabi_dsub+0x2da>
    18fc:	e09f      	b.n	1a3e <__aeabi_dsub+0x41a>
    18fe:	4b1a      	ldr	r3, [pc, #104]	; (1968 <__aeabi_dsub+0x344>)
    1900:	459c      	cmp	ip, r3
    1902:	d100      	bne.n	1906 <__aeabi_dsub+0x2e2>
    1904:	e0c5      	b.n	1a92 <__aeabi_dsub+0x46e>
    1906:	4452      	add	r2, sl
    1908:	4552      	cmp	r2, sl
    190a:	4180      	sbcs	r0, r0
    190c:	1864      	adds	r4, r4, r1
    190e:	4240      	negs	r0, r0
    1910:	1824      	adds	r4, r4, r0
    1912:	07e7      	lsls	r7, r4, #31
    1914:	0852      	lsrs	r2, r2, #1
    1916:	4317      	orrs	r7, r2
    1918:	0864      	lsrs	r4, r4, #1
    191a:	4666      	mov	r6, ip
    191c:	e708      	b.n	1730 <__aeabi_dsub+0x10c>
    191e:	4812      	ldr	r0, [pc, #72]	; (1968 <__aeabi_dsub+0x344>)
    1920:	4285      	cmp	r5, r0
    1922:	d100      	bne.n	1926 <__aeabi_dsub+0x302>
    1924:	e085      	b.n	1a32 <__aeabi_dsub+0x40e>
    1926:	001d      	movs	r5, r3
    1928:	e6bc      	b.n	16a4 <__aeabi_dsub+0x80>
    192a:	0029      	movs	r1, r5
    192c:	3e1f      	subs	r6, #31
    192e:	40f1      	lsrs	r1, r6
    1930:	2b20      	cmp	r3, #32
    1932:	d100      	bne.n	1936 <__aeabi_dsub+0x312>
    1934:	e07f      	b.n	1a36 <__aeabi_dsub+0x412>
    1936:	2240      	movs	r2, #64	; 0x40
    1938:	1ad3      	subs	r3, r2, r3
    193a:	409d      	lsls	r5, r3
    193c:	432f      	orrs	r7, r5
    193e:	1e7d      	subs	r5, r7, #1
    1940:	41af      	sbcs	r7, r5
    1942:	2400      	movs	r4, #0
    1944:	430f      	orrs	r7, r1
    1946:	2600      	movs	r6, #0
    1948:	e78e      	b.n	1868 <__aeabi_dsub+0x244>
    194a:	002b      	movs	r3, r5
    194c:	000f      	movs	r7, r1
    194e:	3b20      	subs	r3, #32
    1950:	40df      	lsrs	r7, r3
    1952:	2d20      	cmp	r5, #32
    1954:	d071      	beq.n	1a3a <__aeabi_dsub+0x416>
    1956:	2340      	movs	r3, #64	; 0x40
    1958:	1b5d      	subs	r5, r3, r5
    195a:	40a9      	lsls	r1, r5
    195c:	430a      	orrs	r2, r1
    195e:	1e51      	subs	r1, r2, #1
    1960:	418a      	sbcs	r2, r1
    1962:	2100      	movs	r1, #0
    1964:	4317      	orrs	r7, r2
    1966:	e6af      	b.n	16c8 <__aeabi_dsub+0xa4>
    1968:	000007ff 	.word	0x000007ff
    196c:	ff7fffff 	.word	0xff7fffff
    1970:	800fffff 	.word	0x800fffff
    1974:	2e00      	cmp	r6, #0
    1976:	d03e      	beq.n	19f6 <__aeabi_dsub+0x3d2>
    1978:	4eb3      	ldr	r6, [pc, #716]	; (1c48 <__aeabi_dsub+0x624>)
    197a:	45b4      	cmp	ip, r6
    197c:	d045      	beq.n	1a0a <__aeabi_dsub+0x3e6>
    197e:	2680      	movs	r6, #128	; 0x80
    1980:	0436      	lsls	r6, r6, #16
    1982:	426d      	negs	r5, r5
    1984:	4334      	orrs	r4, r6
    1986:	2d38      	cmp	r5, #56	; 0x38
    1988:	dd00      	ble.n	198c <__aeabi_dsub+0x368>
    198a:	e0a8      	b.n	1ade <__aeabi_dsub+0x4ba>
    198c:	2d1f      	cmp	r5, #31
    198e:	dd00      	ble.n	1992 <__aeabi_dsub+0x36e>
    1990:	e11f      	b.n	1bd2 <__aeabi_dsub+0x5ae>
    1992:	2620      	movs	r6, #32
    1994:	0027      	movs	r7, r4
    1996:	4650      	mov	r0, sl
    1998:	1b76      	subs	r6, r6, r5
    199a:	40b7      	lsls	r7, r6
    199c:	40e8      	lsrs	r0, r5
    199e:	4307      	orrs	r7, r0
    19a0:	4650      	mov	r0, sl
    19a2:	40b0      	lsls	r0, r6
    19a4:	1e46      	subs	r6, r0, #1
    19a6:	41b0      	sbcs	r0, r6
    19a8:	40ec      	lsrs	r4, r5
    19aa:	4338      	orrs	r0, r7
    19ac:	1a17      	subs	r7, r2, r0
    19ae:	42ba      	cmp	r2, r7
    19b0:	4192      	sbcs	r2, r2
    19b2:	1b0c      	subs	r4, r1, r4
    19b4:	4252      	negs	r2, r2
    19b6:	1aa4      	subs	r4, r4, r2
    19b8:	4666      	mov	r6, ip
    19ba:	4698      	mov	r8, r3
    19bc:	e68b      	b.n	16d6 <__aeabi_dsub+0xb2>
    19be:	4664      	mov	r4, ip
    19c0:	4667      	mov	r7, ip
    19c2:	432c      	orrs	r4, r5
    19c4:	d000      	beq.n	19c8 <__aeabi_dsub+0x3a4>
    19c6:	e68b      	b.n	16e0 <__aeabi_dsub+0xbc>
    19c8:	2500      	movs	r5, #0
    19ca:	2600      	movs	r6, #0
    19cc:	2700      	movs	r7, #0
    19ce:	e6ea      	b.n	17a6 <__aeabi_dsub+0x182>
    19d0:	001e      	movs	r6, r3
    19d2:	e6ad      	b.n	1730 <__aeabi_dsub+0x10c>
    19d4:	2b1f      	cmp	r3, #31
    19d6:	dc60      	bgt.n	1a9a <__aeabi_dsub+0x476>
    19d8:	2720      	movs	r7, #32
    19da:	1af8      	subs	r0, r7, r3
    19dc:	000f      	movs	r7, r1
    19de:	4684      	mov	ip, r0
    19e0:	4087      	lsls	r7, r0
    19e2:	0010      	movs	r0, r2
    19e4:	40d8      	lsrs	r0, r3
    19e6:	4307      	orrs	r7, r0
    19e8:	4660      	mov	r0, ip
    19ea:	4082      	lsls	r2, r0
    19ec:	1e50      	subs	r0, r2, #1
    19ee:	4182      	sbcs	r2, r0
    19f0:	40d9      	lsrs	r1, r3
    19f2:	4317      	orrs	r7, r2
    19f4:	e6f5      	b.n	17e2 <__aeabi_dsub+0x1be>
    19f6:	0026      	movs	r6, r4
    19f8:	4650      	mov	r0, sl
    19fa:	4306      	orrs	r6, r0
    19fc:	d005      	beq.n	1a0a <__aeabi_dsub+0x3e6>
    19fe:	43ed      	mvns	r5, r5
    1a00:	2d00      	cmp	r5, #0
    1a02:	d0d3      	beq.n	19ac <__aeabi_dsub+0x388>
    1a04:	4e90      	ldr	r6, [pc, #576]	; (1c48 <__aeabi_dsub+0x624>)
    1a06:	45b4      	cmp	ip, r6
    1a08:	d1bd      	bne.n	1986 <__aeabi_dsub+0x362>
    1a0a:	000c      	movs	r4, r1
    1a0c:	0017      	movs	r7, r2
    1a0e:	4666      	mov	r6, ip
    1a10:	4698      	mov	r8, r3
    1a12:	e68d      	b.n	1730 <__aeabi_dsub+0x10c>
    1a14:	488c      	ldr	r0, [pc, #560]	; (1c48 <__aeabi_dsub+0x624>)
    1a16:	4283      	cmp	r3, r0
    1a18:	d00b      	beq.n	1a32 <__aeabi_dsub+0x40e>
    1a1a:	4663      	mov	r3, ip
    1a1c:	e6d9      	b.n	17d2 <__aeabi_dsub+0x1ae>
    1a1e:	2d00      	cmp	r5, #0
    1a20:	d000      	beq.n	1a24 <__aeabi_dsub+0x400>
    1a22:	e096      	b.n	1b52 <__aeabi_dsub+0x52e>
    1a24:	0008      	movs	r0, r1
    1a26:	4310      	orrs	r0, r2
    1a28:	d100      	bne.n	1a2c <__aeabi_dsub+0x408>
    1a2a:	e0e2      	b.n	1bf2 <__aeabi_dsub+0x5ce>
    1a2c:	000c      	movs	r4, r1
    1a2e:	0017      	movs	r7, r2
    1a30:	4698      	mov	r8, r3
    1a32:	4e85      	ldr	r6, [pc, #532]	; (1c48 <__aeabi_dsub+0x624>)
    1a34:	e67c      	b.n	1730 <__aeabi_dsub+0x10c>
    1a36:	2500      	movs	r5, #0
    1a38:	e780      	b.n	193c <__aeabi_dsub+0x318>
    1a3a:	2100      	movs	r1, #0
    1a3c:	e78e      	b.n	195c <__aeabi_dsub+0x338>
    1a3e:	0023      	movs	r3, r4
    1a40:	4650      	mov	r0, sl
    1a42:	4303      	orrs	r3, r0
    1a44:	2e00      	cmp	r6, #0
    1a46:	d000      	beq.n	1a4a <__aeabi_dsub+0x426>
    1a48:	e0a8      	b.n	1b9c <__aeabi_dsub+0x578>
    1a4a:	2b00      	cmp	r3, #0
    1a4c:	d100      	bne.n	1a50 <__aeabi_dsub+0x42c>
    1a4e:	e0de      	b.n	1c0e <__aeabi_dsub+0x5ea>
    1a50:	000b      	movs	r3, r1
    1a52:	4313      	orrs	r3, r2
    1a54:	d100      	bne.n	1a58 <__aeabi_dsub+0x434>
    1a56:	e66b      	b.n	1730 <__aeabi_dsub+0x10c>
    1a58:	4452      	add	r2, sl
    1a5a:	4552      	cmp	r2, sl
    1a5c:	4180      	sbcs	r0, r0
    1a5e:	1864      	adds	r4, r4, r1
    1a60:	4240      	negs	r0, r0
    1a62:	1824      	adds	r4, r4, r0
    1a64:	0017      	movs	r7, r2
    1a66:	0223      	lsls	r3, r4, #8
    1a68:	d400      	bmi.n	1a6c <__aeabi_dsub+0x448>
    1a6a:	e6fd      	b.n	1868 <__aeabi_dsub+0x244>
    1a6c:	4b77      	ldr	r3, [pc, #476]	; (1c4c <__aeabi_dsub+0x628>)
    1a6e:	4666      	mov	r6, ip
    1a70:	401c      	ands	r4, r3
    1a72:	e65d      	b.n	1730 <__aeabi_dsub+0x10c>
    1a74:	0025      	movs	r5, r4
    1a76:	4650      	mov	r0, sl
    1a78:	4305      	orrs	r5, r0
    1a7a:	2e00      	cmp	r6, #0
    1a7c:	d1cf      	bne.n	1a1e <__aeabi_dsub+0x3fa>
    1a7e:	2d00      	cmp	r5, #0
    1a80:	d14f      	bne.n	1b22 <__aeabi_dsub+0x4fe>
    1a82:	000c      	movs	r4, r1
    1a84:	4314      	orrs	r4, r2
    1a86:	d100      	bne.n	1a8a <__aeabi_dsub+0x466>
    1a88:	e0a0      	b.n	1bcc <__aeabi_dsub+0x5a8>
    1a8a:	000c      	movs	r4, r1
    1a8c:	0017      	movs	r7, r2
    1a8e:	4698      	mov	r8, r3
    1a90:	e64e      	b.n	1730 <__aeabi_dsub+0x10c>
    1a92:	4666      	mov	r6, ip
    1a94:	2400      	movs	r4, #0
    1a96:	2700      	movs	r7, #0
    1a98:	e685      	b.n	17a6 <__aeabi_dsub+0x182>
    1a9a:	001f      	movs	r7, r3
    1a9c:	0008      	movs	r0, r1
    1a9e:	3f20      	subs	r7, #32
    1aa0:	40f8      	lsrs	r0, r7
    1aa2:	0007      	movs	r7, r0
    1aa4:	2b20      	cmp	r3, #32
    1aa6:	d100      	bne.n	1aaa <__aeabi_dsub+0x486>
    1aa8:	e08e      	b.n	1bc8 <__aeabi_dsub+0x5a4>
    1aaa:	2040      	movs	r0, #64	; 0x40
    1aac:	1ac3      	subs	r3, r0, r3
    1aae:	4099      	lsls	r1, r3
    1ab0:	430a      	orrs	r2, r1
    1ab2:	1e51      	subs	r1, r2, #1
    1ab4:	418a      	sbcs	r2, r1
    1ab6:	2100      	movs	r1, #0
    1ab8:	4317      	orrs	r7, r2
    1aba:	e692      	b.n	17e2 <__aeabi_dsub+0x1be>
    1abc:	2e00      	cmp	r6, #0
    1abe:	d114      	bne.n	1aea <__aeabi_dsub+0x4c6>
    1ac0:	0026      	movs	r6, r4
    1ac2:	4650      	mov	r0, sl
    1ac4:	4306      	orrs	r6, r0
    1ac6:	d062      	beq.n	1b8e <__aeabi_dsub+0x56a>
    1ac8:	43db      	mvns	r3, r3
    1aca:	2b00      	cmp	r3, #0
    1acc:	d15c      	bne.n	1b88 <__aeabi_dsub+0x564>
    1ace:	1887      	adds	r7, r0, r2
    1ad0:	4297      	cmp	r7, r2
    1ad2:	4192      	sbcs	r2, r2
    1ad4:	1864      	adds	r4, r4, r1
    1ad6:	4252      	negs	r2, r2
    1ad8:	18a4      	adds	r4, r4, r2
    1ada:	4666      	mov	r6, ip
    1adc:	e687      	b.n	17ee <__aeabi_dsub+0x1ca>
    1ade:	4650      	mov	r0, sl
    1ae0:	4320      	orrs	r0, r4
    1ae2:	1e44      	subs	r4, r0, #1
    1ae4:	41a0      	sbcs	r0, r4
    1ae6:	2400      	movs	r4, #0
    1ae8:	e760      	b.n	19ac <__aeabi_dsub+0x388>
    1aea:	4e57      	ldr	r6, [pc, #348]	; (1c48 <__aeabi_dsub+0x624>)
    1aec:	45b4      	cmp	ip, r6
    1aee:	d04e      	beq.n	1b8e <__aeabi_dsub+0x56a>
    1af0:	2680      	movs	r6, #128	; 0x80
    1af2:	0436      	lsls	r6, r6, #16
    1af4:	425b      	negs	r3, r3
    1af6:	4334      	orrs	r4, r6
    1af8:	2b38      	cmp	r3, #56	; 0x38
    1afa:	dd00      	ble.n	1afe <__aeabi_dsub+0x4da>
    1afc:	e07f      	b.n	1bfe <__aeabi_dsub+0x5da>
    1afe:	2b1f      	cmp	r3, #31
    1b00:	dd00      	ble.n	1b04 <__aeabi_dsub+0x4e0>
    1b02:	e08b      	b.n	1c1c <__aeabi_dsub+0x5f8>
    1b04:	2620      	movs	r6, #32
    1b06:	0027      	movs	r7, r4
    1b08:	4650      	mov	r0, sl
    1b0a:	1af6      	subs	r6, r6, r3
    1b0c:	40b7      	lsls	r7, r6
    1b0e:	40d8      	lsrs	r0, r3
    1b10:	4307      	orrs	r7, r0
    1b12:	4650      	mov	r0, sl
    1b14:	40b0      	lsls	r0, r6
    1b16:	1e46      	subs	r6, r0, #1
    1b18:	41b0      	sbcs	r0, r6
    1b1a:	4307      	orrs	r7, r0
    1b1c:	40dc      	lsrs	r4, r3
    1b1e:	18bf      	adds	r7, r7, r2
    1b20:	e7d6      	b.n	1ad0 <__aeabi_dsub+0x4ac>
    1b22:	000d      	movs	r5, r1
    1b24:	4315      	orrs	r5, r2
    1b26:	d100      	bne.n	1b2a <__aeabi_dsub+0x506>
    1b28:	e602      	b.n	1730 <__aeabi_dsub+0x10c>
    1b2a:	4650      	mov	r0, sl
    1b2c:	1a80      	subs	r0, r0, r2
    1b2e:	4582      	cmp	sl, r0
    1b30:	41bf      	sbcs	r7, r7
    1b32:	1a65      	subs	r5, r4, r1
    1b34:	427f      	negs	r7, r7
    1b36:	1bed      	subs	r5, r5, r7
    1b38:	4684      	mov	ip, r0
    1b3a:	0228      	lsls	r0, r5, #8
    1b3c:	d400      	bmi.n	1b40 <__aeabi_dsub+0x51c>
    1b3e:	e68d      	b.n	185c <__aeabi_dsub+0x238>
    1b40:	4650      	mov	r0, sl
    1b42:	1a17      	subs	r7, r2, r0
    1b44:	42ba      	cmp	r2, r7
    1b46:	4192      	sbcs	r2, r2
    1b48:	1b0c      	subs	r4, r1, r4
    1b4a:	4252      	negs	r2, r2
    1b4c:	1aa4      	subs	r4, r4, r2
    1b4e:	4698      	mov	r8, r3
    1b50:	e5ee      	b.n	1730 <__aeabi_dsub+0x10c>
    1b52:	000d      	movs	r5, r1
    1b54:	4315      	orrs	r5, r2
    1b56:	d100      	bne.n	1b5a <__aeabi_dsub+0x536>
    1b58:	e76b      	b.n	1a32 <__aeabi_dsub+0x40e>
    1b5a:	4650      	mov	r0, sl
    1b5c:	0767      	lsls	r7, r4, #29
    1b5e:	08c0      	lsrs	r0, r0, #3
    1b60:	4307      	orrs	r7, r0
    1b62:	2080      	movs	r0, #128	; 0x80
    1b64:	08e4      	lsrs	r4, r4, #3
    1b66:	0300      	lsls	r0, r0, #12
    1b68:	4204      	tst	r4, r0
    1b6a:	d007      	beq.n	1b7c <__aeabi_dsub+0x558>
    1b6c:	08cd      	lsrs	r5, r1, #3
    1b6e:	4205      	tst	r5, r0
    1b70:	d104      	bne.n	1b7c <__aeabi_dsub+0x558>
    1b72:	002c      	movs	r4, r5
    1b74:	4698      	mov	r8, r3
    1b76:	08d7      	lsrs	r7, r2, #3
    1b78:	0749      	lsls	r1, r1, #29
    1b7a:	430f      	orrs	r7, r1
    1b7c:	0f7b      	lsrs	r3, r7, #29
    1b7e:	00e4      	lsls	r4, r4, #3
    1b80:	431c      	orrs	r4, r3
    1b82:	00ff      	lsls	r7, r7, #3
    1b84:	4e30      	ldr	r6, [pc, #192]	; (1c48 <__aeabi_dsub+0x624>)
    1b86:	e5d3      	b.n	1730 <__aeabi_dsub+0x10c>
    1b88:	4e2f      	ldr	r6, [pc, #188]	; (1c48 <__aeabi_dsub+0x624>)
    1b8a:	45b4      	cmp	ip, r6
    1b8c:	d1b4      	bne.n	1af8 <__aeabi_dsub+0x4d4>
    1b8e:	000c      	movs	r4, r1
    1b90:	0017      	movs	r7, r2
    1b92:	4666      	mov	r6, ip
    1b94:	e5cc      	b.n	1730 <__aeabi_dsub+0x10c>
    1b96:	2700      	movs	r7, #0
    1b98:	2400      	movs	r4, #0
    1b9a:	e5e8      	b.n	176e <__aeabi_dsub+0x14a>
    1b9c:	2b00      	cmp	r3, #0
    1b9e:	d039      	beq.n	1c14 <__aeabi_dsub+0x5f0>
    1ba0:	000b      	movs	r3, r1
    1ba2:	4313      	orrs	r3, r2
    1ba4:	d100      	bne.n	1ba8 <__aeabi_dsub+0x584>
    1ba6:	e744      	b.n	1a32 <__aeabi_dsub+0x40e>
    1ba8:	08c0      	lsrs	r0, r0, #3
    1baa:	0767      	lsls	r7, r4, #29
    1bac:	4307      	orrs	r7, r0
    1bae:	2080      	movs	r0, #128	; 0x80
    1bb0:	08e4      	lsrs	r4, r4, #3
    1bb2:	0300      	lsls	r0, r0, #12
    1bb4:	4204      	tst	r4, r0
    1bb6:	d0e1      	beq.n	1b7c <__aeabi_dsub+0x558>
    1bb8:	08cb      	lsrs	r3, r1, #3
    1bba:	4203      	tst	r3, r0
    1bbc:	d1de      	bne.n	1b7c <__aeabi_dsub+0x558>
    1bbe:	08d7      	lsrs	r7, r2, #3
    1bc0:	0749      	lsls	r1, r1, #29
    1bc2:	430f      	orrs	r7, r1
    1bc4:	001c      	movs	r4, r3
    1bc6:	e7d9      	b.n	1b7c <__aeabi_dsub+0x558>
    1bc8:	2100      	movs	r1, #0
    1bca:	e771      	b.n	1ab0 <__aeabi_dsub+0x48c>
    1bcc:	2500      	movs	r5, #0
    1bce:	2700      	movs	r7, #0
    1bd0:	e5e9      	b.n	17a6 <__aeabi_dsub+0x182>
    1bd2:	002e      	movs	r6, r5
    1bd4:	0027      	movs	r7, r4
    1bd6:	3e20      	subs	r6, #32
    1bd8:	40f7      	lsrs	r7, r6
    1bda:	2d20      	cmp	r5, #32
    1bdc:	d02f      	beq.n	1c3e <__aeabi_dsub+0x61a>
    1bde:	2640      	movs	r6, #64	; 0x40
    1be0:	1b75      	subs	r5, r6, r5
    1be2:	40ac      	lsls	r4, r5
    1be4:	4650      	mov	r0, sl
    1be6:	4320      	orrs	r0, r4
    1be8:	1e44      	subs	r4, r0, #1
    1bea:	41a0      	sbcs	r0, r4
    1bec:	2400      	movs	r4, #0
    1bee:	4338      	orrs	r0, r7
    1bf0:	e6dc      	b.n	19ac <__aeabi_dsub+0x388>
    1bf2:	2480      	movs	r4, #128	; 0x80
    1bf4:	2500      	movs	r5, #0
    1bf6:	0324      	lsls	r4, r4, #12
    1bf8:	4e13      	ldr	r6, [pc, #76]	; (1c48 <__aeabi_dsub+0x624>)
    1bfa:	2700      	movs	r7, #0
    1bfc:	e5d3      	b.n	17a6 <__aeabi_dsub+0x182>
    1bfe:	4650      	mov	r0, sl
    1c00:	4320      	orrs	r0, r4
    1c02:	0007      	movs	r7, r0
    1c04:	1e78      	subs	r0, r7, #1
    1c06:	4187      	sbcs	r7, r0
    1c08:	2400      	movs	r4, #0
    1c0a:	18bf      	adds	r7, r7, r2
    1c0c:	e760      	b.n	1ad0 <__aeabi_dsub+0x4ac>
    1c0e:	000c      	movs	r4, r1
    1c10:	0017      	movs	r7, r2
    1c12:	e58d      	b.n	1730 <__aeabi_dsub+0x10c>
    1c14:	000c      	movs	r4, r1
    1c16:	0017      	movs	r7, r2
    1c18:	4e0b      	ldr	r6, [pc, #44]	; (1c48 <__aeabi_dsub+0x624>)
    1c1a:	e589      	b.n	1730 <__aeabi_dsub+0x10c>
    1c1c:	001e      	movs	r6, r3
    1c1e:	0027      	movs	r7, r4
    1c20:	3e20      	subs	r6, #32
    1c22:	40f7      	lsrs	r7, r6
    1c24:	2b20      	cmp	r3, #32
    1c26:	d00c      	beq.n	1c42 <__aeabi_dsub+0x61e>
    1c28:	2640      	movs	r6, #64	; 0x40
    1c2a:	1af3      	subs	r3, r6, r3
    1c2c:	409c      	lsls	r4, r3
    1c2e:	4650      	mov	r0, sl
    1c30:	4320      	orrs	r0, r4
    1c32:	1e44      	subs	r4, r0, #1
    1c34:	41a0      	sbcs	r0, r4
    1c36:	4307      	orrs	r7, r0
    1c38:	2400      	movs	r4, #0
    1c3a:	18bf      	adds	r7, r7, r2
    1c3c:	e748      	b.n	1ad0 <__aeabi_dsub+0x4ac>
    1c3e:	2400      	movs	r4, #0
    1c40:	e7d0      	b.n	1be4 <__aeabi_dsub+0x5c0>
    1c42:	2400      	movs	r4, #0
    1c44:	e7f3      	b.n	1c2e <__aeabi_dsub+0x60a>
    1c46:	46c0      	nop			; (mov r8, r8)
    1c48:	000007ff 	.word	0x000007ff
    1c4c:	ff7fffff 	.word	0xff7fffff

00001c50 <__aeabi_d2iz>:
    1c50:	b530      	push	{r4, r5, lr}
    1c52:	4d13      	ldr	r5, [pc, #76]	; (1ca0 <__aeabi_d2iz+0x50>)
    1c54:	030a      	lsls	r2, r1, #12
    1c56:	004b      	lsls	r3, r1, #1
    1c58:	0b12      	lsrs	r2, r2, #12
    1c5a:	0d5b      	lsrs	r3, r3, #21
    1c5c:	0fc9      	lsrs	r1, r1, #31
    1c5e:	2400      	movs	r4, #0
    1c60:	42ab      	cmp	r3, r5
    1c62:	dd10      	ble.n	1c86 <__aeabi_d2iz+0x36>
    1c64:	4c0f      	ldr	r4, [pc, #60]	; (1ca4 <__aeabi_d2iz+0x54>)
    1c66:	42a3      	cmp	r3, r4
    1c68:	dc0f      	bgt.n	1c8a <__aeabi_d2iz+0x3a>
    1c6a:	2480      	movs	r4, #128	; 0x80
    1c6c:	4d0e      	ldr	r5, [pc, #56]	; (1ca8 <__aeabi_d2iz+0x58>)
    1c6e:	0364      	lsls	r4, r4, #13
    1c70:	4322      	orrs	r2, r4
    1c72:	1aed      	subs	r5, r5, r3
    1c74:	2d1f      	cmp	r5, #31
    1c76:	dd0b      	ble.n	1c90 <__aeabi_d2iz+0x40>
    1c78:	480c      	ldr	r0, [pc, #48]	; (1cac <__aeabi_d2iz+0x5c>)
    1c7a:	1ac3      	subs	r3, r0, r3
    1c7c:	40da      	lsrs	r2, r3
    1c7e:	4254      	negs	r4, r2
    1c80:	2900      	cmp	r1, #0
    1c82:	d100      	bne.n	1c86 <__aeabi_d2iz+0x36>
    1c84:	0014      	movs	r4, r2
    1c86:	0020      	movs	r0, r4
    1c88:	bd30      	pop	{r4, r5, pc}
    1c8a:	4b09      	ldr	r3, [pc, #36]	; (1cb0 <__aeabi_d2iz+0x60>)
    1c8c:	18cc      	adds	r4, r1, r3
    1c8e:	e7fa      	b.n	1c86 <__aeabi_d2iz+0x36>
    1c90:	4c08      	ldr	r4, [pc, #32]	; (1cb4 <__aeabi_d2iz+0x64>)
    1c92:	40e8      	lsrs	r0, r5
    1c94:	46a4      	mov	ip, r4
    1c96:	4463      	add	r3, ip
    1c98:	409a      	lsls	r2, r3
    1c9a:	4302      	orrs	r2, r0
    1c9c:	e7ef      	b.n	1c7e <__aeabi_d2iz+0x2e>
    1c9e:	46c0      	nop			; (mov r8, r8)
    1ca0:	000003fe 	.word	0x000003fe
    1ca4:	0000041d 	.word	0x0000041d
    1ca8:	00000433 	.word	0x00000433
    1cac:	00000413 	.word	0x00000413
    1cb0:	7fffffff 	.word	0x7fffffff
    1cb4:	fffffbed 	.word	0xfffffbed

00001cb8 <__aeabi_ui2d>:
    1cb8:	b510      	push	{r4, lr}
    1cba:	1e04      	subs	r4, r0, #0
    1cbc:	d028      	beq.n	1d10 <__aeabi_ui2d+0x58>
    1cbe:	f000 f8fb 	bl	1eb8 <__clzsi2>
    1cc2:	4b15      	ldr	r3, [pc, #84]	; (1d18 <__aeabi_ui2d+0x60>)
    1cc4:	4a15      	ldr	r2, [pc, #84]	; (1d1c <__aeabi_ui2d+0x64>)
    1cc6:	1a1b      	subs	r3, r3, r0
    1cc8:	1ad2      	subs	r2, r2, r3
    1cca:	2a1f      	cmp	r2, #31
    1ccc:	dd15      	ble.n	1cfa <__aeabi_ui2d+0x42>
    1cce:	4a14      	ldr	r2, [pc, #80]	; (1d20 <__aeabi_ui2d+0x68>)
    1cd0:	1ad2      	subs	r2, r2, r3
    1cd2:	4094      	lsls	r4, r2
    1cd4:	2200      	movs	r2, #0
    1cd6:	0324      	lsls	r4, r4, #12
    1cd8:	055b      	lsls	r3, r3, #21
    1cda:	0b24      	lsrs	r4, r4, #12
    1cdc:	0d5b      	lsrs	r3, r3, #21
    1cde:	2100      	movs	r1, #0
    1ce0:	0010      	movs	r0, r2
    1ce2:	0324      	lsls	r4, r4, #12
    1ce4:	0d0a      	lsrs	r2, r1, #20
    1ce6:	0b24      	lsrs	r4, r4, #12
    1ce8:	0512      	lsls	r2, r2, #20
    1cea:	4322      	orrs	r2, r4
    1cec:	4c0d      	ldr	r4, [pc, #52]	; (1d24 <__aeabi_ui2d+0x6c>)
    1cee:	051b      	lsls	r3, r3, #20
    1cf0:	4022      	ands	r2, r4
    1cf2:	4313      	orrs	r3, r2
    1cf4:	005b      	lsls	r3, r3, #1
    1cf6:	0859      	lsrs	r1, r3, #1
    1cf8:	bd10      	pop	{r4, pc}
    1cfa:	0021      	movs	r1, r4
    1cfc:	4091      	lsls	r1, r2
    1cfe:	000a      	movs	r2, r1
    1d00:	210b      	movs	r1, #11
    1d02:	1a08      	subs	r0, r1, r0
    1d04:	40c4      	lsrs	r4, r0
    1d06:	055b      	lsls	r3, r3, #21
    1d08:	0324      	lsls	r4, r4, #12
    1d0a:	0b24      	lsrs	r4, r4, #12
    1d0c:	0d5b      	lsrs	r3, r3, #21
    1d0e:	e7e6      	b.n	1cde <__aeabi_ui2d+0x26>
    1d10:	2300      	movs	r3, #0
    1d12:	2400      	movs	r4, #0
    1d14:	2200      	movs	r2, #0
    1d16:	e7e2      	b.n	1cde <__aeabi_ui2d+0x26>
    1d18:	0000041e 	.word	0x0000041e
    1d1c:	00000433 	.word	0x00000433
    1d20:	00000413 	.word	0x00000413
    1d24:	800fffff 	.word	0x800fffff

00001d28 <__udivsi3>:
    1d28:	2200      	movs	r2, #0
    1d2a:	0843      	lsrs	r3, r0, #1
    1d2c:	428b      	cmp	r3, r1
    1d2e:	d374      	bcc.n	1e1a <__udivsi3+0xf2>
    1d30:	0903      	lsrs	r3, r0, #4
    1d32:	428b      	cmp	r3, r1
    1d34:	d35f      	bcc.n	1df6 <__udivsi3+0xce>
    1d36:	0a03      	lsrs	r3, r0, #8
    1d38:	428b      	cmp	r3, r1
    1d3a:	d344      	bcc.n	1dc6 <__udivsi3+0x9e>
    1d3c:	0b03      	lsrs	r3, r0, #12
    1d3e:	428b      	cmp	r3, r1
    1d40:	d328      	bcc.n	1d94 <__udivsi3+0x6c>
    1d42:	0c03      	lsrs	r3, r0, #16
    1d44:	428b      	cmp	r3, r1
    1d46:	d30d      	bcc.n	1d64 <__udivsi3+0x3c>
    1d48:	22ff      	movs	r2, #255	; 0xff
    1d4a:	0209      	lsls	r1, r1, #8
    1d4c:	ba12      	rev	r2, r2
    1d4e:	0c03      	lsrs	r3, r0, #16
    1d50:	428b      	cmp	r3, r1
    1d52:	d302      	bcc.n	1d5a <__udivsi3+0x32>
    1d54:	1212      	asrs	r2, r2, #8
    1d56:	0209      	lsls	r1, r1, #8
    1d58:	d065      	beq.n	1e26 <__udivsi3+0xfe>
    1d5a:	0b03      	lsrs	r3, r0, #12
    1d5c:	428b      	cmp	r3, r1
    1d5e:	d319      	bcc.n	1d94 <__udivsi3+0x6c>
    1d60:	e000      	b.n	1d64 <__udivsi3+0x3c>
    1d62:	0a09      	lsrs	r1, r1, #8
    1d64:	0bc3      	lsrs	r3, r0, #15
    1d66:	428b      	cmp	r3, r1
    1d68:	d301      	bcc.n	1d6e <__udivsi3+0x46>
    1d6a:	03cb      	lsls	r3, r1, #15
    1d6c:	1ac0      	subs	r0, r0, r3
    1d6e:	4152      	adcs	r2, r2
    1d70:	0b83      	lsrs	r3, r0, #14
    1d72:	428b      	cmp	r3, r1
    1d74:	d301      	bcc.n	1d7a <__udivsi3+0x52>
    1d76:	038b      	lsls	r3, r1, #14
    1d78:	1ac0      	subs	r0, r0, r3
    1d7a:	4152      	adcs	r2, r2
    1d7c:	0b43      	lsrs	r3, r0, #13
    1d7e:	428b      	cmp	r3, r1
    1d80:	d301      	bcc.n	1d86 <__udivsi3+0x5e>
    1d82:	034b      	lsls	r3, r1, #13
    1d84:	1ac0      	subs	r0, r0, r3
    1d86:	4152      	adcs	r2, r2
    1d88:	0b03      	lsrs	r3, r0, #12
    1d8a:	428b      	cmp	r3, r1
    1d8c:	d301      	bcc.n	1d92 <__udivsi3+0x6a>
    1d8e:	030b      	lsls	r3, r1, #12
    1d90:	1ac0      	subs	r0, r0, r3
    1d92:	4152      	adcs	r2, r2
    1d94:	0ac3      	lsrs	r3, r0, #11
    1d96:	428b      	cmp	r3, r1
    1d98:	d301      	bcc.n	1d9e <__udivsi3+0x76>
    1d9a:	02cb      	lsls	r3, r1, #11
    1d9c:	1ac0      	subs	r0, r0, r3
    1d9e:	4152      	adcs	r2, r2
    1da0:	0a83      	lsrs	r3, r0, #10
    1da2:	428b      	cmp	r3, r1
    1da4:	d301      	bcc.n	1daa <__udivsi3+0x82>
    1da6:	028b      	lsls	r3, r1, #10
    1da8:	1ac0      	subs	r0, r0, r3
    1daa:	4152      	adcs	r2, r2
    1dac:	0a43      	lsrs	r3, r0, #9
    1dae:	428b      	cmp	r3, r1
    1db0:	d301      	bcc.n	1db6 <__udivsi3+0x8e>
    1db2:	024b      	lsls	r3, r1, #9
    1db4:	1ac0      	subs	r0, r0, r3
    1db6:	4152      	adcs	r2, r2
    1db8:	0a03      	lsrs	r3, r0, #8
    1dba:	428b      	cmp	r3, r1
    1dbc:	d301      	bcc.n	1dc2 <__udivsi3+0x9a>
    1dbe:	020b      	lsls	r3, r1, #8
    1dc0:	1ac0      	subs	r0, r0, r3
    1dc2:	4152      	adcs	r2, r2
    1dc4:	d2cd      	bcs.n	1d62 <__udivsi3+0x3a>
    1dc6:	09c3      	lsrs	r3, r0, #7
    1dc8:	428b      	cmp	r3, r1
    1dca:	d301      	bcc.n	1dd0 <__udivsi3+0xa8>
    1dcc:	01cb      	lsls	r3, r1, #7
    1dce:	1ac0      	subs	r0, r0, r3
    1dd0:	4152      	adcs	r2, r2
    1dd2:	0983      	lsrs	r3, r0, #6
    1dd4:	428b      	cmp	r3, r1
    1dd6:	d301      	bcc.n	1ddc <__udivsi3+0xb4>
    1dd8:	018b      	lsls	r3, r1, #6
    1dda:	1ac0      	subs	r0, r0, r3
    1ddc:	4152      	adcs	r2, r2
    1dde:	0943      	lsrs	r3, r0, #5
    1de0:	428b      	cmp	r3, r1
    1de2:	d301      	bcc.n	1de8 <__udivsi3+0xc0>
    1de4:	014b      	lsls	r3, r1, #5
    1de6:	1ac0      	subs	r0, r0, r3
    1de8:	4152      	adcs	r2, r2
    1dea:	0903      	lsrs	r3, r0, #4
    1dec:	428b      	cmp	r3, r1
    1dee:	d301      	bcc.n	1df4 <__udivsi3+0xcc>
    1df0:	010b      	lsls	r3, r1, #4
    1df2:	1ac0      	subs	r0, r0, r3
    1df4:	4152      	adcs	r2, r2
    1df6:	08c3      	lsrs	r3, r0, #3
    1df8:	428b      	cmp	r3, r1
    1dfa:	d301      	bcc.n	1e00 <__udivsi3+0xd8>
    1dfc:	00cb      	lsls	r3, r1, #3
    1dfe:	1ac0      	subs	r0, r0, r3
    1e00:	4152      	adcs	r2, r2
    1e02:	0883      	lsrs	r3, r0, #2
    1e04:	428b      	cmp	r3, r1
    1e06:	d301      	bcc.n	1e0c <__udivsi3+0xe4>
    1e08:	008b      	lsls	r3, r1, #2
    1e0a:	1ac0      	subs	r0, r0, r3
    1e0c:	4152      	adcs	r2, r2
    1e0e:	0843      	lsrs	r3, r0, #1
    1e10:	428b      	cmp	r3, r1
    1e12:	d301      	bcc.n	1e18 <__udivsi3+0xf0>
    1e14:	004b      	lsls	r3, r1, #1
    1e16:	1ac0      	subs	r0, r0, r3
    1e18:	4152      	adcs	r2, r2
    1e1a:	1a41      	subs	r1, r0, r1
    1e1c:	d200      	bcs.n	1e20 <__udivsi3+0xf8>
    1e1e:	4601      	mov	r1, r0
    1e20:	4152      	adcs	r2, r2
    1e22:	4610      	mov	r0, r2
    1e24:	4770      	bx	lr
    1e26:	e7ff      	b.n	1e28 <__udivsi3+0x100>
    1e28:	b501      	push	{r0, lr}
    1e2a:	2000      	movs	r0, #0
    1e2c:	f7ff f8a6 	bl	f7c <__aeabi_idiv0>
    1e30:	bd02      	pop	{r1, pc}
    1e32:	46c0      	nop			; (mov r8, r8)

00001e34 <__aeabi_uidivmod>:
    1e34:	2900      	cmp	r1, #0
    1e36:	d0f7      	beq.n	1e28 <__udivsi3+0x100>
    1e38:	e776      	b.n	1d28 <__udivsi3>
    1e3a:	4770      	bx	lr

00001e3c <__aeabi_cdrcmple>:
    1e3c:	4684      	mov	ip, r0
    1e3e:	1c10      	adds	r0, r2, #0
    1e40:	4662      	mov	r2, ip
    1e42:	468c      	mov	ip, r1
    1e44:	1c19      	adds	r1, r3, #0
    1e46:	4663      	mov	r3, ip
    1e48:	e000      	b.n	1e4c <__aeabi_cdcmpeq>
    1e4a:	46c0      	nop			; (mov r8, r8)

00001e4c <__aeabi_cdcmpeq>:
    1e4c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    1e4e:	f000 f8ef 	bl	2030 <__ledf2>
    1e52:	2800      	cmp	r0, #0
    1e54:	d401      	bmi.n	1e5a <__aeabi_cdcmpeq+0xe>
    1e56:	2100      	movs	r1, #0
    1e58:	42c8      	cmn	r0, r1
    1e5a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00001e5c <__aeabi_dcmpeq>:
    1e5c:	b510      	push	{r4, lr}
    1e5e:	f000 f849 	bl	1ef4 <__eqdf2>
    1e62:	4240      	negs	r0, r0
    1e64:	3001      	adds	r0, #1
    1e66:	bd10      	pop	{r4, pc}

00001e68 <__aeabi_dcmplt>:
    1e68:	b510      	push	{r4, lr}
    1e6a:	f000 f8e1 	bl	2030 <__ledf2>
    1e6e:	2800      	cmp	r0, #0
    1e70:	db01      	blt.n	1e76 <__aeabi_dcmplt+0xe>
    1e72:	2000      	movs	r0, #0
    1e74:	bd10      	pop	{r4, pc}
    1e76:	2001      	movs	r0, #1
    1e78:	bd10      	pop	{r4, pc}
    1e7a:	46c0      	nop			; (mov r8, r8)

00001e7c <__aeabi_dcmple>:
    1e7c:	b510      	push	{r4, lr}
    1e7e:	f000 f8d7 	bl	2030 <__ledf2>
    1e82:	2800      	cmp	r0, #0
    1e84:	dd01      	ble.n	1e8a <__aeabi_dcmple+0xe>
    1e86:	2000      	movs	r0, #0
    1e88:	bd10      	pop	{r4, pc}
    1e8a:	2001      	movs	r0, #1
    1e8c:	bd10      	pop	{r4, pc}
    1e8e:	46c0      	nop			; (mov r8, r8)

00001e90 <__aeabi_dcmpgt>:
    1e90:	b510      	push	{r4, lr}
    1e92:	f000 f869 	bl	1f68 <__gedf2>
    1e96:	2800      	cmp	r0, #0
    1e98:	dc01      	bgt.n	1e9e <__aeabi_dcmpgt+0xe>
    1e9a:	2000      	movs	r0, #0
    1e9c:	bd10      	pop	{r4, pc}
    1e9e:	2001      	movs	r0, #1
    1ea0:	bd10      	pop	{r4, pc}
    1ea2:	46c0      	nop			; (mov r8, r8)

00001ea4 <__aeabi_dcmpge>:
    1ea4:	b510      	push	{r4, lr}
    1ea6:	f000 f85f 	bl	1f68 <__gedf2>
    1eaa:	2800      	cmp	r0, #0
    1eac:	da01      	bge.n	1eb2 <__aeabi_dcmpge+0xe>
    1eae:	2000      	movs	r0, #0
    1eb0:	bd10      	pop	{r4, pc}
    1eb2:	2001      	movs	r0, #1
    1eb4:	bd10      	pop	{r4, pc}
    1eb6:	46c0      	nop			; (mov r8, r8)

00001eb8 <__clzsi2>:
    1eb8:	211c      	movs	r1, #28
    1eba:	2301      	movs	r3, #1
    1ebc:	041b      	lsls	r3, r3, #16
    1ebe:	4298      	cmp	r0, r3
    1ec0:	d301      	bcc.n	1ec6 <__clzsi2+0xe>
    1ec2:	0c00      	lsrs	r0, r0, #16
    1ec4:	3910      	subs	r1, #16
    1ec6:	0a1b      	lsrs	r3, r3, #8
    1ec8:	4298      	cmp	r0, r3
    1eca:	d301      	bcc.n	1ed0 <__clzsi2+0x18>
    1ecc:	0a00      	lsrs	r0, r0, #8
    1ece:	3908      	subs	r1, #8
    1ed0:	091b      	lsrs	r3, r3, #4
    1ed2:	4298      	cmp	r0, r3
    1ed4:	d301      	bcc.n	1eda <__clzsi2+0x22>
    1ed6:	0900      	lsrs	r0, r0, #4
    1ed8:	3904      	subs	r1, #4
    1eda:	a202      	add	r2, pc, #8	; (adr r2, 1ee4 <__clzsi2+0x2c>)
    1edc:	5c10      	ldrb	r0, [r2, r0]
    1ede:	1840      	adds	r0, r0, r1
    1ee0:	4770      	bx	lr
    1ee2:	46c0      	nop			; (mov r8, r8)
    1ee4:	02020304 	.word	0x02020304
    1ee8:	01010101 	.word	0x01010101
	...

00001ef4 <__eqdf2>:
    1ef4:	b5f0      	push	{r4, r5, r6, r7, lr}
    1ef6:	464f      	mov	r7, r9
    1ef8:	4646      	mov	r6, r8
    1efa:	46d6      	mov	lr, sl
    1efc:	005c      	lsls	r4, r3, #1
    1efe:	b5c0      	push	{r6, r7, lr}
    1f00:	031f      	lsls	r7, r3, #12
    1f02:	0fdb      	lsrs	r3, r3, #31
    1f04:	469a      	mov	sl, r3
    1f06:	4b17      	ldr	r3, [pc, #92]	; (1f64 <__eqdf2+0x70>)
    1f08:	030e      	lsls	r6, r1, #12
    1f0a:	004d      	lsls	r5, r1, #1
    1f0c:	4684      	mov	ip, r0
    1f0e:	4680      	mov	r8, r0
    1f10:	0b36      	lsrs	r6, r6, #12
    1f12:	0d6d      	lsrs	r5, r5, #21
    1f14:	0fc9      	lsrs	r1, r1, #31
    1f16:	4691      	mov	r9, r2
    1f18:	0b3f      	lsrs	r7, r7, #12
    1f1a:	0d64      	lsrs	r4, r4, #21
    1f1c:	2001      	movs	r0, #1
    1f1e:	429d      	cmp	r5, r3
    1f20:	d008      	beq.n	1f34 <__eqdf2+0x40>
    1f22:	429c      	cmp	r4, r3
    1f24:	d001      	beq.n	1f2a <__eqdf2+0x36>
    1f26:	42a5      	cmp	r5, r4
    1f28:	d00b      	beq.n	1f42 <__eqdf2+0x4e>
    1f2a:	bc1c      	pop	{r2, r3, r4}
    1f2c:	4690      	mov	r8, r2
    1f2e:	4699      	mov	r9, r3
    1f30:	46a2      	mov	sl, r4
    1f32:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1f34:	4663      	mov	r3, ip
    1f36:	4333      	orrs	r3, r6
    1f38:	d1f7      	bne.n	1f2a <__eqdf2+0x36>
    1f3a:	42ac      	cmp	r4, r5
    1f3c:	d1f5      	bne.n	1f2a <__eqdf2+0x36>
    1f3e:	433a      	orrs	r2, r7
    1f40:	d1f3      	bne.n	1f2a <__eqdf2+0x36>
    1f42:	2001      	movs	r0, #1
    1f44:	42be      	cmp	r6, r7
    1f46:	d1f0      	bne.n	1f2a <__eqdf2+0x36>
    1f48:	45c8      	cmp	r8, r9
    1f4a:	d1ee      	bne.n	1f2a <__eqdf2+0x36>
    1f4c:	4551      	cmp	r1, sl
    1f4e:	d007      	beq.n	1f60 <__eqdf2+0x6c>
    1f50:	2d00      	cmp	r5, #0
    1f52:	d1ea      	bne.n	1f2a <__eqdf2+0x36>
    1f54:	4663      	mov	r3, ip
    1f56:	431e      	orrs	r6, r3
    1f58:	0030      	movs	r0, r6
    1f5a:	1e46      	subs	r6, r0, #1
    1f5c:	41b0      	sbcs	r0, r6
    1f5e:	e7e4      	b.n	1f2a <__eqdf2+0x36>
    1f60:	2000      	movs	r0, #0
    1f62:	e7e2      	b.n	1f2a <__eqdf2+0x36>
    1f64:	000007ff 	.word	0x000007ff

00001f68 <__gedf2>:
    1f68:	b5f0      	push	{r4, r5, r6, r7, lr}
    1f6a:	4645      	mov	r5, r8
    1f6c:	46de      	mov	lr, fp
    1f6e:	4657      	mov	r7, sl
    1f70:	464e      	mov	r6, r9
    1f72:	b5e0      	push	{r5, r6, r7, lr}
    1f74:	031f      	lsls	r7, r3, #12
    1f76:	0b3d      	lsrs	r5, r7, #12
    1f78:	4f2c      	ldr	r7, [pc, #176]	; (202c <STACK_SIZE+0x2c>)
    1f7a:	030e      	lsls	r6, r1, #12
    1f7c:	004c      	lsls	r4, r1, #1
    1f7e:	46ab      	mov	fp, r5
    1f80:	005d      	lsls	r5, r3, #1
    1f82:	4684      	mov	ip, r0
    1f84:	0b36      	lsrs	r6, r6, #12
    1f86:	0d64      	lsrs	r4, r4, #21
    1f88:	0fc9      	lsrs	r1, r1, #31
    1f8a:	4690      	mov	r8, r2
    1f8c:	0d6d      	lsrs	r5, r5, #21
    1f8e:	0fdb      	lsrs	r3, r3, #31
    1f90:	42bc      	cmp	r4, r7
    1f92:	d02a      	beq.n	1fea <__gedf2+0x82>
    1f94:	4f25      	ldr	r7, [pc, #148]	; (202c <STACK_SIZE+0x2c>)
    1f96:	42bd      	cmp	r5, r7
    1f98:	d02d      	beq.n	1ff6 <__gedf2+0x8e>
    1f9a:	2c00      	cmp	r4, #0
    1f9c:	d10f      	bne.n	1fbe <__gedf2+0x56>
    1f9e:	4330      	orrs	r0, r6
    1fa0:	0007      	movs	r7, r0
    1fa2:	4681      	mov	r9, r0
    1fa4:	4278      	negs	r0, r7
    1fa6:	4178      	adcs	r0, r7
    1fa8:	b2c0      	uxtb	r0, r0
    1faa:	2d00      	cmp	r5, #0
    1fac:	d117      	bne.n	1fde <__gedf2+0x76>
    1fae:	465f      	mov	r7, fp
    1fb0:	433a      	orrs	r2, r7
    1fb2:	d114      	bne.n	1fde <__gedf2+0x76>
    1fb4:	464b      	mov	r3, r9
    1fb6:	2000      	movs	r0, #0
    1fb8:	2b00      	cmp	r3, #0
    1fba:	d00a      	beq.n	1fd2 <__gedf2+0x6a>
    1fbc:	e006      	b.n	1fcc <__gedf2+0x64>
    1fbe:	2d00      	cmp	r5, #0
    1fc0:	d102      	bne.n	1fc8 <__gedf2+0x60>
    1fc2:	4658      	mov	r0, fp
    1fc4:	4302      	orrs	r2, r0
    1fc6:	d001      	beq.n	1fcc <__gedf2+0x64>
    1fc8:	4299      	cmp	r1, r3
    1fca:	d018      	beq.n	1ffe <__gedf2+0x96>
    1fcc:	4248      	negs	r0, r1
    1fce:	2101      	movs	r1, #1
    1fd0:	4308      	orrs	r0, r1
    1fd2:	bc3c      	pop	{r2, r3, r4, r5}
    1fd4:	4690      	mov	r8, r2
    1fd6:	4699      	mov	r9, r3
    1fd8:	46a2      	mov	sl, r4
    1fda:	46ab      	mov	fp, r5
    1fdc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1fde:	2800      	cmp	r0, #0
    1fe0:	d0f2      	beq.n	1fc8 <__gedf2+0x60>
    1fe2:	2001      	movs	r0, #1
    1fe4:	3b01      	subs	r3, #1
    1fe6:	4318      	orrs	r0, r3
    1fe8:	e7f3      	b.n	1fd2 <__gedf2+0x6a>
    1fea:	0037      	movs	r7, r6
    1fec:	4307      	orrs	r7, r0
    1fee:	d0d1      	beq.n	1f94 <__gedf2+0x2c>
    1ff0:	2002      	movs	r0, #2
    1ff2:	4240      	negs	r0, r0
    1ff4:	e7ed      	b.n	1fd2 <__gedf2+0x6a>
    1ff6:	465f      	mov	r7, fp
    1ff8:	4317      	orrs	r7, r2
    1ffa:	d0ce      	beq.n	1f9a <__gedf2+0x32>
    1ffc:	e7f8      	b.n	1ff0 <__gedf2+0x88>
    1ffe:	42ac      	cmp	r4, r5
    2000:	dce4      	bgt.n	1fcc <__gedf2+0x64>
    2002:	da03      	bge.n	200c <STACK_SIZE+0xc>
    2004:	1e48      	subs	r0, r1, #1
    2006:	2101      	movs	r1, #1
    2008:	4308      	orrs	r0, r1
    200a:	e7e2      	b.n	1fd2 <__gedf2+0x6a>
    200c:	455e      	cmp	r6, fp
    200e:	d8dd      	bhi.n	1fcc <__gedf2+0x64>
    2010:	d006      	beq.n	2020 <STACK_SIZE+0x20>
    2012:	2000      	movs	r0, #0
    2014:	455e      	cmp	r6, fp
    2016:	d2dc      	bcs.n	1fd2 <__gedf2+0x6a>
    2018:	2301      	movs	r3, #1
    201a:	1e48      	subs	r0, r1, #1
    201c:	4318      	orrs	r0, r3
    201e:	e7d8      	b.n	1fd2 <__gedf2+0x6a>
    2020:	45c4      	cmp	ip, r8
    2022:	d8d3      	bhi.n	1fcc <__gedf2+0x64>
    2024:	2000      	movs	r0, #0
    2026:	45c4      	cmp	ip, r8
    2028:	d3f6      	bcc.n	2018 <STACK_SIZE+0x18>
    202a:	e7d2      	b.n	1fd2 <__gedf2+0x6a>
    202c:	000007ff 	.word	0x000007ff

00002030 <__ledf2>:
    2030:	b5f0      	push	{r4, r5, r6, r7, lr}
    2032:	464e      	mov	r6, r9
    2034:	4645      	mov	r5, r8
    2036:	46de      	mov	lr, fp
    2038:	4657      	mov	r7, sl
    203a:	005c      	lsls	r4, r3, #1
    203c:	b5e0      	push	{r5, r6, r7, lr}
    203e:	031f      	lsls	r7, r3, #12
    2040:	0fdb      	lsrs	r3, r3, #31
    2042:	4699      	mov	r9, r3
    2044:	4b2a      	ldr	r3, [pc, #168]	; (20f0 <__ledf2+0xc0>)
    2046:	030e      	lsls	r6, r1, #12
    2048:	004d      	lsls	r5, r1, #1
    204a:	0fc9      	lsrs	r1, r1, #31
    204c:	4684      	mov	ip, r0
    204e:	0b36      	lsrs	r6, r6, #12
    2050:	0d6d      	lsrs	r5, r5, #21
    2052:	468b      	mov	fp, r1
    2054:	4690      	mov	r8, r2
    2056:	0b3f      	lsrs	r7, r7, #12
    2058:	0d64      	lsrs	r4, r4, #21
    205a:	429d      	cmp	r5, r3
    205c:	d020      	beq.n	20a0 <__ledf2+0x70>
    205e:	4b24      	ldr	r3, [pc, #144]	; (20f0 <__ledf2+0xc0>)
    2060:	429c      	cmp	r4, r3
    2062:	d022      	beq.n	20aa <__ledf2+0x7a>
    2064:	2d00      	cmp	r5, #0
    2066:	d112      	bne.n	208e <__ledf2+0x5e>
    2068:	4330      	orrs	r0, r6
    206a:	4243      	negs	r3, r0
    206c:	4143      	adcs	r3, r0
    206e:	b2db      	uxtb	r3, r3
    2070:	2c00      	cmp	r4, #0
    2072:	d01f      	beq.n	20b4 <__ledf2+0x84>
    2074:	2b00      	cmp	r3, #0
    2076:	d00c      	beq.n	2092 <__ledf2+0x62>
    2078:	464b      	mov	r3, r9
    207a:	2001      	movs	r0, #1
    207c:	3b01      	subs	r3, #1
    207e:	4303      	orrs	r3, r0
    2080:	0018      	movs	r0, r3
    2082:	bc3c      	pop	{r2, r3, r4, r5}
    2084:	4690      	mov	r8, r2
    2086:	4699      	mov	r9, r3
    2088:	46a2      	mov	sl, r4
    208a:	46ab      	mov	fp, r5
    208c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    208e:	2c00      	cmp	r4, #0
    2090:	d016      	beq.n	20c0 <__ledf2+0x90>
    2092:	45cb      	cmp	fp, r9
    2094:	d017      	beq.n	20c6 <__ledf2+0x96>
    2096:	465b      	mov	r3, fp
    2098:	4259      	negs	r1, r3
    209a:	2301      	movs	r3, #1
    209c:	430b      	orrs	r3, r1
    209e:	e7ef      	b.n	2080 <__ledf2+0x50>
    20a0:	0031      	movs	r1, r6
    20a2:	2302      	movs	r3, #2
    20a4:	4301      	orrs	r1, r0
    20a6:	d1eb      	bne.n	2080 <__ledf2+0x50>
    20a8:	e7d9      	b.n	205e <__ledf2+0x2e>
    20aa:	0039      	movs	r1, r7
    20ac:	2302      	movs	r3, #2
    20ae:	4311      	orrs	r1, r2
    20b0:	d1e6      	bne.n	2080 <__ledf2+0x50>
    20b2:	e7d7      	b.n	2064 <__ledf2+0x34>
    20b4:	433a      	orrs	r2, r7
    20b6:	d1dd      	bne.n	2074 <__ledf2+0x44>
    20b8:	2300      	movs	r3, #0
    20ba:	2800      	cmp	r0, #0
    20bc:	d0e0      	beq.n	2080 <__ledf2+0x50>
    20be:	e7ea      	b.n	2096 <__ledf2+0x66>
    20c0:	433a      	orrs	r2, r7
    20c2:	d1e6      	bne.n	2092 <__ledf2+0x62>
    20c4:	e7e7      	b.n	2096 <__ledf2+0x66>
    20c6:	42a5      	cmp	r5, r4
    20c8:	dce5      	bgt.n	2096 <__ledf2+0x66>
    20ca:	db05      	blt.n	20d8 <__ledf2+0xa8>
    20cc:	42be      	cmp	r6, r7
    20ce:	d8e2      	bhi.n	2096 <__ledf2+0x66>
    20d0:	d007      	beq.n	20e2 <__ledf2+0xb2>
    20d2:	2300      	movs	r3, #0
    20d4:	42be      	cmp	r6, r7
    20d6:	d2d3      	bcs.n	2080 <__ledf2+0x50>
    20d8:	4659      	mov	r1, fp
    20da:	2301      	movs	r3, #1
    20dc:	3901      	subs	r1, #1
    20de:	430b      	orrs	r3, r1
    20e0:	e7ce      	b.n	2080 <__ledf2+0x50>
    20e2:	45c4      	cmp	ip, r8
    20e4:	d8d7      	bhi.n	2096 <__ledf2+0x66>
    20e6:	2300      	movs	r3, #0
    20e8:	45c4      	cmp	ip, r8
    20ea:	d3f5      	bcc.n	20d8 <__ledf2+0xa8>
    20ec:	e7c8      	b.n	2080 <__ledf2+0x50>
    20ee:	46c0      	nop			; (mov r8, r8)
    20f0:	000007ff 	.word	0x000007ff

000020f4 <__libc_init_array>:
    20f4:	b570      	push	{r4, r5, r6, lr}
    20f6:	4e0d      	ldr	r6, [pc, #52]	; (212c <__libc_init_array+0x38>)
    20f8:	4d0d      	ldr	r5, [pc, #52]	; (2130 <__libc_init_array+0x3c>)
    20fa:	2400      	movs	r4, #0
    20fc:	1bad      	subs	r5, r5, r6
    20fe:	10ad      	asrs	r5, r5, #2
    2100:	d005      	beq.n	210e <__libc_init_array+0x1a>
    2102:	00a3      	lsls	r3, r4, #2
    2104:	58f3      	ldr	r3, [r6, r3]
    2106:	3401      	adds	r4, #1
    2108:	4798      	blx	r3
    210a:	42a5      	cmp	r5, r4
    210c:	d1f9      	bne.n	2102 <__libc_init_array+0xe>
    210e:	f000 f8fb 	bl	2308 <_init>
    2112:	4e08      	ldr	r6, [pc, #32]	; (2134 <__libc_init_array+0x40>)
    2114:	4d08      	ldr	r5, [pc, #32]	; (2138 <__libc_init_array+0x44>)
    2116:	2400      	movs	r4, #0
    2118:	1bad      	subs	r5, r5, r6
    211a:	10ad      	asrs	r5, r5, #2
    211c:	d005      	beq.n	212a <__libc_init_array+0x36>
    211e:	00a3      	lsls	r3, r4, #2
    2120:	58f3      	ldr	r3, [r6, r3]
    2122:	3401      	adds	r4, #1
    2124:	4798      	blx	r3
    2126:	42a5      	cmp	r5, r4
    2128:	d1f9      	bne.n	211e <__libc_init_array+0x2a>
    212a:	bd70      	pop	{r4, r5, r6, pc}
    212c:	00002314 	.word	0x00002314
    2130:	00002314 	.word	0x00002314
    2134:	00002314 	.word	0x00002314
    2138:	0000231c 	.word	0x0000231c

0000213c <register_fini>:
    213c:	4b03      	ldr	r3, [pc, #12]	; (214c <register_fini+0x10>)
    213e:	b510      	push	{r4, lr}
    2140:	2b00      	cmp	r3, #0
    2142:	d002      	beq.n	214a <register_fini+0xe>
    2144:	4802      	ldr	r0, [pc, #8]	; (2150 <register_fini+0x14>)
    2146:	f000 f805 	bl	2154 <atexit>
    214a:	bd10      	pop	{r4, pc}
    214c:	00000000 	.word	0x00000000
    2150:	00002165 	.word	0x00002165

00002154 <atexit>:
    2154:	b510      	push	{r4, lr}
    2156:	0001      	movs	r1, r0
    2158:	2300      	movs	r3, #0
    215a:	2200      	movs	r2, #0
    215c:	2000      	movs	r0, #0
    215e:	f000 f81f 	bl	21a0 <__register_exitproc>
    2162:	bd10      	pop	{r4, pc}

00002164 <__libc_fini_array>:
    2164:	b570      	push	{r4, r5, r6, lr}
    2166:	4b09      	ldr	r3, [pc, #36]	; (218c <__libc_fini_array+0x28>)
    2168:	4c09      	ldr	r4, [pc, #36]	; (2190 <__libc_fini_array+0x2c>)
    216a:	1ae4      	subs	r4, r4, r3
    216c:	10a4      	asrs	r4, r4, #2
    216e:	d009      	beq.n	2184 <__libc_fini_array+0x20>
    2170:	4a08      	ldr	r2, [pc, #32]	; (2194 <__libc_fini_array+0x30>)
    2172:	18a5      	adds	r5, r4, r2
    2174:	00ad      	lsls	r5, r5, #2
    2176:	18ed      	adds	r5, r5, r3
    2178:	682b      	ldr	r3, [r5, #0]
    217a:	3c01      	subs	r4, #1
    217c:	4798      	blx	r3
    217e:	3d04      	subs	r5, #4
    2180:	2c00      	cmp	r4, #0
    2182:	d1f9      	bne.n	2178 <__libc_fini_array+0x14>
    2184:	f000 f8ca 	bl	231c <_fini>
    2188:	bd70      	pop	{r4, r5, r6, pc}
    218a:	46c0      	nop			; (mov r8, r8)
    218c:	00002328 	.word	0x00002328
    2190:	0000232c 	.word	0x0000232c
    2194:	3fffffff 	.word	0x3fffffff

00002198 <__retarget_lock_acquire_recursive>:
    2198:	4770      	bx	lr
    219a:	46c0      	nop			; (mov r8, r8)

0000219c <__retarget_lock_release_recursive>:
    219c:	4770      	bx	lr
    219e:	46c0      	nop			; (mov r8, r8)

000021a0 <__register_exitproc>:
    21a0:	b5f0      	push	{r4, r5, r6, r7, lr}
    21a2:	464e      	mov	r6, r9
    21a4:	4645      	mov	r5, r8
    21a6:	46de      	mov	lr, fp
    21a8:	4657      	mov	r7, sl
    21aa:	b5e0      	push	{r5, r6, r7, lr}
    21ac:	4d36      	ldr	r5, [pc, #216]	; (2288 <__register_exitproc+0xe8>)
    21ae:	b083      	sub	sp, #12
    21b0:	0006      	movs	r6, r0
    21b2:	6828      	ldr	r0, [r5, #0]
    21b4:	4698      	mov	r8, r3
    21b6:	000f      	movs	r7, r1
    21b8:	4691      	mov	r9, r2
    21ba:	f7ff ffed 	bl	2198 <__retarget_lock_acquire_recursive>
    21be:	4b33      	ldr	r3, [pc, #204]	; (228c <__register_exitproc+0xec>)
    21c0:	681c      	ldr	r4, [r3, #0]
    21c2:	23a4      	movs	r3, #164	; 0xa4
    21c4:	005b      	lsls	r3, r3, #1
    21c6:	58e0      	ldr	r0, [r4, r3]
    21c8:	2800      	cmp	r0, #0
    21ca:	d052      	beq.n	2272 <__register_exitproc+0xd2>
    21cc:	6843      	ldr	r3, [r0, #4]
    21ce:	2b1f      	cmp	r3, #31
    21d0:	dc13      	bgt.n	21fa <__register_exitproc+0x5a>
    21d2:	1c5a      	adds	r2, r3, #1
    21d4:	9201      	str	r2, [sp, #4]
    21d6:	2e00      	cmp	r6, #0
    21d8:	d128      	bne.n	222c <__register_exitproc+0x8c>
    21da:	9a01      	ldr	r2, [sp, #4]
    21dc:	3302      	adds	r3, #2
    21de:	009b      	lsls	r3, r3, #2
    21e0:	6042      	str	r2, [r0, #4]
    21e2:	501f      	str	r7, [r3, r0]
    21e4:	6828      	ldr	r0, [r5, #0]
    21e6:	f7ff ffd9 	bl	219c <__retarget_lock_release_recursive>
    21ea:	2000      	movs	r0, #0
    21ec:	b003      	add	sp, #12
    21ee:	bc3c      	pop	{r2, r3, r4, r5}
    21f0:	4690      	mov	r8, r2
    21f2:	4699      	mov	r9, r3
    21f4:	46a2      	mov	sl, r4
    21f6:	46ab      	mov	fp, r5
    21f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    21fa:	4b25      	ldr	r3, [pc, #148]	; (2290 <__register_exitproc+0xf0>)
    21fc:	2b00      	cmp	r3, #0
    21fe:	d03d      	beq.n	227c <__register_exitproc+0xdc>
    2200:	20c8      	movs	r0, #200	; 0xc8
    2202:	0040      	lsls	r0, r0, #1
    2204:	e000      	b.n	2208 <__register_exitproc+0x68>
    2206:	bf00      	nop
    2208:	2800      	cmp	r0, #0
    220a:	d037      	beq.n	227c <__register_exitproc+0xdc>
    220c:	22a4      	movs	r2, #164	; 0xa4
    220e:	2300      	movs	r3, #0
    2210:	0052      	lsls	r2, r2, #1
    2212:	58a1      	ldr	r1, [r4, r2]
    2214:	6043      	str	r3, [r0, #4]
    2216:	6001      	str	r1, [r0, #0]
    2218:	50a0      	str	r0, [r4, r2]
    221a:	3240      	adds	r2, #64	; 0x40
    221c:	5083      	str	r3, [r0, r2]
    221e:	3204      	adds	r2, #4
    2220:	5083      	str	r3, [r0, r2]
    2222:	3301      	adds	r3, #1
    2224:	9301      	str	r3, [sp, #4]
    2226:	2300      	movs	r3, #0
    2228:	2e00      	cmp	r6, #0
    222a:	d0d6      	beq.n	21da <__register_exitproc+0x3a>
    222c:	009a      	lsls	r2, r3, #2
    222e:	4692      	mov	sl, r2
    2230:	4482      	add	sl, r0
    2232:	464a      	mov	r2, r9
    2234:	2188      	movs	r1, #136	; 0x88
    2236:	4654      	mov	r4, sl
    2238:	5062      	str	r2, [r4, r1]
    223a:	22c4      	movs	r2, #196	; 0xc4
    223c:	0052      	lsls	r2, r2, #1
    223e:	4691      	mov	r9, r2
    2240:	4481      	add	r9, r0
    2242:	464a      	mov	r2, r9
    2244:	3987      	subs	r1, #135	; 0x87
    2246:	4099      	lsls	r1, r3
    2248:	6812      	ldr	r2, [r2, #0]
    224a:	468b      	mov	fp, r1
    224c:	430a      	orrs	r2, r1
    224e:	4694      	mov	ip, r2
    2250:	464a      	mov	r2, r9
    2252:	4661      	mov	r1, ip
    2254:	6011      	str	r1, [r2, #0]
    2256:	2284      	movs	r2, #132	; 0x84
    2258:	4641      	mov	r1, r8
    225a:	0052      	lsls	r2, r2, #1
    225c:	50a1      	str	r1, [r4, r2]
    225e:	2e02      	cmp	r6, #2
    2260:	d1bb      	bne.n	21da <__register_exitproc+0x3a>
    2262:	0002      	movs	r2, r0
    2264:	465c      	mov	r4, fp
    2266:	328d      	adds	r2, #141	; 0x8d
    2268:	32ff      	adds	r2, #255	; 0xff
    226a:	6811      	ldr	r1, [r2, #0]
    226c:	430c      	orrs	r4, r1
    226e:	6014      	str	r4, [r2, #0]
    2270:	e7b3      	b.n	21da <__register_exitproc+0x3a>
    2272:	0020      	movs	r0, r4
    2274:	304d      	adds	r0, #77	; 0x4d
    2276:	30ff      	adds	r0, #255	; 0xff
    2278:	50e0      	str	r0, [r4, r3]
    227a:	e7a7      	b.n	21cc <__register_exitproc+0x2c>
    227c:	6828      	ldr	r0, [r5, #0]
    227e:	f7ff ff8d 	bl	219c <__retarget_lock_release_recursive>
    2282:	2001      	movs	r0, #1
    2284:	4240      	negs	r0, r0
    2286:	e7b1      	b.n	21ec <__register_exitproc+0x4c>
    2288:	20000430 	.word	0x20000430
    228c:	00002304 	.word	0x00002304
    2290:	00000000 	.word	0x00000000
    2294:	0000066c 	.word	0x0000066c
    2298:	00000686 	.word	0x00000686
    229c:	0000069a 	.word	0x0000069a
    22a0:	000006ae 	.word	0x000006ae
    22a4:	000006c2 	.word	0x000006c2
    22a8:	000006d2 	.word	0x000006d2
    22ac:	000006e4 	.word	0x000006e4
    22b0:	000006fa 	.word	0x000006fa
    22b4:	0000070e 	.word	0x0000070e
    22b8:	8c3c1400 	.word	0x8c3c1400
    22bc:	000064c8 	.word	0x000064c8
    22c0:	00000000 	.word	0x00000000
    22c4:	000011b4 	.word	0x000011b4
    22c8:	00001196 	.word	0x00001196
    22cc:	00001150 	.word	0x00001150
    22d0:	0000106e 	.word	0x0000106e
    22d4:	00001150 	.word	0x00001150
    22d8:	00001188 	.word	0x00001188
    22dc:	00001150 	.word	0x00001150
    22e0:	0000106e 	.word	0x0000106e
    22e4:	00001196 	.word	0x00001196
    22e8:	00001196 	.word	0x00001196
    22ec:	00001188 	.word	0x00001188
    22f0:	0000106e 	.word	0x0000106e
    22f4:	00001066 	.word	0x00001066
    22f8:	00001066 	.word	0x00001066
    22fc:	00001066 	.word	0x00001066
    2300:	000013cc 	.word	0x000013cc

00002304 <_global_impure_ptr>:
    2304:	20000008                                ... 

00002308 <_init>:
    2308:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    230a:	46c0      	nop			; (mov r8, r8)
    230c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    230e:	bc08      	pop	{r3}
    2310:	469e      	mov	lr, r3
    2312:	4770      	bx	lr

00002314 <__init_array_start>:
    2314:	0000213d 	.word	0x0000213d

00002318 <__frame_dummy_init_array_entry>:
    2318:	000000dd                                ....

0000231c <_fini>:
    231c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    231e:	46c0      	nop			; (mov r8, r8)
    2320:	bcf8      	pop	{r3, r4, r5, r6, r7}
    2322:	bc08      	pop	{r3}
    2324:	469e      	mov	lr, r3
    2326:	4770      	bx	lr

00002328 <__fini_array_start>:
    2328:	000000b5 	.word	0x000000b5
